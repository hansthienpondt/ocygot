/*
Package ocygot is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /home/hans/go/pkg/mod/github.com/openconfig/ygot@v0.29.12/genutil/names.go
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/defined-sets/openconfig-defined-sets.yang
  - public/release/models/ethernet-segments/openconfig-ethernet-segments.yang
  - public/release/models/flex-algo/openconfig-flexalgo.yang
  - public/release/models/gribi/openconfig-gribi.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ethernet-ext.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/keychain/openconfig-keychain.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/macsec/openconfig-macsec.yang
  - public/release/models/mpls/openconfig-mpls.yang
  - public/release/models/multicast/openconfig-igmp.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/optical-transport/openconfig-optical-amplifier.yang
  - public/release/models/optical-transport/openconfig-terminal-device.yang
  - public/release/models/optical-transport/openconfig-transport-line-protection.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/ospf/openconfig-ospf-policy.yang
  - public/release/models/pcep/openconfig-pcep.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-routing-policy.yang
  - public/release/models/probes/openconfig-probes.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/relay-agent/openconfig-relay-agent.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/sampling/openconfig-sampling.yang
  - public/release/models/segment-routing/openconfig-segment-routing.yang
  - public/release/models/stp/openconfig-spanning-tree.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/telemetry/openconfig-telemetry.yang
  - public/release/models/vlan/openconfig-vlan.yang

Imported modules were sourced from:
  - public/...
*/
package ocygot

import (
	"github.com/openconfig/ygot/ygot"
)

// Component_OpticalChannel_ModulatorBiasXPhasePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhasePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhasePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhasePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MinPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXPhase_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-x-phase/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXPhase_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/avg"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) Avg() *Component_OpticalChannel_ModulatorBiasXPhase_AvgPath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/avg"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) Avg() *Component_OpticalChannel_ModulatorBiasXPhase_AvgPathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/instant"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) Instant() *Component_OpticalChannel_ModulatorBiasXPhase_InstantPath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/instant"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) Instant() *Component_OpticalChannel_ModulatorBiasXPhase_InstantPathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/interval"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) Interval() *Component_OpticalChannel_ModulatorBiasXPhase_IntervalPath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/interval"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) Interval() *Component_OpticalChannel_ModulatorBiasXPhase_IntervalPathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/max"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) Max() *Component_OpticalChannel_ModulatorBiasXPhase_MaxPath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/max"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) Max() *Component_OpticalChannel_ModulatorBiasXPhase_MaxPathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/max-time"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) MaxTime() *Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/max-time"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) MaxTime() *Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/min"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) Min() *Component_OpticalChannel_ModulatorBiasXPhase_MinPath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/min"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) Min() *Component_OpticalChannel_ModulatorBiasXPhase_MinPathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/min-time"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePath) MinTime() *Component_OpticalChannel_ModulatorBiasXPhase_MinTimePath {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-x-phase/min-time"
func (n *Component_OpticalChannel_ModulatorBiasXPhasePathAny) MinTime() *Component_OpticalChannel_ModulatorBiasXPhase_MinTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasXPhase_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_ModulatorBiasXiPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi YANG schema element.
type Component_OpticalChannel_ModulatorBiasXiPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXiPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi YANG schema element.
type Component_OpticalChannel_ModulatorBiasXiPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MinPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXi_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xi/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXi_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/avg"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) Avg() *Component_OpticalChannel_ModulatorBiasXi_AvgPath {
	return &Component_OpticalChannel_ModulatorBiasXi_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/avg"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) Avg() *Component_OpticalChannel_ModulatorBiasXi_AvgPathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/instant"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) Instant() *Component_OpticalChannel_ModulatorBiasXi_InstantPath {
	return &Component_OpticalChannel_ModulatorBiasXi_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/instant"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) Instant() *Component_OpticalChannel_ModulatorBiasXi_InstantPathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/interval"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) Interval() *Component_OpticalChannel_ModulatorBiasXi_IntervalPath {
	return &Component_OpticalChannel_ModulatorBiasXi_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/interval"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) Interval() *Component_OpticalChannel_ModulatorBiasXi_IntervalPathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/max"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) Max() *Component_OpticalChannel_ModulatorBiasXi_MaxPath {
	return &Component_OpticalChannel_ModulatorBiasXi_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/max"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) Max() *Component_OpticalChannel_ModulatorBiasXi_MaxPathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/max-time"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) MaxTime() *Component_OpticalChannel_ModulatorBiasXi_MaxTimePath {
	return &Component_OpticalChannel_ModulatorBiasXi_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/max-time"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) MaxTime() *Component_OpticalChannel_ModulatorBiasXi_MaxTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/min"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) Min() *Component_OpticalChannel_ModulatorBiasXi_MinPath {
	return &Component_OpticalChannel_ModulatorBiasXi_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/min"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) Min() *Component_OpticalChannel_ModulatorBiasXi_MinPathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/min-time"
func (n *Component_OpticalChannel_ModulatorBiasXiPath) MinTime() *Component_OpticalChannel_ModulatorBiasXi_MinTimePath {
	return &Component_OpticalChannel_ModulatorBiasXi_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xi/min-time"
func (n *Component_OpticalChannel_ModulatorBiasXiPathAny) MinTime() *Component_OpticalChannel_ModulatorBiasXi_MinTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasXi_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_ModulatorBiasXqPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq YANG schema element.
type Component_OpticalChannel_ModulatorBiasXqPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXqPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq YANG schema element.
type Component_OpticalChannel_ModulatorBiasXqPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MinPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasXq_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-xq/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasXq_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/avg"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) Avg() *Component_OpticalChannel_ModulatorBiasXq_AvgPath {
	return &Component_OpticalChannel_ModulatorBiasXq_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/avg"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) Avg() *Component_OpticalChannel_ModulatorBiasXq_AvgPathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/instant"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) Instant() *Component_OpticalChannel_ModulatorBiasXq_InstantPath {
	return &Component_OpticalChannel_ModulatorBiasXq_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/instant"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) Instant() *Component_OpticalChannel_ModulatorBiasXq_InstantPathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/interval"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) Interval() *Component_OpticalChannel_ModulatorBiasXq_IntervalPath {
	return &Component_OpticalChannel_ModulatorBiasXq_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/interval"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) Interval() *Component_OpticalChannel_ModulatorBiasXq_IntervalPathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/max"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) Max() *Component_OpticalChannel_ModulatorBiasXq_MaxPath {
	return &Component_OpticalChannel_ModulatorBiasXq_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/max"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) Max() *Component_OpticalChannel_ModulatorBiasXq_MaxPathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/max-time"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) MaxTime() *Component_OpticalChannel_ModulatorBiasXq_MaxTimePath {
	return &Component_OpticalChannel_ModulatorBiasXq_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/max-time"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) MaxTime() *Component_OpticalChannel_ModulatorBiasXq_MaxTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/min"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) Min() *Component_OpticalChannel_ModulatorBiasXq_MinPath {
	return &Component_OpticalChannel_ModulatorBiasXq_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/min"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) Min() *Component_OpticalChannel_ModulatorBiasXq_MinPathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/min-time"
func (n *Component_OpticalChannel_ModulatorBiasXqPath) MinTime() *Component_OpticalChannel_ModulatorBiasXq_MinTimePath {
	return &Component_OpticalChannel_ModulatorBiasXq_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-xq/min-time"
func (n *Component_OpticalChannel_ModulatorBiasXqPathAny) MinTime() *Component_OpticalChannel_ModulatorBiasXq_MinTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasXq_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_ModulatorBiasYPhasePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhasePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhasePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhasePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MinPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYPhase_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-y-phase/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYPhase_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/avg"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) Avg() *Component_OpticalChannel_ModulatorBiasYPhase_AvgPath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/avg"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) Avg() *Component_OpticalChannel_ModulatorBiasYPhase_AvgPathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/instant"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) Instant() *Component_OpticalChannel_ModulatorBiasYPhase_InstantPath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/instant"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) Instant() *Component_OpticalChannel_ModulatorBiasYPhase_InstantPathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/interval"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) Interval() *Component_OpticalChannel_ModulatorBiasYPhase_IntervalPath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/interval"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) Interval() *Component_OpticalChannel_ModulatorBiasYPhase_IntervalPathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/max"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) Max() *Component_OpticalChannel_ModulatorBiasYPhase_MaxPath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/max"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) Max() *Component_OpticalChannel_ModulatorBiasYPhase_MaxPathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/max-time"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) MaxTime() *Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/max-time"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) MaxTime() *Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/min"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) Min() *Component_OpticalChannel_ModulatorBiasYPhase_MinPath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/min"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) Min() *Component_OpticalChannel_ModulatorBiasYPhase_MinPathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/min-time"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePath) MinTime() *Component_OpticalChannel_ModulatorBiasYPhase_MinTimePath {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-y-phase/min-time"
func (n *Component_OpticalChannel_ModulatorBiasYPhasePathAny) MinTime() *Component_OpticalChannel_ModulatorBiasYPhase_MinTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasYPhase_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_ModulatorBiasYiPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi YANG schema element.
type Component_OpticalChannel_ModulatorBiasYiPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYiPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi YANG schema element.
type Component_OpticalChannel_ModulatorBiasYiPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MinPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYi_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yi/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYi_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/avg"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) Avg() *Component_OpticalChannel_ModulatorBiasYi_AvgPath {
	return &Component_OpticalChannel_ModulatorBiasYi_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/avg"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) Avg() *Component_OpticalChannel_ModulatorBiasYi_AvgPathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/instant"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) Instant() *Component_OpticalChannel_ModulatorBiasYi_InstantPath {
	return &Component_OpticalChannel_ModulatorBiasYi_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/instant"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) Instant() *Component_OpticalChannel_ModulatorBiasYi_InstantPathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/interval"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) Interval() *Component_OpticalChannel_ModulatorBiasYi_IntervalPath {
	return &Component_OpticalChannel_ModulatorBiasYi_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/interval"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) Interval() *Component_OpticalChannel_ModulatorBiasYi_IntervalPathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/max"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) Max() *Component_OpticalChannel_ModulatorBiasYi_MaxPath {
	return &Component_OpticalChannel_ModulatorBiasYi_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/max"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) Max() *Component_OpticalChannel_ModulatorBiasYi_MaxPathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/max-time"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) MaxTime() *Component_OpticalChannel_ModulatorBiasYi_MaxTimePath {
	return &Component_OpticalChannel_ModulatorBiasYi_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/max-time"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) MaxTime() *Component_OpticalChannel_ModulatorBiasYi_MaxTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/min"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) Min() *Component_OpticalChannel_ModulatorBiasYi_MinPath {
	return &Component_OpticalChannel_ModulatorBiasYi_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/min"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) Min() *Component_OpticalChannel_ModulatorBiasYi_MinPathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/min-time"
func (n *Component_OpticalChannel_ModulatorBiasYiPath) MinTime() *Component_OpticalChannel_ModulatorBiasYi_MinTimePath {
	return &Component_OpticalChannel_ModulatorBiasYi_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yi/min-time"
func (n *Component_OpticalChannel_ModulatorBiasYiPathAny) MinTime() *Component_OpticalChannel_ModulatorBiasYi_MinTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasYi_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_ModulatorBiasYqPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq YANG schema element.
type Component_OpticalChannel_ModulatorBiasYqPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYqPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq YANG schema element.
type Component_OpticalChannel_ModulatorBiasYqPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/avg YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/instant YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/interval YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/max YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/max-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MinPath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/min YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_ModulatorBiasYq_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/modulator-bias-yq/min-time YANG schema element.
type Component_OpticalChannel_ModulatorBiasYq_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/avg"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) Avg() *Component_OpticalChannel_ModulatorBiasYq_AvgPath {
	return &Component_OpticalChannel_ModulatorBiasYq_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/avg"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) Avg() *Component_OpticalChannel_ModulatorBiasYq_AvgPathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/instant"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) Instant() *Component_OpticalChannel_ModulatorBiasYq_InstantPath {
	return &Component_OpticalChannel_ModulatorBiasYq_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/instant"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) Instant() *Component_OpticalChannel_ModulatorBiasYq_InstantPathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/interval"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) Interval() *Component_OpticalChannel_ModulatorBiasYq_IntervalPath {
	return &Component_OpticalChannel_ModulatorBiasYq_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/interval"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) Interval() *Component_OpticalChannel_ModulatorBiasYq_IntervalPathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/max"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) Max() *Component_OpticalChannel_ModulatorBiasYq_MaxPath {
	return &Component_OpticalChannel_ModulatorBiasYq_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/max"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) Max() *Component_OpticalChannel_ModulatorBiasYq_MaxPathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/max-time"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) MaxTime() *Component_OpticalChannel_ModulatorBiasYq_MaxTimePath {
	return &Component_OpticalChannel_ModulatorBiasYq_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/max-time"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) MaxTime() *Component_OpticalChannel_ModulatorBiasYq_MaxTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/min"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) Min() *Component_OpticalChannel_ModulatorBiasYq_MinPath {
	return &Component_OpticalChannel_ModulatorBiasYq_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/min"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) Min() *Component_OpticalChannel_ModulatorBiasYq_MinPathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/min-time"
func (n *Component_OpticalChannel_ModulatorBiasYqPath) MinTime() *Component_OpticalChannel_ModulatorBiasYq_MinTimePath {
	return &Component_OpticalChannel_ModulatorBiasYq_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/modulator-bias-yq/min-time"
func (n *Component_OpticalChannel_ModulatorBiasYqPathAny) MinTime() *Component_OpticalChannel_ModulatorBiasYq_MinTimePathAny {
	return &Component_OpticalChannel_ModulatorBiasYq_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_OsnrPath represents the /openconfig-platform/components/component/optical-channel/state/osnr YANG schema element.
type Component_OpticalChannel_OsnrPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OsnrPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr YANG schema element.
type Component_OpticalChannel_OsnrPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/osnr/avg YANG schema element.
type Component_OpticalChannel_Osnr_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/avg YANG schema element.
type Component_OpticalChannel_Osnr_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/osnr/instant YANG schema element.
type Component_OpticalChannel_Osnr_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/instant YANG schema element.
type Component_OpticalChannel_Osnr_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/osnr/interval YANG schema element.
type Component_OpticalChannel_Osnr_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/interval YANG schema element.
type Component_OpticalChannel_Osnr_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/osnr/max YANG schema element.
type Component_OpticalChannel_Osnr_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/max YANG schema element.
type Component_OpticalChannel_Osnr_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/osnr/max-time YANG schema element.
type Component_OpticalChannel_Osnr_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/max-time YANG schema element.
type Component_OpticalChannel_Osnr_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MinPath represents the /openconfig-platform/components/component/optical-channel/state/osnr/min YANG schema element.
type Component_OpticalChannel_Osnr_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/min YANG schema element.
type Component_OpticalChannel_Osnr_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/osnr/min-time YANG schema element.
type Component_OpticalChannel_Osnr_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_Osnr_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/osnr/min-time YANG schema element.
type Component_OpticalChannel_Osnr_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/osnr/avg"
func (n *Component_OpticalChannel_OsnrPath) Avg() *Component_OpticalChannel_Osnr_AvgPath {
	return &Component_OpticalChannel_Osnr_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/osnr/avg"
func (n *Component_OpticalChannel_OsnrPathAny) Avg() *Component_OpticalChannel_Osnr_AvgPathAny {
	return &Component_OpticalChannel_Osnr_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/osnr/instant"
func (n *Component_OpticalChannel_OsnrPath) Instant() *Component_OpticalChannel_Osnr_InstantPath {
	return &Component_OpticalChannel_Osnr_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/osnr/instant"
func (n *Component_OpticalChannel_OsnrPathAny) Instant() *Component_OpticalChannel_Osnr_InstantPathAny {
	return &Component_OpticalChannel_Osnr_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/osnr/interval"
func (n *Component_OpticalChannel_OsnrPath) Interval() *Component_OpticalChannel_Osnr_IntervalPath {
	return &Component_OpticalChannel_Osnr_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/osnr/interval"
func (n *Component_OpticalChannel_OsnrPathAny) Interval() *Component_OpticalChannel_Osnr_IntervalPathAny {
	return &Component_OpticalChannel_Osnr_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/osnr/max"
func (n *Component_OpticalChannel_OsnrPath) Max() *Component_OpticalChannel_Osnr_MaxPath {
	return &Component_OpticalChannel_Osnr_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/osnr/max"
func (n *Component_OpticalChannel_OsnrPathAny) Max() *Component_OpticalChannel_Osnr_MaxPathAny {
	return &Component_OpticalChannel_Osnr_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/osnr/max-time"
func (n *Component_OpticalChannel_OsnrPath) MaxTime() *Component_OpticalChannel_Osnr_MaxTimePath {
	return &Component_OpticalChannel_Osnr_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/osnr/max-time"
func (n *Component_OpticalChannel_OsnrPathAny) MaxTime() *Component_OpticalChannel_Osnr_MaxTimePathAny {
	return &Component_OpticalChannel_Osnr_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/osnr/min"
func (n *Component_OpticalChannel_OsnrPath) Min() *Component_OpticalChannel_Osnr_MinPath {
	return &Component_OpticalChannel_Osnr_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/osnr/min"
func (n *Component_OpticalChannel_OsnrPathAny) Min() *Component_OpticalChannel_Osnr_MinPathAny {
	return &Component_OpticalChannel_Osnr_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/osnr/min-time"
func (n *Component_OpticalChannel_OsnrPath) MinTime() *Component_OpticalChannel_Osnr_MinTimePath {
	return &Component_OpticalChannel_Osnr_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/osnr/min-time"
func (n *Component_OpticalChannel_OsnrPathAny) MinTime() *Component_OpticalChannel_Osnr_MinTimePathAny {
	return &Component_OpticalChannel_Osnr_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_OutputPowerPath represents the /openconfig-platform/components/component/optical-channel/state/output-power YANG schema element.
type Component_OpticalChannel_OutputPowerPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power YANG schema element.
type Component_OpticalChannel_OutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/output-power/avg YANG schema element.
type Component_OpticalChannel_OutputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/avg YANG schema element.
type Component_OpticalChannel_OutputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/output-power/instant YANG schema element.
type Component_OpticalChannel_OutputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/instant YANG schema element.
type Component_OpticalChannel_OutputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/output-power/interval YANG schema element.
type Component_OpticalChannel_OutputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/interval YANG schema element.
type Component_OpticalChannel_OutputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/output-power/max YANG schema element.
type Component_OpticalChannel_OutputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/max YANG schema element.
type Component_OpticalChannel_OutputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/output-power/max-time YANG schema element.
type Component_OpticalChannel_OutputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/max-time YANG schema element.
type Component_OpticalChannel_OutputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MinPath represents the /openconfig-platform/components/component/optical-channel/state/output-power/min YANG schema element.
type Component_OpticalChannel_OutputPower_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/min YANG schema element.
type Component_OpticalChannel_OutputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/output-power/min-time YANG schema element.
type Component_OpticalChannel_OutputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_OutputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/output-power/min-time YANG schema element.
type Component_OpticalChannel_OutputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/output-power/avg"
func (n *Component_OpticalChannel_OutputPowerPath) Avg() *Component_OpticalChannel_OutputPower_AvgPath {
	return &Component_OpticalChannel_OutputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/output-power/avg"
func (n *Component_OpticalChannel_OutputPowerPathAny) Avg() *Component_OpticalChannel_OutputPower_AvgPathAny {
	return &Component_OpticalChannel_OutputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/output-power/instant"
func (n *Component_OpticalChannel_OutputPowerPath) Instant() *Component_OpticalChannel_OutputPower_InstantPath {
	return &Component_OpticalChannel_OutputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/output-power/instant"
func (n *Component_OpticalChannel_OutputPowerPathAny) Instant() *Component_OpticalChannel_OutputPower_InstantPathAny {
	return &Component_OpticalChannel_OutputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/output-power/interval"
func (n *Component_OpticalChannel_OutputPowerPath) Interval() *Component_OpticalChannel_OutputPower_IntervalPath {
	return &Component_OpticalChannel_OutputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/output-power/interval"
func (n *Component_OpticalChannel_OutputPowerPathAny) Interval() *Component_OpticalChannel_OutputPower_IntervalPathAny {
	return &Component_OpticalChannel_OutputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/output-power/max"
func (n *Component_OpticalChannel_OutputPowerPath) Max() *Component_OpticalChannel_OutputPower_MaxPath {
	return &Component_OpticalChannel_OutputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/output-power/max"
func (n *Component_OpticalChannel_OutputPowerPathAny) Max() *Component_OpticalChannel_OutputPower_MaxPathAny {
	return &Component_OpticalChannel_OutputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/output-power/max-time"
func (n *Component_OpticalChannel_OutputPowerPath) MaxTime() *Component_OpticalChannel_OutputPower_MaxTimePath {
	return &Component_OpticalChannel_OutputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/output-power/max-time"
func (n *Component_OpticalChannel_OutputPowerPathAny) MaxTime() *Component_OpticalChannel_OutputPower_MaxTimePathAny {
	return &Component_OpticalChannel_OutputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/output-power/min"
func (n *Component_OpticalChannel_OutputPowerPath) Min() *Component_OpticalChannel_OutputPower_MinPath {
	return &Component_OpticalChannel_OutputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/output-power/min"
func (n *Component_OpticalChannel_OutputPowerPathAny) Min() *Component_OpticalChannel_OutputPower_MinPathAny {
	return &Component_OpticalChannel_OutputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/output-power/min-time"
func (n *Component_OpticalChannel_OutputPowerPath) MinTime() *Component_OpticalChannel_OutputPower_MinTimePath {
	return &Component_OpticalChannel_OutputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/output-power/min-time"
func (n *Component_OpticalChannel_OutputPowerPathAny) MinTime() *Component_OpticalChannel_OutputPower_MinTimePathAny {
	return &Component_OpticalChannel_OutputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_PolarizationDependentLossPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss YANG schema element.
type Component_OpticalChannel_PolarizationDependentLossPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLossPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss YANG schema element.
type Component_OpticalChannel_PolarizationDependentLossPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/avg YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/avg YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/instant YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/instant YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/interval YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/interval YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/max YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/max YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/max-time YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/max-time YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MinPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/min YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/min YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/min-time YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationDependentLoss_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss/min-time YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/avg"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) Avg() *Component_OpticalChannel_PolarizationDependentLoss_AvgPath {
	return &Component_OpticalChannel_PolarizationDependentLoss_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/avg"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) Avg() *Component_OpticalChannel_PolarizationDependentLoss_AvgPathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/instant"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) Instant() *Component_OpticalChannel_PolarizationDependentLoss_InstantPath {
	return &Component_OpticalChannel_PolarizationDependentLoss_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/instant"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) Instant() *Component_OpticalChannel_PolarizationDependentLoss_InstantPathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/interval"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) Interval() *Component_OpticalChannel_PolarizationDependentLoss_IntervalPath {
	return &Component_OpticalChannel_PolarizationDependentLoss_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/interval"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) Interval() *Component_OpticalChannel_PolarizationDependentLoss_IntervalPathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/max"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) Max() *Component_OpticalChannel_PolarizationDependentLoss_MaxPath {
	return &Component_OpticalChannel_PolarizationDependentLoss_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/max"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) Max() *Component_OpticalChannel_PolarizationDependentLoss_MaxPathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/max-time"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) MaxTime() *Component_OpticalChannel_PolarizationDependentLoss_MaxTimePath {
	return &Component_OpticalChannel_PolarizationDependentLoss_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/max-time"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) MaxTime() *Component_OpticalChannel_PolarizationDependentLoss_MaxTimePathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/min"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) Min() *Component_OpticalChannel_PolarizationDependentLoss_MinPath {
	return &Component_OpticalChannel_PolarizationDependentLoss_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/min"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) Min() *Component_OpticalChannel_PolarizationDependentLoss_MinPathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/min-time"
func (n *Component_OpticalChannel_PolarizationDependentLossPath) MinTime() *Component_OpticalChannel_PolarizationDependentLoss_MinTimePath {
	return &Component_OpticalChannel_PolarizationDependentLoss_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/polarization-dependent-loss/min-time"
func (n *Component_OpticalChannel_PolarizationDependentLossPathAny) MinTime() *Component_OpticalChannel_PolarizationDependentLoss_MinTimePathAny {
	return &Component_OpticalChannel_PolarizationDependentLoss_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_PolarizationModeDispersionPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersionPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersionPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersionPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/avg YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/avg YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/instant YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/instant YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/interval YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/interval YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/max YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/max YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/max-time YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/max-time YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MinPath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/min YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/min YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/min-time YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PolarizationModeDispersion_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion/min-time YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/avg"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) Avg() *Component_OpticalChannel_PolarizationModeDispersion_AvgPath {
	return &Component_OpticalChannel_PolarizationModeDispersion_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/avg"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) Avg() *Component_OpticalChannel_PolarizationModeDispersion_AvgPathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/instant"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) Instant() *Component_OpticalChannel_PolarizationModeDispersion_InstantPath {
	return &Component_OpticalChannel_PolarizationModeDispersion_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/instant"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) Instant() *Component_OpticalChannel_PolarizationModeDispersion_InstantPathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/interval"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) Interval() *Component_OpticalChannel_PolarizationModeDispersion_IntervalPath {
	return &Component_OpticalChannel_PolarizationModeDispersion_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/interval"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) Interval() *Component_OpticalChannel_PolarizationModeDispersion_IntervalPathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/max"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) Max() *Component_OpticalChannel_PolarizationModeDispersion_MaxPath {
	return &Component_OpticalChannel_PolarizationModeDispersion_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/max"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) Max() *Component_OpticalChannel_PolarizationModeDispersion_MaxPathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/max-time"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) MaxTime() *Component_OpticalChannel_PolarizationModeDispersion_MaxTimePath {
	return &Component_OpticalChannel_PolarizationModeDispersion_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/max-time"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) MaxTime() *Component_OpticalChannel_PolarizationModeDispersion_MaxTimePathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/min"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) Min() *Component_OpticalChannel_PolarizationModeDispersion_MinPath {
	return &Component_OpticalChannel_PolarizationModeDispersion_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/min"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) Min() *Component_OpticalChannel_PolarizationModeDispersion_MinPathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/min-time"
func (n *Component_OpticalChannel_PolarizationModeDispersionPath) MinTime() *Component_OpticalChannel_PolarizationModeDispersion_MinTimePath {
	return &Component_OpticalChannel_PolarizationModeDispersion_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/polarization-mode-dispersion/min-time"
func (n *Component_OpticalChannel_PolarizationModeDispersionPathAny) MinTime() *Component_OpticalChannel_PolarizationModeDispersion_MinTimePathAny {
	return &Component_OpticalChannel_PolarizationModeDispersion_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_PostFecBerPath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber YANG schema element.
type Component_OpticalChannel_PostFecBerPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBerPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber YANG schema element.
type Component_OpticalChannel_PostFecBerPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/avg YANG schema element.
type Component_OpticalChannel_PostFecBer_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/avg YANG schema element.
type Component_OpticalChannel_PostFecBer_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/instant YANG schema element.
type Component_OpticalChannel_PostFecBer_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/instant YANG schema element.
type Component_OpticalChannel_PostFecBer_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/interval YANG schema element.
type Component_OpticalChannel_PostFecBer_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/interval YANG schema element.
type Component_OpticalChannel_PostFecBer_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/max YANG schema element.
type Component_OpticalChannel_PostFecBer_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/max YANG schema element.
type Component_OpticalChannel_PostFecBer_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/max-time YANG schema element.
type Component_OpticalChannel_PostFecBer_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/max-time YANG schema element.
type Component_OpticalChannel_PostFecBer_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MinPath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/min YANG schema element.
type Component_OpticalChannel_PostFecBer_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/min YANG schema element.
type Component_OpticalChannel_PostFecBer_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/min-time YANG schema element.
type Component_OpticalChannel_PostFecBer_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PostFecBer_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/post-fec-ber/min-time YANG schema element.
type Component_OpticalChannel_PostFecBer_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/avg"
func (n *Component_OpticalChannel_PostFecBerPath) Avg() *Component_OpticalChannel_PostFecBer_AvgPath {
	return &Component_OpticalChannel_PostFecBer_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/avg"
func (n *Component_OpticalChannel_PostFecBerPathAny) Avg() *Component_OpticalChannel_PostFecBer_AvgPathAny {
	return &Component_OpticalChannel_PostFecBer_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/instant"
func (n *Component_OpticalChannel_PostFecBerPath) Instant() *Component_OpticalChannel_PostFecBer_InstantPath {
	return &Component_OpticalChannel_PostFecBer_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/instant"
func (n *Component_OpticalChannel_PostFecBerPathAny) Instant() *Component_OpticalChannel_PostFecBer_InstantPathAny {
	return &Component_OpticalChannel_PostFecBer_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/interval"
func (n *Component_OpticalChannel_PostFecBerPath) Interval() *Component_OpticalChannel_PostFecBer_IntervalPath {
	return &Component_OpticalChannel_PostFecBer_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/interval"
func (n *Component_OpticalChannel_PostFecBerPathAny) Interval() *Component_OpticalChannel_PostFecBer_IntervalPathAny {
	return &Component_OpticalChannel_PostFecBer_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/max"
func (n *Component_OpticalChannel_PostFecBerPath) Max() *Component_OpticalChannel_PostFecBer_MaxPath {
	return &Component_OpticalChannel_PostFecBer_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/max"
func (n *Component_OpticalChannel_PostFecBerPathAny) Max() *Component_OpticalChannel_PostFecBer_MaxPathAny {
	return &Component_OpticalChannel_PostFecBer_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/max-time"
func (n *Component_OpticalChannel_PostFecBerPath) MaxTime() *Component_OpticalChannel_PostFecBer_MaxTimePath {
	return &Component_OpticalChannel_PostFecBer_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/max-time"
func (n *Component_OpticalChannel_PostFecBerPathAny) MaxTime() *Component_OpticalChannel_PostFecBer_MaxTimePathAny {
	return &Component_OpticalChannel_PostFecBer_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/min"
func (n *Component_OpticalChannel_PostFecBerPath) Min() *Component_OpticalChannel_PostFecBer_MinPath {
	return &Component_OpticalChannel_PostFecBer_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/min"
func (n *Component_OpticalChannel_PostFecBerPathAny) Min() *Component_OpticalChannel_PostFecBer_MinPathAny {
	return &Component_OpticalChannel_PostFecBer_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/min-time"
func (n *Component_OpticalChannel_PostFecBerPath) MinTime() *Component_OpticalChannel_PostFecBer_MinTimePath {
	return &Component_OpticalChannel_PostFecBer_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/post-fec-ber/min-time"
func (n *Component_OpticalChannel_PostFecBerPathAny) MinTime() *Component_OpticalChannel_PostFecBer_MinTimePathAny {
	return &Component_OpticalChannel_PostFecBer_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_PreFecBerPath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber YANG schema element.
type Component_OpticalChannel_PreFecBerPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBerPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber YANG schema element.
type Component_OpticalChannel_PreFecBerPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/avg YANG schema element.
type Component_OpticalChannel_PreFecBer_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/avg YANG schema element.
type Component_OpticalChannel_PreFecBer_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/instant YANG schema element.
type Component_OpticalChannel_PreFecBer_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/instant YANG schema element.
type Component_OpticalChannel_PreFecBer_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/interval YANG schema element.
type Component_OpticalChannel_PreFecBer_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/interval YANG schema element.
type Component_OpticalChannel_PreFecBer_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/max YANG schema element.
type Component_OpticalChannel_PreFecBer_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/max YANG schema element.
type Component_OpticalChannel_PreFecBer_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/max-time YANG schema element.
type Component_OpticalChannel_PreFecBer_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/max-time YANG schema element.
type Component_OpticalChannel_PreFecBer_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MinPath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/min YANG schema element.
type Component_OpticalChannel_PreFecBer_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/min YANG schema element.
type Component_OpticalChannel_PreFecBer_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/min-time YANG schema element.
type Component_OpticalChannel_PreFecBer_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_PreFecBer_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/pre-fec-ber/min-time YANG schema element.
type Component_OpticalChannel_PreFecBer_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/avg"
func (n *Component_OpticalChannel_PreFecBerPath) Avg() *Component_OpticalChannel_PreFecBer_AvgPath {
	return &Component_OpticalChannel_PreFecBer_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/avg"
func (n *Component_OpticalChannel_PreFecBerPathAny) Avg() *Component_OpticalChannel_PreFecBer_AvgPathAny {
	return &Component_OpticalChannel_PreFecBer_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/instant"
func (n *Component_OpticalChannel_PreFecBerPath) Instant() *Component_OpticalChannel_PreFecBer_InstantPath {
	return &Component_OpticalChannel_PreFecBer_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/instant"
func (n *Component_OpticalChannel_PreFecBerPathAny) Instant() *Component_OpticalChannel_PreFecBer_InstantPathAny {
	return &Component_OpticalChannel_PreFecBer_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/interval"
func (n *Component_OpticalChannel_PreFecBerPath) Interval() *Component_OpticalChannel_PreFecBer_IntervalPath {
	return &Component_OpticalChannel_PreFecBer_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/interval"
func (n *Component_OpticalChannel_PreFecBerPathAny) Interval() *Component_OpticalChannel_PreFecBer_IntervalPathAny {
	return &Component_OpticalChannel_PreFecBer_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/max"
func (n *Component_OpticalChannel_PreFecBerPath) Max() *Component_OpticalChannel_PreFecBer_MaxPath {
	return &Component_OpticalChannel_PreFecBer_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/max"
func (n *Component_OpticalChannel_PreFecBerPathAny) Max() *Component_OpticalChannel_PreFecBer_MaxPathAny {
	return &Component_OpticalChannel_PreFecBer_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/max-time"
func (n *Component_OpticalChannel_PreFecBerPath) MaxTime() *Component_OpticalChannel_PreFecBer_MaxTimePath {
	return &Component_OpticalChannel_PreFecBer_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/max-time"
func (n *Component_OpticalChannel_PreFecBerPathAny) MaxTime() *Component_OpticalChannel_PreFecBer_MaxTimePathAny {
	return &Component_OpticalChannel_PreFecBer_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/min"
func (n *Component_OpticalChannel_PreFecBerPath) Min() *Component_OpticalChannel_PreFecBer_MinPath {
	return &Component_OpticalChannel_PreFecBer_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/min"
func (n *Component_OpticalChannel_PreFecBerPathAny) Min() *Component_OpticalChannel_PreFecBer_MinPathAny {
	return &Component_OpticalChannel_PreFecBer_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/min-time"
func (n *Component_OpticalChannel_PreFecBerPath) MinTime() *Component_OpticalChannel_PreFecBer_MinTimePath {
	return &Component_OpticalChannel_PreFecBer_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/pre-fec-ber/min-time"
func (n *Component_OpticalChannel_PreFecBerPathAny) MinTime() *Component_OpticalChannel_PreFecBer_MinTimePathAny {
	return &Component_OpticalChannel_PreFecBer_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_QValuePath represents the /openconfig-platform/components/component/optical-channel/state/q-value YANG schema element.
type Component_OpticalChannel_QValuePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValuePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value YANG schema element.
type Component_OpticalChannel_QValuePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/q-value/avg YANG schema element.
type Component_OpticalChannel_QValue_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/avg YANG schema element.
type Component_OpticalChannel_QValue_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/q-value/instant YANG schema element.
type Component_OpticalChannel_QValue_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/instant YANG schema element.
type Component_OpticalChannel_QValue_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/q-value/interval YANG schema element.
type Component_OpticalChannel_QValue_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/interval YANG schema element.
type Component_OpticalChannel_QValue_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/q-value/max YANG schema element.
type Component_OpticalChannel_QValue_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/max YANG schema element.
type Component_OpticalChannel_QValue_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/q-value/max-time YANG schema element.
type Component_OpticalChannel_QValue_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/max-time YANG schema element.
type Component_OpticalChannel_QValue_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MinPath represents the /openconfig-platform/components/component/optical-channel/state/q-value/min YANG schema element.
type Component_OpticalChannel_QValue_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/min YANG schema element.
type Component_OpticalChannel_QValue_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/q-value/min-time YANG schema element.
type Component_OpticalChannel_QValue_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_QValue_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/q-value/min-time YANG schema element.
type Component_OpticalChannel_QValue_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/q-value/avg"
func (n *Component_OpticalChannel_QValuePath) Avg() *Component_OpticalChannel_QValue_AvgPath {
	return &Component_OpticalChannel_QValue_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/q-value/avg"
func (n *Component_OpticalChannel_QValuePathAny) Avg() *Component_OpticalChannel_QValue_AvgPathAny {
	return &Component_OpticalChannel_QValue_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/q-value/instant"
func (n *Component_OpticalChannel_QValuePath) Instant() *Component_OpticalChannel_QValue_InstantPath {
	return &Component_OpticalChannel_QValue_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/q-value/instant"
func (n *Component_OpticalChannel_QValuePathAny) Instant() *Component_OpticalChannel_QValue_InstantPathAny {
	return &Component_OpticalChannel_QValue_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/q-value/interval"
func (n *Component_OpticalChannel_QValuePath) Interval() *Component_OpticalChannel_QValue_IntervalPath {
	return &Component_OpticalChannel_QValue_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/q-value/interval"
func (n *Component_OpticalChannel_QValuePathAny) Interval() *Component_OpticalChannel_QValue_IntervalPathAny {
	return &Component_OpticalChannel_QValue_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/q-value/max"
func (n *Component_OpticalChannel_QValuePath) Max() *Component_OpticalChannel_QValue_MaxPath {
	return &Component_OpticalChannel_QValue_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/q-value/max"
func (n *Component_OpticalChannel_QValuePathAny) Max() *Component_OpticalChannel_QValue_MaxPathAny {
	return &Component_OpticalChannel_QValue_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/q-value/max-time"
func (n *Component_OpticalChannel_QValuePath) MaxTime() *Component_OpticalChannel_QValue_MaxTimePath {
	return &Component_OpticalChannel_QValue_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/q-value/max-time"
func (n *Component_OpticalChannel_QValuePathAny) MaxTime() *Component_OpticalChannel_QValue_MaxTimePathAny {
	return &Component_OpticalChannel_QValue_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/q-value/min"
func (n *Component_OpticalChannel_QValuePath) Min() *Component_OpticalChannel_QValue_MinPath {
	return &Component_OpticalChannel_QValue_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/q-value/min"
func (n *Component_OpticalChannel_QValuePathAny) Min() *Component_OpticalChannel_QValue_MinPathAny {
	return &Component_OpticalChannel_QValue_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/q-value/min-time"
func (n *Component_OpticalChannel_QValuePath) MinTime() *Component_OpticalChannel_QValue_MinTimePath {
	return &Component_OpticalChannel_QValue_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/q-value/min-time"
func (n *Component_OpticalChannel_QValuePathAny) MinTime() *Component_OpticalChannel_QValue_MinTimePathAny {
	return &Component_OpticalChannel_QValue_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/interval YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/interval YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max-time YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max-time YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min-time YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min-time YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) Avg() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) Avg() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) Instant() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) Instant() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/interval"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) Interval() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/interval"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) Interval() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) Max() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) Max() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max-time"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) MaxTime() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max-time"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) MaxTime() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) Min() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) Min() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min-time"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPath) MinTime() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePath {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min-time"
func (n *Component_OpticalChannel_SecondOrderPolarizationModeDispersionPathAny) MinTime() *Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePathAny {
	return &Component_OpticalChannel_SecondOrderPolarizationModeDispersion_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_OpticalChannel_SopRocPath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc YANG schema element.
type Component_OpticalChannel_SopRocPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRocPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc YANG schema element.
type Component_OpticalChannel_SopRocPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_AvgPath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/avg YANG schema element.
type Component_OpticalChannel_SopRoc_AvgPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/avg YANG schema element.
type Component_OpticalChannel_SopRoc_AvgPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_InstantPath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/instant YANG schema element.
type Component_OpticalChannel_SopRoc_InstantPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/instant YANG schema element.
type Component_OpticalChannel_SopRoc_InstantPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_IntervalPath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/interval YANG schema element.
type Component_OpticalChannel_SopRoc_IntervalPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/interval YANG schema element.
type Component_OpticalChannel_SopRoc_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MaxPath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/max YANG schema element.
type Component_OpticalChannel_SopRoc_MaxPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/max YANG schema element.
type Component_OpticalChannel_SopRoc_MaxPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MaxTimePath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/max-time YANG schema element.
type Component_OpticalChannel_SopRoc_MaxTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/max-time YANG schema element.
type Component_OpticalChannel_SopRoc_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MinPath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/min YANG schema element.
type Component_OpticalChannel_SopRoc_MinPath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/min YANG schema element.
type Component_OpticalChannel_SopRoc_MinPathAny struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MinTimePath represents the /openconfig-platform/components/component/optical-channel/state/sop-roc/min-time YANG schema element.
type Component_OpticalChannel_SopRoc_MinTimePath struct {
	*ygot.NodePath
}

// Component_OpticalChannel_SopRoc_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/optical-channel/state/sop-roc/min-time YANG schema element.
type Component_OpticalChannel_SopRoc_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/sop-roc/avg"
func (n *Component_OpticalChannel_SopRocPath) Avg() *Component_OpticalChannel_SopRoc_AvgPath {
	return &Component_OpticalChannel_SopRoc_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/optical-channel/state/sop-roc/avg"
func (n *Component_OpticalChannel_SopRocPathAny) Avg() *Component_OpticalChannel_SopRoc_AvgPathAny {
	return &Component_OpticalChannel_SopRoc_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/sop-roc/instant"
func (n *Component_OpticalChannel_SopRocPath) Instant() *Component_OpticalChannel_SopRoc_InstantPath {
	return &Component_OpticalChannel_SopRoc_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/optical-channel/state/sop-roc/instant"
func (n *Component_OpticalChannel_SopRocPathAny) Instant() *Component_OpticalChannel_SopRoc_InstantPathAny {
	return &Component_OpticalChannel_SopRoc_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/sop-roc/interval"
func (n *Component_OpticalChannel_SopRocPath) Interval() *Component_OpticalChannel_SopRoc_IntervalPath {
	return &Component_OpticalChannel_SopRoc_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/optical-channel/state/sop-roc/interval"
func (n *Component_OpticalChannel_SopRocPathAny) Interval() *Component_OpticalChannel_SopRoc_IntervalPathAny {
	return &Component_OpticalChannel_SopRoc_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/sop-roc/max"
func (n *Component_OpticalChannel_SopRocPath) Max() *Component_OpticalChannel_SopRoc_MaxPath {
	return &Component_OpticalChannel_SopRoc_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/optical-channel/state/sop-roc/max"
func (n *Component_OpticalChannel_SopRocPathAny) Max() *Component_OpticalChannel_SopRoc_MaxPathAny {
	return &Component_OpticalChannel_SopRoc_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/sop-roc/max-time"
func (n *Component_OpticalChannel_SopRocPath) MaxTime() *Component_OpticalChannel_SopRoc_MaxTimePath {
	return &Component_OpticalChannel_SopRoc_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/optical-channel/state/sop-roc/max-time"
func (n *Component_OpticalChannel_SopRocPathAny) MaxTime() *Component_OpticalChannel_SopRoc_MaxTimePathAny {
	return &Component_OpticalChannel_SopRoc_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/sop-roc/min"
func (n *Component_OpticalChannel_SopRocPath) Min() *Component_OpticalChannel_SopRoc_MinPath {
	return &Component_OpticalChannel_SopRoc_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/optical-channel/state/sop-roc/min"
func (n *Component_OpticalChannel_SopRocPathAny) Min() *Component_OpticalChannel_SopRoc_MinPathAny {
	return &Component_OpticalChannel_SopRoc_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/sop-roc/min-time"
func (n *Component_OpticalChannel_SopRocPath) MinTime() *Component_OpticalChannel_SopRoc_MinTimePath {
	return &Component_OpticalChannel_SopRoc_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/optical-channel/state/sop-roc/min-time"
func (n *Component_OpticalChannel_SopRocPathAny) MinTime() *Component_OpticalChannel_SopRoc_MinTimePathAny {
	return &Component_OpticalChannel_SopRoc_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_PciePath represents the /openconfig-platform/components/component/state/pcie YANG schema element.
type Component_PciePath struct {
	*ygot.NodePath
}

// Component_PciePathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie YANG schema element.
type Component_PciePathAny struct {
	*ygot.NodePath
}

// CorrectableErrors (container): The count of the correctable PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "correctable-errors"
// Path from root: "/components/component/state/pcie/correctable-errors"
func (n *Component_PciePath) CorrectableErrors() *Component_Pcie_CorrectableErrorsPath {
	return &Component_Pcie_CorrectableErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"correctable-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorrectableErrors (container): The count of the correctable PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "correctable-errors"
// Path from root: "/components/component/state/pcie/correctable-errors"
func (n *Component_PciePathAny) CorrectableErrors() *Component_Pcie_CorrectableErrorsPathAny {
	return &Component_Pcie_CorrectableErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"correctable-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FatalErrors (container): The count of the fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fatal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors"
func (n *Component_PciePath) FatalErrors() *Component_Pcie_FatalErrorsPath {
	return &Component_Pcie_FatalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FatalErrors (container): The count of the fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fatal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors"
func (n *Component_PciePathAny) FatalErrors() *Component_Pcie_FatalErrorsPathAny {
	return &Component_Pcie_FatalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// NonFatalErrors (container): The count of the non-fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "non-fatal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors"
func (n *Component_PciePath) NonFatalErrors() *Component_Pcie_NonFatalErrorsPath {
	return &Component_Pcie_NonFatalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// NonFatalErrors (container): The count of the non-fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "non-fatal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors"
func (n *Component_PciePathAny) NonFatalErrors() *Component_Pcie_NonFatalErrorsPathAny {
	return &Component_Pcie_NonFatalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Pcie_CorrectableErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors YANG schema element.
type Component_Pcie_CorrectableErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors YANG schema element.
type Component_Pcie_CorrectableErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadDllpErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-dllp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadDllpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-dllp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-tlp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-tlp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors YANG schema element.
type Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors YANG schema element.
type Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_InternalErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/internal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_InternalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_InternalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/internal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_InternalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReceiverErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/receiver-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReceiverErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/receiver-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/relay-rollover-errors YANG schema element.
type Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/relay-rollover-errors YANG schema element.
type Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/replay-timeout-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/replay-timeout-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_TotalErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/total-errors YANG schema element.
type Component_Pcie_CorrectableErrors_TotalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_TotalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/total-errors YANG schema element.
type Component_Pcie_CorrectableErrors_TotalErrorsPathAny struct {
	*ygot.NodePath
}

// AdvisoryNonFatalErrors (leaf): Number of advisory non fatal errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "advisory-non-fatal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors"
func (n *Component_Pcie_CorrectableErrorsPath) AdvisoryNonFatalErrors() *Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath {
	return &Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"advisory-non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvisoryNonFatalErrors (leaf): Number of advisory non fatal errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "advisory-non-fatal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) AdvisoryNonFatalErrors() *Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"advisory-non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadDllpErrors (leaf): Number of DLLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-dllp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-dllp-errors"
func (n *Component_Pcie_CorrectableErrorsPath) BadDllpErrors() *Component_Pcie_CorrectableErrors_BadDllpErrorsPath {
	return &Component_Pcie_CorrectableErrors_BadDllpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-dllp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadDllpErrors (leaf): Number of DLLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-dllp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-dllp-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) BadDllpErrors() *Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-dllp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadTlpErrors (leaf): Number of TLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-tlp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-tlp-errors"
func (n *Component_Pcie_CorrectableErrorsPath) BadTlpErrors() *Component_Pcie_CorrectableErrors_BadTlpErrorsPath {
	return &Component_Pcie_CorrectableErrors_BadTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadTlpErrors (leaf): Number of TLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-tlp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-tlp-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) BadTlpErrors() *Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// HdrLogOverflowErrors (leaf): Number of header log overflow errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "hdr-log-overflow-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors"
func (n *Component_Pcie_CorrectableErrorsPath) HdrLogOverflowErrors() *Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath {
	return &Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"hdr-log-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// HdrLogOverflowErrors (leaf): Number of header log overflow errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "hdr-log-overflow-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) HdrLogOverflowErrors() *Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hdr-log-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/internal-errors"
func (n *Component_Pcie_CorrectableErrorsPath) InternalErrors() *Component_Pcie_CorrectableErrors_InternalErrorsPath {
	return &Component_Pcie_CorrectableErrors_InternalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/internal-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) InternalErrors() *Component_Pcie_CorrectableErrors_InternalErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_InternalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverErrors (leaf): Number of receiver errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/receiver-errors"
func (n *Component_Pcie_CorrectableErrorsPath) ReceiverErrors() *Component_Pcie_CorrectableErrors_ReceiverErrorsPath {
	return &Component_Pcie_CorrectableErrors_ReceiverErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverErrors (leaf): Number of receiver errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/receiver-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) ReceiverErrors() *Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// RelayRolloverErrors (leaf): Number of relay rollover errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "relay-rollover-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/relay-rollover-errors"
func (n *Component_Pcie_CorrectableErrorsPath) RelayRolloverErrors() *Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath {
	return &Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"relay-rollover-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// RelayRolloverErrors (leaf): Number of relay rollover errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "relay-rollover-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/relay-rollover-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) RelayRolloverErrors() *Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"relay-rollover-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplayTimeoutErrors (leaf): Number of replay timeout errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "replay-timeout-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/replay-timeout-errors"
func (n *Component_Pcie_CorrectableErrorsPath) ReplayTimeoutErrors() *Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath {
	return &Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"replay-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplayTimeoutErrors (leaf): Number of replay timeout errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "replay-timeout-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/replay-timeout-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) ReplayTimeoutErrors() *Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"replay-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of correctable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/total-errors"
func (n *Component_Pcie_CorrectableErrorsPath) TotalErrors() *Component_Pcie_CorrectableErrors_TotalErrorsPath {
	return &Component_Pcie_CorrectableErrors_TotalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of correctable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/total-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) TotalErrors() *Component_Pcie_CorrectableErrors_TotalErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_TotalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Pcie_FatalErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors YANG schema element.
type Component_Pcie_FatalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors YANG schema element.
type Component_Pcie_FatalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AcsViolationErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_FatalErrors_AcsViolationErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AcsViolationErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_FatalErrors_AcsViolationErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_BlockedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_BlockedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionAbortErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionAbortErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_DataLinkErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_FatalErrors_DataLinkErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_DataLinkErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_FatalErrors_DataLinkErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_EcrcErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_FatalErrors_EcrcErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_EcrcErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_FatalErrors_EcrcErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_InternalErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/internal-errors YANG schema element.
type Component_Pcie_FatalErrors_InternalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_InternalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/internal-errors YANG schema element.
type Component_Pcie_FatalErrors_InternalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_MalformedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_MalformedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_PoisonedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_PoisonedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_SurpriseDownErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_FatalErrors_SurpriseDownErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TotalErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/total-errors YANG schema element.
type Component_Pcie_FatalErrors_TotalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TotalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/total-errors YANG schema element.
type Component_Pcie_FatalErrors_TotalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UndefinedErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_FatalErrors_UndefinedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UndefinedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_FatalErrors_UndefinedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny struct {
	*ygot.NodePath
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/acs-violation-errors"
func (n *Component_Pcie_FatalErrorsPath) AcsViolationErrors() *Component_Pcie_FatalErrors_AcsViolationErrorsPath {
	return &Component_Pcie_FatalErrors_AcsViolationErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/acs-violation-errors"
func (n *Component_Pcie_FatalErrorsPathAny) AcsViolationErrors() *Component_Pcie_FatalErrors_AcsViolationErrorsPathAny {
	return &Component_Pcie_FatalErrors_AcsViolationErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_FatalErrorsPath) AtomicOpBlockedErrors() *Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath {
	return &Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_FatalErrorsPathAny) AtomicOpBlockedErrors() *Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny {
	return &Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_FatalErrorsPath) BlockedTlpErrors() *Component_Pcie_FatalErrors_BlockedTlpErrorsPath {
	return &Component_Pcie_FatalErrors_BlockedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_FatalErrorsPathAny) BlockedTlpErrors() *Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny {
	return &Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-abort-errors"
func (n *Component_Pcie_FatalErrorsPath) CompletionAbortErrors() *Component_Pcie_FatalErrors_CompletionAbortErrorsPath {
	return &Component_Pcie_FatalErrors_CompletionAbortErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-abort-errors"
func (n *Component_Pcie_FatalErrorsPathAny) CompletionAbortErrors() *Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny {
	return &Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_FatalErrorsPath) CompletionTimeoutErrors() *Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath {
	return &Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_FatalErrorsPathAny) CompletionTimeoutErrors() *Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny {
	return &Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/data-link-errors"
func (n *Component_Pcie_FatalErrorsPath) DataLinkErrors() *Component_Pcie_FatalErrors_DataLinkErrorsPath {
	return &Component_Pcie_FatalErrors_DataLinkErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/data-link-errors"
func (n *Component_Pcie_FatalErrorsPathAny) DataLinkErrors() *Component_Pcie_FatalErrors_DataLinkErrorsPathAny {
	return &Component_Pcie_FatalErrors_DataLinkErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/ecrc-errors"
func (n *Component_Pcie_FatalErrorsPath) EcrcErrors() *Component_Pcie_FatalErrors_EcrcErrorsPath {
	return &Component_Pcie_FatalErrors_EcrcErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/ecrc-errors"
func (n *Component_Pcie_FatalErrorsPathAny) EcrcErrors() *Component_Pcie_FatalErrors_EcrcErrorsPathAny {
	return &Component_Pcie_FatalErrors_EcrcErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_FatalErrorsPath) FlowControlProtocolErrors() *Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath {
	return &Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_FatalErrorsPathAny) FlowControlProtocolErrors() *Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny {
	return &Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/internal-errors"
func (n *Component_Pcie_FatalErrorsPath) InternalErrors() *Component_Pcie_FatalErrors_InternalErrorsPath {
	return &Component_Pcie_FatalErrors_InternalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/internal-errors"
func (n *Component_Pcie_FatalErrorsPathAny) InternalErrors() *Component_Pcie_FatalErrors_InternalErrorsPathAny {
	return &Component_Pcie_FatalErrors_InternalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_FatalErrorsPath) MalformedTlpErrors() *Component_Pcie_FatalErrors_MalformedTlpErrorsPath {
	return &Component_Pcie_FatalErrors_MalformedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_FatalErrorsPathAny) MalformedTlpErrors() *Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny {
	return &Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_FatalErrorsPath) PoisonedTlpErrors() *Component_Pcie_FatalErrors_PoisonedTlpErrorsPath {
	return &Component_Pcie_FatalErrors_PoisonedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_FatalErrorsPathAny) PoisonedTlpErrors() *Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny {
	return &Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_FatalErrorsPath) ReceiverOverflowErrors() *Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath {
	return &Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_FatalErrorsPathAny) ReceiverOverflowErrors() *Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny {
	return &Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/surprise-down-errors"
func (n *Component_Pcie_FatalErrorsPath) SurpriseDownErrors() *Component_Pcie_FatalErrors_SurpriseDownErrorsPath {
	return &Component_Pcie_FatalErrors_SurpriseDownErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/surprise-down-errors"
func (n *Component_Pcie_FatalErrorsPathAny) SurpriseDownErrors() *Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny {
	return &Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_FatalErrorsPath) TlpPrefixBlockedErrors() *Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath {
	return &Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_FatalErrorsPathAny) TlpPrefixBlockedErrors() *Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny {
	return &Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/total-errors"
func (n *Component_Pcie_FatalErrorsPath) TotalErrors() *Component_Pcie_FatalErrors_TotalErrorsPath {
	return &Component_Pcie_FatalErrors_TotalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/total-errors"
func (n *Component_Pcie_FatalErrorsPathAny) TotalErrors() *Component_Pcie_FatalErrors_TotalErrorsPathAny {
	return &Component_Pcie_FatalErrors_TotalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/undefined-errors"
func (n *Component_Pcie_FatalErrorsPath) UndefinedErrors() *Component_Pcie_FatalErrors_UndefinedErrorsPath {
	return &Component_Pcie_FatalErrors_UndefinedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/undefined-errors"
func (n *Component_Pcie_FatalErrorsPathAny) UndefinedErrors() *Component_Pcie_FatalErrors_UndefinedErrorsPathAny {
	return &Component_Pcie_FatalErrors_UndefinedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_FatalErrorsPath) UnexpectedCompletionErrors() *Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath {
	return &Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_FatalErrorsPathAny) UnexpectedCompletionErrors() *Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny {
	return &Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_FatalErrorsPath) UnsupportedRequestErrors() *Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath {
	return &Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_FatalErrorsPathAny) UnsupportedRequestErrors() *Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny {
	return &Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Pcie_NonFatalErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors YANG schema element.
type Component_Pcie_NonFatalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors YANG schema element.
type Component_Pcie_NonFatalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AcsViolationErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AcsViolationErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_DataLinkErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_NonFatalErrors_DataLinkErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_EcrcErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_NonFatalErrors_EcrcErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_EcrcErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_NonFatalErrors_EcrcErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_InternalErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/internal-errors YANG schema element.
type Component_Pcie_NonFatalErrors_InternalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_InternalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/internal-errors YANG schema element.
type Component_Pcie_NonFatalErrors_InternalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TotalErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/total-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TotalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TotalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/total-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TotalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UndefinedErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UndefinedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny struct {
	*ygot.NodePath
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/acs-violation-errors"
func (n *Component_Pcie_NonFatalErrorsPath) AcsViolationErrors() *Component_Pcie_NonFatalErrors_AcsViolationErrorsPath {
	return &Component_Pcie_NonFatalErrors_AcsViolationErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/acs-violation-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) AcsViolationErrors() *Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPath) AtomicOpBlockedErrors() *Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath {
	return &Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) AtomicOpBlockedErrors() *Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPath) BlockedTlpErrors() *Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath {
	return &Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) BlockedTlpErrors() *Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-abort-errors"
func (n *Component_Pcie_NonFatalErrorsPath) CompletionAbortErrors() *Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath {
	return &Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-abort-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) CompletionAbortErrors() *Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_NonFatalErrorsPath) CompletionTimeoutErrors() *Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath {
	return &Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) CompletionTimeoutErrors() *Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/data-link-errors"
func (n *Component_Pcie_NonFatalErrorsPath) DataLinkErrors() *Component_Pcie_NonFatalErrors_DataLinkErrorsPath {
	return &Component_Pcie_NonFatalErrors_DataLinkErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/data-link-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) DataLinkErrors() *Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/ecrc-errors"
func (n *Component_Pcie_NonFatalErrorsPath) EcrcErrors() *Component_Pcie_NonFatalErrors_EcrcErrorsPath {
	return &Component_Pcie_NonFatalErrors_EcrcErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/ecrc-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) EcrcErrors() *Component_Pcie_NonFatalErrors_EcrcErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_EcrcErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_NonFatalErrorsPath) FlowControlProtocolErrors() *Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath {
	return &Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) FlowControlProtocolErrors() *Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/internal-errors"
func (n *Component_Pcie_NonFatalErrorsPath) InternalErrors() *Component_Pcie_NonFatalErrors_InternalErrorsPath {
	return &Component_Pcie_NonFatalErrors_InternalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/internal-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) InternalErrors() *Component_Pcie_NonFatalErrors_InternalErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_InternalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPath) MalformedTlpErrors() *Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath {
	return &Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) MalformedTlpErrors() *Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPath) PoisonedTlpErrors() *Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath {
	return &Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) PoisonedTlpErrors() *Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_NonFatalErrorsPath) ReceiverOverflowErrors() *Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath {
	return &Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) ReceiverOverflowErrors() *Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/surprise-down-errors"
func (n *Component_Pcie_NonFatalErrorsPath) SurpriseDownErrors() *Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath {
	return &Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/surprise-down-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) SurpriseDownErrors() *Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPath) TlpPrefixBlockedErrors() *Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath {
	return &Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) TlpPrefixBlockedErrors() *Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/total-errors"
func (n *Component_Pcie_NonFatalErrorsPath) TotalErrors() *Component_Pcie_NonFatalErrors_TotalErrorsPath {
	return &Component_Pcie_NonFatalErrors_TotalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/total-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) TotalErrors() *Component_Pcie_NonFatalErrors_TotalErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_TotalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/undefined-errors"
func (n *Component_Pcie_NonFatalErrorsPath) UndefinedErrors() *Component_Pcie_NonFatalErrors_UndefinedErrorsPath {
	return &Component_Pcie_NonFatalErrors_UndefinedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/undefined-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) UndefinedErrors() *Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_NonFatalErrorsPath) UnexpectedCompletionErrors() *Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath {
	return &Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) UnexpectedCompletionErrors() *Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_NonFatalErrorsPath) UnsupportedRequestErrors() *Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath {
	return &Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) UnsupportedRequestErrors() *Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_PortPath represents the /openconfig-platform/components/component/port YANG schema element.
type Component_PortPath struct {
	*ygot.NodePath
}

// Component_PortPathAny represents the wildcard version of the /openconfig-platform/components/component/port YANG schema element.
type Component_PortPathAny struct {
	*ygot.NodePath
}

// BreakoutMode (container): Top-level container for port breakout-mode data.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "breakout-mode"
// Path from root: "/components/component/port/breakout-mode"
func (n *Component_PortPath) BreakoutMode() *Component_Port_BreakoutModePath {
	return &Component_Port_BreakoutModePath{
		NodePath: ygot.NewNodePath(
			[]string{"breakout-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// BreakoutMode (container): Top-level container for port breakout-mode data.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "breakout-mode"
// Path from root: "/components/component/port/breakout-mode"
func (n *Component_PortPathAny) BreakoutMode() *Component_Port_BreakoutModePathAny {
	return &Component_Port_BreakoutModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"breakout-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpticalPort (container): Contains data specific to ports on optical transport
// devices.
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "optical-port"
// Path from root: "/components/component/port/optical-port"
func (n *Component_PortPath) OpticalPort() *Component_Port_OpticalPortPath {
	return &Component_Port_OpticalPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"optical-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpticalPort (container): Contains data specific to ports on optical transport
// devices.
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "optical-port"
// Path from root: "/components/component/port/optical-port"
func (n *Component_PortPathAny) OpticalPort() *Component_Port_OpticalPortPathAny {
	return &Component_Port_OpticalPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"optical-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Port_BreakoutModePath represents the /openconfig-platform/components/component/port/breakout-mode YANG schema element.
type Component_Port_BreakoutModePath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutModePathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode YANG schema element.
type Component_Port_BreakoutModePathAny struct {
	*ygot.NodePath
}

// GroupAny (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index (wildcarded): uint8
func (n *Component_Port_BreakoutModePath) GroupAny() *Component_Port_BreakoutMode_GroupPathAny {
	return &Component_Port_BreakoutMode_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// GroupAny (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index (wildcarded): uint8
func (n *Component_Port_BreakoutModePathAny) GroupAny() *Component_Port_BreakoutMode_GroupPathAny {
	return &Component_Port_BreakoutMode_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Group (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index: uint8
func (n *Component_Port_BreakoutModePath) Group(Index uint8) *Component_Port_BreakoutMode_GroupPath {
	return &Component_Port_BreakoutMode_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Group (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index: uint8
func (n *Component_Port_BreakoutModePathAny) Group(Index uint8) *Component_Port_BreakoutMode_GroupPathAny {
	return &Component_Port_BreakoutMode_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Component_Port_BreakoutMode_GroupPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group YANG schema element.
type Component_Port_BreakoutMode_GroupPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_GroupPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group YANG schema element.
type Component_Port_BreakoutMode_GroupPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_BreakoutSpeedPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/breakout-speed YANG schema element.
type Component_Port_BreakoutMode_Group_BreakoutSpeedPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/breakout-speed YANG schema element.
type Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_IndexPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/index YANG schema element.
type Component_Port_BreakoutMode_Group_IndexPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_IndexPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/index YANG schema element.
type Component_Port_BreakoutMode_Group_IndexPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumBreakoutsPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/num-breakouts YANG schema element.
type Component_Port_BreakoutMode_Group_NumBreakoutsPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumBreakoutsPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/num-breakouts YANG schema element.
type Component_Port_BreakoutMode_Group_NumBreakoutsPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/num-physical-channels YANG schema element.
type Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/config/num-physical-channels YANG schema element.
type Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny struct {
	*ygot.NodePath
}

// BreakoutSpeed (leaf): Speed of interfaces in this breakout group, supported
// values are defined by the ETHERNET_SPEED identity.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/breakout-speed"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/breakout-speed"
func (n *Component_Port_BreakoutMode_GroupPath) BreakoutSpeed() *Component_Port_BreakoutMode_Group_BreakoutSpeedPath {
	return &Component_Port_BreakoutMode_Group_BreakoutSpeedPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "breakout-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// BreakoutSpeed (leaf): Speed of interfaces in this breakout group, supported
// values are defined by the ETHERNET_SPEED identity.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/breakout-speed"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/breakout-speed"
func (n *Component_Port_BreakoutMode_GroupPathAny) BreakoutSpeed() *Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny {
	return &Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "breakout-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Each index specifies breakouts that are identical in
// terms of speed and the number of physical channels.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/index"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/index"
func (n *Component_Port_BreakoutMode_GroupPath) Index() *Component_Port_BreakoutMode_Group_IndexPath {
	return &Component_Port_BreakoutMode_Group_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Each index specifies breakouts that are identical in
// terms of speed and the number of physical channels.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/index"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/index"
func (n *Component_Port_BreakoutMode_GroupPathAny) Index() *Component_Port_BreakoutMode_Group_IndexPathAny {
	return &Component_Port_BreakoutMode_Group_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumBreakouts (leaf): Sets the number of interfaces using this breakout group.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/num-breakouts"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/num-breakouts"
func (n *Component_Port_BreakoutMode_GroupPath) NumBreakouts() *Component_Port_BreakoutMode_Group_NumBreakoutsPath {
	return &Component_Port_BreakoutMode_Group_NumBreakoutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "num-breakouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumBreakouts (leaf): Sets the number of interfaces using this breakout group.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/num-breakouts"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/num-breakouts"
func (n *Component_Port_BreakoutMode_GroupPathAny) NumBreakouts() *Component_Port_BreakoutMode_Group_NumBreakoutsPathAny {
	return &Component_Port_BreakoutMode_Group_NumBreakoutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "num-breakouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumPhysicalChannels (leaf): Sets the number of lanes or physical channels assigned
// to the interfaces in this breakout group. This leaf need
// not be set if there is only one breakout group where all
// the interfaces are of equal speed and have equal number
// of physical channels.
//
// The physical channels referred to by this leaf are
// electrical channels towards the transceiver.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/num-physical-channels"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/num-physical-channels"
func (n *Component_Port_BreakoutMode_GroupPath) NumPhysicalChannels() *Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath {
	return &Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "num-physical-channels"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumPhysicalChannels (leaf): Sets the number of lanes or physical channels assigned
// to the interfaces in this breakout group. This leaf need
// not be set if there is only one breakout group where all
// the interfaces are of equal speed and have equal number
// of physical channels.
//
// The physical channels referred to by this leaf are
// electrical channels towards the transceiver.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/num-physical-channels"
// Path from root: "/components/component/port/breakout-mode/groups/group/config/num-physical-channels"
func (n *Component_Port_BreakoutMode_GroupPathAny) NumPhysicalChannels() *Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny {
	return &Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "num-physical-channels"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Port_OpticalPortPath represents the /openconfig-platform/components/component/port/optical-port YANG schema element.
type Component_Port_OpticalPortPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPortPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port YANG schema element.
type Component_Port_OpticalPortPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_AdminStatePath represents the /openconfig-platform/components/component/port/optical-port/config/admin-state YANG schema element.
type Component_Port_OpticalPort_AdminStatePath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_AdminStatePathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/config/admin-state YANG schema element.
type Component_Port_OpticalPort_AdminStatePathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OpticalPortTypePath represents the /openconfig-platform/components/component/port/optical-port/state/optical-port-type YANG schema element.
type Component_Port_OpticalPort_OpticalPortTypePath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OpticalPortTypePathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/optical-port-type YANG schema element.
type Component_Port_OpticalPort_OpticalPortTypePathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_TiltPath represents the /openconfig-platform/components/component/port/optical-port/state/tilt YANG schema element.
type Component_Port_OpticalPort_TiltPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_TiltPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/tilt YANG schema element.
type Component_Port_OpticalPort_TiltPathAny struct {
	*ygot.NodePath
}

// AdminState (leaf): Sets the admin state of the optical-port
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/admin-state"
// Path from root: "/components/component/port/optical-port/config/admin-state"
func (n *Component_Port_OpticalPortPath) AdminState() *Component_Port_OpticalPort_AdminStatePath {
	return &Component_Port_OpticalPort_AdminStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminState (leaf): Sets the admin state of the optical-port
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/admin-state"
// Path from root: "/components/component/port/optical-port/config/admin-state"
func (n *Component_Port_OpticalPortPathAny) AdminState() *Component_Port_OpticalPort_AdminStatePathAny {
	return &Component_Port_OpticalPort_AdminStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "admin-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): For line system device ports, this value indicates
// the total input optical power of the port in units
// of 0.01dBm. If avg/min/max statistics are not supported,
// just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/port/optical-port/state/input-power"
func (n *Component_Port_OpticalPortPath) InputPower() *Component_Port_OpticalPort_InputPowerPath {
	return &Component_Port_OpticalPort_InputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): For line system device ports, this value indicates
// the total input optical power of the port in units
// of 0.01dBm. If avg/min/max statistics are not supported,
// just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/port/optical-port/state/input-power"
func (n *Component_Port_OpticalPortPathAny) InputPower() *Component_Port_OpticalPort_InputPowerPathAny {
	return &Component_Port_OpticalPort_InputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpticalPortType (leaf): For physical ports belonging to optical transport
// devices, this indicates the type of optical port.  This is an
// informational field that should be made available by the
// device.
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/optical-port-type"
// Path from root: "/components/component/port/optical-port/state/optical-port-type"
func (n *Component_Port_OpticalPortPath) OpticalPortType() *Component_Port_OpticalPort_OpticalPortTypePath {
	return &Component_Port_OpticalPort_OpticalPortTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optical-port-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpticalPortType (leaf): For physical ports belonging to optical transport
// devices, this indicates the type of optical port.  This is an
// informational field that should be made available by the
// device.
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/optical-port-type"
// Path from root: "/components/component/port/optical-port/state/optical-port-type"
func (n *Component_Port_OpticalPortPathAny) OpticalPortType() *Component_Port_OpticalPort_OpticalPortTypePathAny {
	return &Component_Port_OpticalPort_OpticalPortTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optical-port-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): For line system device ports, this value indicates
// the total output optical power of the port in units
// of 0.01dBm. If avg/min/max statistics are not supported,
// just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/port/optical-port/state/output-power"
func (n *Component_Port_OpticalPortPath) OutputPower() *Component_Port_OpticalPort_OutputPowerPath {
	return &Component_Port_OpticalPort_OutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): For line system device ports, this value indicates
// the total output optical power of the port in units
// of 0.01dBm. If avg/min/max statistics are not supported,
// just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/port/optical-port/state/output-power"
func (n *Component_Port_OpticalPortPathAny) OutputPower() *Component_Port_OpticalPort_OutputPowerPathAny {
	return &Component_Port_OpticalPort_OutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tilt (leaf): The total tilt measured on the port. This is applicable to
//
//	ports of type INGRESS and EGRESS.
//
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tilt"
// Path from root: "/components/component/port/optical-port/state/tilt"
func (n *Component_Port_OpticalPortPath) Tilt() *Component_Port_OpticalPort_TiltPath {
	return &Component_Port_OpticalPort_TiltPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tilt"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tilt (leaf): The total tilt measured on the port. This is applicable to
//
//	ports of type INGRESS and EGRESS.
//
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tilt"
// Path from root: "/components/component/port/optical-port/state/tilt"
func (n *Component_Port_OpticalPortPathAny) Tilt() *Component_Port_OpticalPort_TiltPathAny {
	return &Component_Port_OpticalPort_TiltPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tilt"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Port_OpticalPort_InputPowerPath represents the /openconfig-platform/components/component/port/optical-port/state/input-power YANG schema element.
type Component_Port_OpticalPort_InputPowerPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power YANG schema element.
type Component_Port_OpticalPort_InputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_AvgPath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/avg YANG schema element.
type Component_Port_OpticalPort_InputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/avg YANG schema element.
type Component_Port_OpticalPort_InputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_InstantPath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/instant YANG schema element.
type Component_Port_OpticalPort_InputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/instant YANG schema element.
type Component_Port_OpticalPort_InputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_IntervalPath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/interval YANG schema element.
type Component_Port_OpticalPort_InputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/interval YANG schema element.
type Component_Port_OpticalPort_InputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MaxPath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/max YANG schema element.
type Component_Port_OpticalPort_InputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/max YANG schema element.
type Component_Port_OpticalPort_InputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MaxTimePath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/max-time YANG schema element.
type Component_Port_OpticalPort_InputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/max-time YANG schema element.
type Component_Port_OpticalPort_InputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MinPath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/min YANG schema element.
type Component_Port_OpticalPort_InputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/min YANG schema element.
type Component_Port_OpticalPort_InputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MinTimePath represents the /openconfig-platform/components/component/port/optical-port/state/input-power/min-time YANG schema element.
type Component_Port_OpticalPort_InputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_InputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/input-power/min-time YANG schema element.
type Component_Port_OpticalPort_InputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/port/optical-port/state/input-power/avg"
func (n *Component_Port_OpticalPort_InputPowerPath) Avg() *Component_Port_OpticalPort_InputPower_AvgPath {
	return &Component_Port_OpticalPort_InputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/port/optical-port/state/input-power/avg"
func (n *Component_Port_OpticalPort_InputPowerPathAny) Avg() *Component_Port_OpticalPort_InputPower_AvgPathAny {
	return &Component_Port_OpticalPort_InputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/port/optical-port/state/input-power/instant"
func (n *Component_Port_OpticalPort_InputPowerPath) Instant() *Component_Port_OpticalPort_InputPower_InstantPath {
	return &Component_Port_OpticalPort_InputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/port/optical-port/state/input-power/instant"
func (n *Component_Port_OpticalPort_InputPowerPathAny) Instant() *Component_Port_OpticalPort_InputPower_InstantPathAny {
	return &Component_Port_OpticalPort_InputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/port/optical-port/state/input-power/interval"
func (n *Component_Port_OpticalPort_InputPowerPath) Interval() *Component_Port_OpticalPort_InputPower_IntervalPath {
	return &Component_Port_OpticalPort_InputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/port/optical-port/state/input-power/interval"
func (n *Component_Port_OpticalPort_InputPowerPathAny) Interval() *Component_Port_OpticalPort_InputPower_IntervalPathAny {
	return &Component_Port_OpticalPort_InputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/port/optical-port/state/input-power/max"
func (n *Component_Port_OpticalPort_InputPowerPath) Max() *Component_Port_OpticalPort_InputPower_MaxPath {
	return &Component_Port_OpticalPort_InputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/port/optical-port/state/input-power/max"
func (n *Component_Port_OpticalPort_InputPowerPathAny) Max() *Component_Port_OpticalPort_InputPower_MaxPathAny {
	return &Component_Port_OpticalPort_InputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/port/optical-port/state/input-power/max-time"
func (n *Component_Port_OpticalPort_InputPowerPath) MaxTime() *Component_Port_OpticalPort_InputPower_MaxTimePath {
	return &Component_Port_OpticalPort_InputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/port/optical-port/state/input-power/max-time"
func (n *Component_Port_OpticalPort_InputPowerPathAny) MaxTime() *Component_Port_OpticalPort_InputPower_MaxTimePathAny {
	return &Component_Port_OpticalPort_InputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/port/optical-port/state/input-power/min"
func (n *Component_Port_OpticalPort_InputPowerPath) Min() *Component_Port_OpticalPort_InputPower_MinPath {
	return &Component_Port_OpticalPort_InputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/port/optical-port/state/input-power/min"
func (n *Component_Port_OpticalPort_InputPowerPathAny) Min() *Component_Port_OpticalPort_InputPower_MinPathAny {
	return &Component_Port_OpticalPort_InputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/port/optical-port/state/input-power/min-time"
func (n *Component_Port_OpticalPort_InputPowerPath) MinTime() *Component_Port_OpticalPort_InputPower_MinTimePath {
	return &Component_Port_OpticalPort_InputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/port/optical-port/state/input-power/min-time"
func (n *Component_Port_OpticalPort_InputPowerPathAny) MinTime() *Component_Port_OpticalPort_InputPower_MinTimePathAny {
	return &Component_Port_OpticalPort_InputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Port_OpticalPort_OutputPowerPath represents the /openconfig-platform/components/component/port/optical-port/state/output-power YANG schema element.
type Component_Port_OpticalPort_OutputPowerPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power YANG schema element.
type Component_Port_OpticalPort_OutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_AvgPath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/avg YANG schema element.
type Component_Port_OpticalPort_OutputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/avg YANG schema element.
type Component_Port_OpticalPort_OutputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_InstantPath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/instant YANG schema element.
type Component_Port_OpticalPort_OutputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/instant YANG schema element.
type Component_Port_OpticalPort_OutputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_IntervalPath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/interval YANG schema element.
type Component_Port_OpticalPort_OutputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/interval YANG schema element.
type Component_Port_OpticalPort_OutputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MaxPath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/max YANG schema element.
type Component_Port_OpticalPort_OutputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/max YANG schema element.
type Component_Port_OpticalPort_OutputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MaxTimePath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/max-time YANG schema element.
type Component_Port_OpticalPort_OutputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/max-time YANG schema element.
type Component_Port_OpticalPort_OutputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MinPath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/min YANG schema element.
type Component_Port_OpticalPort_OutputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/min YANG schema element.
type Component_Port_OpticalPort_OutputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MinTimePath represents the /openconfig-platform/components/component/port/optical-port/state/output-power/min-time YANG schema element.
type Component_Port_OpticalPort_OutputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Port_OpticalPort_OutputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/port/optical-port/state/output-power/min-time YANG schema element.
type Component_Port_OpticalPort_OutputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/port/optical-port/state/output-power/avg"
func (n *Component_Port_OpticalPort_OutputPowerPath) Avg() *Component_Port_OpticalPort_OutputPower_AvgPath {
	return &Component_Port_OpticalPort_OutputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/port/optical-port/state/output-power/avg"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) Avg() *Component_Port_OpticalPort_OutputPower_AvgPathAny {
	return &Component_Port_OpticalPort_OutputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/port/optical-port/state/output-power/instant"
func (n *Component_Port_OpticalPort_OutputPowerPath) Instant() *Component_Port_OpticalPort_OutputPower_InstantPath {
	return &Component_Port_OpticalPort_OutputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/port/optical-port/state/output-power/instant"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) Instant() *Component_Port_OpticalPort_OutputPower_InstantPathAny {
	return &Component_Port_OpticalPort_OutputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/port/optical-port/state/output-power/interval"
func (n *Component_Port_OpticalPort_OutputPowerPath) Interval() *Component_Port_OpticalPort_OutputPower_IntervalPath {
	return &Component_Port_OpticalPort_OutputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/port/optical-port/state/output-power/interval"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) Interval() *Component_Port_OpticalPort_OutputPower_IntervalPathAny {
	return &Component_Port_OpticalPort_OutputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/port/optical-port/state/output-power/max"
func (n *Component_Port_OpticalPort_OutputPowerPath) Max() *Component_Port_OpticalPort_OutputPower_MaxPath {
	return &Component_Port_OpticalPort_OutputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/port/optical-port/state/output-power/max"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) Max() *Component_Port_OpticalPort_OutputPower_MaxPathAny {
	return &Component_Port_OpticalPort_OutputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/port/optical-port/state/output-power/max-time"
func (n *Component_Port_OpticalPort_OutputPowerPath) MaxTime() *Component_Port_OpticalPort_OutputPower_MaxTimePath {
	return &Component_Port_OpticalPort_OutputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/port/optical-port/state/output-power/max-time"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) MaxTime() *Component_Port_OpticalPort_OutputPower_MaxTimePathAny {
	return &Component_Port_OpticalPort_OutputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/port/optical-port/state/output-power/min"
func (n *Component_Port_OpticalPort_OutputPowerPath) Min() *Component_Port_OpticalPort_OutputPower_MinPath {
	return &Component_Port_OpticalPort_OutputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/port/optical-port/state/output-power/min"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) Min() *Component_Port_OpticalPort_OutputPower_MinPathAny {
	return &Component_Port_OpticalPort_OutputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/port/optical-port/state/output-power/min-time"
func (n *Component_Port_OpticalPort_OutputPowerPath) MinTime() *Component_Port_OpticalPort_OutputPower_MinTimePath {
	return &Component_Port_OpticalPort_OutputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/port/optical-port/state/output-power/min-time"
func (n *Component_Port_OpticalPort_OutputPowerPathAny) MinTime() *Component_Port_OpticalPort_OutputPower_MinTimePathAny {
	return &Component_Port_OpticalPort_OutputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_PowerSupplyPath represents the /openconfig-platform/components/component/power-supply YANG schema element.
type Component_PowerSupplyPath struct {
	*ygot.NodePath
}

// Component_PowerSupplyPathAny represents the wildcard version of the /openconfig-platform/components/component/power-supply YANG schema element.
type Component_PowerSupplyPathAny struct {
	*ygot.NodePath
}

// Component_PropertyPath represents the /openconfig-platform/components/component/properties/property YANG schema element.
type Component_PropertyPath struct {
	*ygot.NodePath
}

// Component_PropertyPathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property YANG schema element.
type Component_PropertyPathAny struct {
	*ygot.NodePath
}

// Component_Property_ConfigurablePath represents the /openconfig-platform/components/component/properties/property/state/configurable YANG schema element.
type Component_Property_ConfigurablePath struct {
	*ygot.NodePath
}

// Component_Property_ConfigurablePathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property/state/configurable YANG schema element.
type Component_Property_ConfigurablePathAny struct {
	*ygot.NodePath
}

// Component_Property_NamePath represents the /openconfig-platform/components/component/properties/property/config/name YANG schema element.
type Component_Property_NamePath struct {
	*ygot.NodePath
}

// Component_Property_NamePathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property/config/name YANG schema element.
type Component_Property_NamePathAny struct {
	*ygot.NodePath
}

// Component_Property_ValuePath represents the /openconfig-platform/components/component/properties/property/config/value YANG schema element.
type Component_Property_ValuePath struct {
	*ygot.NodePath
}

// Component_Property_ValuePathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property/config/value YANG schema element.
type Component_Property_ValuePathAny struct {
	*ygot.NodePath
}

// Configurable (leaf): Indication whether the property is user-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/configurable"
// Path from root: "/components/component/properties/property/state/configurable"
func (n *Component_PropertyPath) Configurable() *Component_Property_ConfigurablePath {
	return &Component_Property_ConfigurablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "configurable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Configurable (leaf): Indication whether the property is user-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/configurable"
// Path from root: "/components/component/properties/property/state/configurable"
func (n *Component_PropertyPathAny) Configurable() *Component_Property_ConfigurablePathAny {
	return &Component_Property_ConfigurablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "configurable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): System-supplied name of the property -- this is typically
// non-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/name"
// Path from root: "/components/component/properties/property/config/name"
func (n *Component_PropertyPath) Name() *Component_Property_NamePath {
	return &Component_Property_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): System-supplied name of the property -- this is typically
// non-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/name"
// Path from root: "/components/component/properties/property/config/name"
func (n *Component_PropertyPathAny) Name() *Component_Property_NamePathAny {
	return &Component_Property_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Property values can take on a variety of types.  Signed and
// unsigned integer types may be provided in smaller sizes,
// e.g., int8, uint16, etc.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/value"
// Path from root: "/components/component/properties/property/config/value"
func (n *Component_PropertyPath) Value() *Component_Property_ValuePath {
	return &Component_Property_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Property values can take on a variety of types.  Signed and
// unsigned integer types may be provided in smaller sizes,
// e.g., int8, uint16, etc.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/value"
// Path from root: "/components/component/properties/property/config/value"
func (n *Component_PropertyPathAny) Value() *Component_Property_ValuePathAny {
	return &Component_Property_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_SoftwareModulePath represents the /openconfig-platform/components/component/software-module YANG schema element.
type Component_SoftwareModulePath struct {
	*ygot.NodePath
}

// Component_SoftwareModulePathAny represents the wildcard version of the /openconfig-platform/components/component/software-module YANG schema element.
type Component_SoftwareModulePathAny struct {
	*ygot.NodePath
}

// Component_StoragePath represents the /openconfig-platform/components/component/storage YANG schema element.
type Component_StoragePath struct {
	*ygot.NodePath
}

// Component_StoragePathAny represents the wildcard version of the /openconfig-platform/components/component/storage YANG schema element.
type Component_StoragePathAny struct {
	*ygot.NodePath
}

// Component_SubcomponentPath represents the /openconfig-platform/components/component/subcomponents/subcomponent YANG schema element.
type Component_SubcomponentPath struct {
	*ygot.NodePath
}

// Component_SubcomponentPathAny represents the wildcard version of the /openconfig-platform/components/component/subcomponents/subcomponent YANG schema element.
type Component_SubcomponentPathAny struct {
	*ygot.NodePath
}

// Component_Subcomponent_NamePath represents the /openconfig-platform/components/component/subcomponents/subcomponent/config/name YANG schema element.
type Component_Subcomponent_NamePath struct {
	*ygot.NodePath
}

// Component_Subcomponent_NamePathAny represents the wildcard version of the /openconfig-platform/components/component/subcomponents/subcomponent/config/name YANG schema element.
type Component_Subcomponent_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Reference to the name of the subcomponent
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/name"
// Path from root: "/components/component/subcomponents/subcomponent/config/name"
func (n *Component_SubcomponentPath) Name() *Component_Subcomponent_NamePath {
	return &Component_Subcomponent_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the name of the subcomponent
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/name"
// Path from root: "/components/component/subcomponents/subcomponent/config/name"
func (n *Component_SubcomponentPathAny) Name() *Component_Subcomponent_NamePathAny {
	return &Component_Subcomponent_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_TemperaturePath represents the /openconfig-platform/components/component/state/temperature YANG schema element.
type Component_TemperaturePath struct {
	*ygot.NodePath
}

// Component_TemperaturePathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature YANG schema element.
type Component_TemperaturePathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmSeverityPath represents the /openconfig-platform/components/component/state/temperature/alarm-severity YANG schema element.
type Component_Temperature_AlarmSeverityPath struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmSeverityPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/alarm-severity YANG schema element.
type Component_Temperature_AlarmSeverityPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmStatusPath represents the /openconfig-platform/components/component/state/temperature/alarm-status YANG schema element.
type Component_Temperature_AlarmStatusPath struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmStatusPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/alarm-status YANG schema element.
type Component_Temperature_AlarmStatusPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmThresholdPath represents the /openconfig-platform/components/component/state/temperature/alarm-threshold YANG schema element.
type Component_Temperature_AlarmThresholdPath struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmThresholdPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/alarm-threshold YANG schema element.
type Component_Temperature_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AvgPath represents the /openconfig-platform/components/component/state/temperature/avg YANG schema element.
type Component_Temperature_AvgPath struct {
	*ygot.NodePath
}

// Component_Temperature_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/avg YANG schema element.
type Component_Temperature_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_InstantPath represents the /openconfig-platform/components/component/state/temperature/instant YANG schema element.
type Component_Temperature_InstantPath struct {
	*ygot.NodePath
}

// Component_Temperature_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/instant YANG schema element.
type Component_Temperature_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_IntervalPath represents the /openconfig-platform/components/component/state/temperature/interval YANG schema element.
type Component_Temperature_IntervalPath struct {
	*ygot.NodePath
}

// Component_Temperature_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/interval YANG schema element.
type Component_Temperature_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MaxPath represents the /openconfig-platform/components/component/state/temperature/max YANG schema element.
type Component_Temperature_MaxPath struct {
	*ygot.NodePath
}

// Component_Temperature_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/max YANG schema element.
type Component_Temperature_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MaxTimePath represents the /openconfig-platform/components/component/state/temperature/max-time YANG schema element.
type Component_Temperature_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Temperature_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/max-time YANG schema element.
type Component_Temperature_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MinPath represents the /openconfig-platform/components/component/state/temperature/min YANG schema element.
type Component_Temperature_MinPath struct {
	*ygot.NodePath
}

// Component_Temperature_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/min YANG schema element.
type Component_Temperature_MinPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MinTimePath represents the /openconfig-platform/components/component/state/temperature/min-time YANG schema element.
type Component_Temperature_MinTimePath struct {
	*ygot.NodePath
}

// Component_Temperature_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/min-time YANG schema element.
type Component_Temperature_MinTimePathAny struct {
	*ygot.NodePath
}

// AlarmSeverity (leaf): The severity of the current alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-severity"
// Path from root: "/components/component/state/temperature/alarm-severity"
func (n *Component_TemperaturePath) AlarmSeverity() *Component_Temperature_AlarmSeverityPath {
	return &Component_Temperature_AlarmSeverityPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmSeverity (leaf): The severity of the current alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-severity"
// Path from root: "/components/component/state/temperature/alarm-severity"
func (n *Component_TemperaturePathAny) AlarmSeverity() *Component_Temperature_AlarmSeverityPathAny {
	return &Component_Temperature_AlarmSeverityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmStatus (leaf): A value of true indicates the alarm has been raised or
// asserted.  The value should be false when the alarm is
// cleared.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-status"
// Path from root: "/components/component/state/temperature/alarm-status"
func (n *Component_TemperaturePath) AlarmStatus() *Component_Temperature_AlarmStatusPath {
	return &Component_Temperature_AlarmStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmStatus (leaf): A value of true indicates the alarm has been raised or
// asserted.  The value should be false when the alarm is
// cleared.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-status"
// Path from root: "/components/component/state/temperature/alarm-status"
func (n *Component_TemperaturePathAny) AlarmStatus() *Component_Temperature_AlarmStatusPathAny {
	return &Component_Temperature_AlarmStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): The threshold value that was crossed for this alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-threshold"
// Path from root: "/components/component/state/temperature/alarm-threshold"
func (n *Component_TemperaturePath) AlarmThreshold() *Component_Temperature_AlarmThresholdPath {
	return &Component_Temperature_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): The threshold value that was crossed for this alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-threshold"
// Path from root: "/components/component/state/temperature/alarm-threshold"
func (n *Component_TemperaturePathAny) AlarmThreshold() *Component_Temperature_AlarmThresholdPathAny {
	return &Component_Temperature_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/state/temperature/avg"
func (n *Component_TemperaturePath) Avg() *Component_Temperature_AvgPath {
	return &Component_Temperature_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/state/temperature/avg"
func (n *Component_TemperaturePathAny) Avg() *Component_Temperature_AvgPathAny {
	return &Component_Temperature_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/state/temperature/instant"
func (n *Component_TemperaturePath) Instant() *Component_Temperature_InstantPath {
	return &Component_Temperature_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/state/temperature/instant"
func (n *Component_TemperaturePathAny) Instant() *Component_Temperature_InstantPathAny {
	return &Component_Temperature_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/state/temperature/interval"
func (n *Component_TemperaturePath) Interval() *Component_Temperature_IntervalPath {
	return &Component_Temperature_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/state/temperature/interval"
func (n *Component_TemperaturePathAny) Interval() *Component_Temperature_IntervalPathAny {
	return &Component_Temperature_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/state/temperature/max"
func (n *Component_TemperaturePath) Max() *Component_Temperature_MaxPath {
	return &Component_Temperature_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/state/temperature/max"
func (n *Component_TemperaturePathAny) Max() *Component_Temperature_MaxPathAny {
	return &Component_Temperature_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/state/temperature/max-time"
func (n *Component_TemperaturePath) MaxTime() *Component_Temperature_MaxTimePath {
	return &Component_Temperature_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/state/temperature/max-time"
func (n *Component_TemperaturePathAny) MaxTime() *Component_Temperature_MaxTimePathAny {
	return &Component_Temperature_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/state/temperature/min"
func (n *Component_TemperaturePath) Min() *Component_Temperature_MinPath {
	return &Component_Temperature_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/state/temperature/min"
func (n *Component_TemperaturePathAny) Min() *Component_Temperature_MinPathAny {
	return &Component_Temperature_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/state/temperature/min-time"
func (n *Component_TemperaturePath) MinTime() *Component_Temperature_MinTimePath {
	return &Component_Temperature_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/state/temperature/min-time"
func (n *Component_TemperaturePathAny) MinTime() *Component_Temperature_MinTimePathAny {
	return &Component_Temperature_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_TransceiverPath represents the /openconfig-platform/components/component/transceiver YANG schema element.
type Component_TransceiverPath struct {
	*ygot.NodePath
}

// Component_TransceiverPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver YANG schema element.
type Component_TransceiverPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_ConnectorTypePath represents the /openconfig-platform/components/component/transceiver/state/connector-type YANG schema element.
type Component_Transceiver_ConnectorTypePath struct {
	*ygot.NodePath
}

// Component_Transceiver_ConnectorTypePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/connector-type YANG schema element.
type Component_Transceiver_ConnectorTypePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_DateCodePath represents the /openconfig-platform/components/component/transceiver/state/date-code YANG schema element.
type Component_Transceiver_DateCodePath struct {
	*ygot.NodePath
}

// Component_Transceiver_DateCodePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/date-code YANG schema element.
type Component_Transceiver_DateCodePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_EnabledPath represents the /openconfig-platform/components/component/transceiver/config/enabled YANG schema element.
type Component_Transceiver_EnabledPath struct {
	*ygot.NodePath
}

// Component_Transceiver_EnabledPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/config/enabled YANG schema element.
type Component_Transceiver_EnabledPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPath represents the /openconfig-platform/components/component/transceiver/state/ethernet-pmd YANG schema element.
type Component_Transceiver_EthernetPmdPath struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/ethernet-pmd YANG schema element.
type Component_Transceiver_EthernetPmdPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPreconfPath represents the /openconfig-platform/components/component/transceiver/config/ethernet-pmd-preconf YANG schema element.
type Component_Transceiver_EthernetPmdPreconfPath struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPreconfPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/config/ethernet-pmd-preconf YANG schema element.
type Component_Transceiver_EthernetPmdPreconfPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FaultConditionPath represents the /openconfig-platform/components/component/transceiver/state/fault-condition YANG schema element.
type Component_Transceiver_FaultConditionPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FaultConditionPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fault-condition YANG schema element.
type Component_Transceiver_FaultConditionPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBitsPath represents the /openconfig-platform/components/component/transceiver/state/fec-corrected-bits YANG schema element.
type Component_Transceiver_FecCorrectedBitsPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBitsPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-corrected-bits YANG schema element.
type Component_Transceiver_FecCorrectedBitsPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBytesPath represents the /openconfig-platform/components/component/transceiver/state/fec-corrected-bytes YANG schema element.
type Component_Transceiver_FecCorrectedBytesPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBytesPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-corrected-bytes YANG schema element.
type Component_Transceiver_FecCorrectedBytesPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecModePath represents the /openconfig-platform/components/component/transceiver/config/fec-mode YANG schema element.
type Component_Transceiver_FecModePath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecModePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/config/fec-mode YANG schema element.
type Component_Transceiver_FecModePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecStatusPath represents the /openconfig-platform/components/component/transceiver/state/fec-status YANG schema element.
type Component_Transceiver_FecStatusPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecStatusPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-status YANG schema element.
type Component_Transceiver_FecStatusPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableBlocksPath represents the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-blocks YANG schema element.
type Component_Transceiver_FecUncorrectableBlocksPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableBlocksPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-blocks YANG schema element.
type Component_Transceiver_FecUncorrectableBlocksPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableWordsPath represents the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-words YANG schema element.
type Component_Transceiver_FecUncorrectableWordsPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableWordsPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-words YANG schema element.
type Component_Transceiver_FecUncorrectableWordsPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPath represents the /openconfig-platform/components/component/transceiver/state/form-factor YANG schema element.
type Component_Transceiver_FormFactorPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/form-factor YANG schema element.
type Component_Transceiver_FormFactorPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPreconfPath represents the /openconfig-platform/components/component/transceiver/config/form-factor-preconf YANG schema element.
type Component_Transceiver_FormFactorPreconfPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPreconfPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/config/form-factor-preconf YANG schema element.
type Component_Transceiver_FormFactorPreconfPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_ModuleFunctionalTypePath represents the /openconfig-platform/components/component/transceiver/config/module-functional-type YANG schema element.
type Component_Transceiver_ModuleFunctionalTypePath struct {
	*ygot.NodePath
}

// Component_Transceiver_ModuleFunctionalTypePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/config/module-functional-type YANG schema element.
type Component_Transceiver_ModuleFunctionalTypePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OtnComplianceCodePath represents the /openconfig-platform/components/component/transceiver/state/otn-compliance-code YANG schema element.
type Component_Transceiver_OtnComplianceCodePath struct {
	*ygot.NodePath
}

// Component_Transceiver_OtnComplianceCodePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/otn-compliance-code YANG schema element.
type Component_Transceiver_OtnComplianceCodePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PresentPath represents the /openconfig-platform/components/component/transceiver/state/present YANG schema element.
type Component_Transceiver_PresentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PresentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/present YANG schema element.
type Component_Transceiver_PresentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SerialNoPath represents the /openconfig-platform/components/component/transceiver/state/serial-no YANG schema element.
type Component_Transceiver_SerialNoPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SerialNoPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/serial-no YANG schema element.
type Component_Transceiver_SerialNoPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SonetSdhComplianceCodePath represents the /openconfig-platform/components/component/transceiver/state/sonet-sdh-compliance-code YANG schema element.
type Component_Transceiver_SonetSdhComplianceCodePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SonetSdhComplianceCodePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/sonet-sdh-compliance-code YANG schema element.
type Component_Transceiver_SonetSdhComplianceCodePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPath represents the /openconfig-platform/components/component/transceiver/state/vendor YANG schema element.
type Component_Transceiver_VendorPath struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/vendor YANG schema element.
type Component_Transceiver_VendorPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPartPath represents the /openconfig-platform/components/component/transceiver/state/vendor-part YANG schema element.
type Component_Transceiver_VendorPartPath struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPartPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/vendor-part YANG schema element.
type Component_Transceiver_VendorPartPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorRevPath represents the /openconfig-platform/components/component/transceiver/state/vendor-rev YANG schema element.
type Component_Transceiver_VendorRevPath struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorRevPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/vendor-rev YANG schema element.
type Component_Transceiver_VendorRevPathAny struct {
	*ygot.NodePath
}

// ChannelAny (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index (wildcarded): uint16
func (n *Component_TransceiverPath) ChannelAny() *Component_Transceiver_ChannelPathAny {
	return &Component_Transceiver_ChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// ChannelAny (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index (wildcarded): uint16
func (n *Component_TransceiverPathAny) ChannelAny() *Component_Transceiver_ChannelPathAny {
	return &Component_Transceiver_ChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Channel (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index: uint16
func (n *Component_TransceiverPath) Channel(Index uint16) *Component_Transceiver_ChannelPath {
	return &Component_Transceiver_ChannelPath{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Channel (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index: uint16
func (n *Component_TransceiverPathAny) Channel(Index uint16) *Component_Transceiver_ChannelPathAny {
	return &Component_Transceiver_ChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// ConnectorType (leaf): Connector type used on this port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/connector-type"
// Path from root: "/components/component/transceiver/state/connector-type"
func (n *Component_TransceiverPath) ConnectorType() *Component_Transceiver_ConnectorTypePath {
	return &Component_Transceiver_ConnectorTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connector-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectorType (leaf): Connector type used on this port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/connector-type"
// Path from root: "/components/component/transceiver/state/connector-type"
func (n *Component_TransceiverPathAny) ConnectorType() *Component_Transceiver_ConnectorTypePathAny {
	return &Component_Transceiver_ConnectorTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connector-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DateCode (leaf): Representation of the transceiver date code, typically
// stored as YYMMDD.  The time portion of the value is
// undefined and not intended to be read.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/date-code"
// Path from root: "/components/component/transceiver/state/date-code"
func (n *Component_TransceiverPath) DateCode() *Component_Transceiver_DateCodePath {
	return &Component_Transceiver_DateCodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "date-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// DateCode (leaf): Representation of the transceiver date code, typically
// stored as YYMMDD.  The time portion of the value is
// undefined and not intended to be read.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/date-code"
// Path from root: "/components/component/transceiver/state/date-code"
func (n *Component_TransceiverPathAny) DateCode() *Component_Transceiver_DateCodePathAny {
	return &Component_Transceiver_DateCodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "date-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Turns power on / off to the transceiver -- provides a means
// to power on/off the transceiver (in the case of SFP, SFP+,
// QSFP,...) or enable high-power mode (in the case of CFP,
// CFP2, CFP4) and is optionally supported (device can choose to
// always enable).  True = power on / high power, False =
// powered off
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/enabled"
// Path from root: "/components/component/transceiver/config/enabled"
func (n *Component_TransceiverPath) Enabled() *Component_Transceiver_EnabledPath {
	return &Component_Transceiver_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Turns power on / off to the transceiver -- provides a means
// to power on/off the transceiver (in the case of SFP, SFP+,
// QSFP,...) or enable high-power mode (in the case of CFP,
// CFP2, CFP4) and is optionally supported (device can choose to
// always enable).  True = power on / high power, False =
// powered off
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/enabled"
// Path from root: "/components/component/transceiver/config/enabled"
func (n *Component_TransceiverPathAny) Enabled() *Component_Transceiver_EnabledPathAny {
	return &Component_Transceiver_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmd (leaf): Ethernet PMD (physical medium dependent sublayer) that the
// transceiver supports. The SFF/QSFP MSAs have registers for
// this and CFP MSA has similar.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/ethernet-pmd"
// Path from root: "/components/component/transceiver/state/ethernet-pmd"
func (n *Component_TransceiverPath) EthernetPmd() *Component_Transceiver_EthernetPmdPath {
	return &Component_Transceiver_EthernetPmdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-pmd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmd (leaf): Ethernet PMD (physical medium dependent sublayer) that the
// transceiver supports. The SFF/QSFP MSAs have registers for
// this and CFP MSA has similar.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/ethernet-pmd"
// Path from root: "/components/component/transceiver/state/ethernet-pmd"
func (n *Component_TransceiverPathAny) EthernetPmd() *Component_Transceiver_EthernetPmdPathAny {
	return &Component_Transceiver_EthernetPmdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-pmd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmdPreconf (leaf): The Ethernet PMD is a property of the optical transceiver
// used on the port, indicating the type of physical connection.
// It is included in configuration data to allow pre-configuring
// a port/transceiver with the expected PMD.  The actual PMD is
// indicated by the ethernet-pmd state leaf.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/ethernet-pmd-preconf"
// Path from root: "/components/component/transceiver/config/ethernet-pmd-preconf"
func (n *Component_TransceiverPath) EthernetPmdPreconf() *Component_Transceiver_EthernetPmdPreconfPath {
	return &Component_Transceiver_EthernetPmdPreconfPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ethernet-pmd-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmdPreconf (leaf): The Ethernet PMD is a property of the optical transceiver
// used on the port, indicating the type of physical connection.
// It is included in configuration data to allow pre-configuring
// a port/transceiver with the expected PMD.  The actual PMD is
// indicated by the ethernet-pmd state leaf.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/ethernet-pmd-preconf"
// Path from root: "/components/component/transceiver/config/ethernet-pmd-preconf"
func (n *Component_TransceiverPathAny) EthernetPmdPreconf() *Component_Transceiver_EthernetPmdPreconfPathAny {
	return &Component_Transceiver_EthernetPmdPreconfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ethernet-pmd-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// FaultCondition (leaf): Indicates if a fault condition exists in the transceiver
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fault-condition"
// Path from root: "/components/component/transceiver/state/fault-condition"
func (n *Component_TransceiverPath) FaultCondition() *Component_Transceiver_FaultConditionPath {
	return &Component_Transceiver_FaultConditionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fault-condition"},
			map[string]interface{}{},
			n,
		),
	}
}

// FaultCondition (leaf): Indicates if a fault condition exists in the transceiver
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fault-condition"
// Path from root: "/components/component/transceiver/state/fault-condition"
func (n *Component_TransceiverPathAny) FaultCondition() *Component_Transceiver_FaultConditionPathAny {
	return &Component_Transceiver_FaultConditionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fault-condition"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBits (leaf): The number of bits that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bits"
// Path from root: "/components/component/transceiver/state/fec-corrected-bits"
func (n *Component_TransceiverPath) FecCorrectedBits() *Component_Transceiver_FecCorrectedBitsPath {
	return &Component_Transceiver_FecCorrectedBitsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bits"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBits (leaf): The number of bits that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bits"
// Path from root: "/components/component/transceiver/state/fec-corrected-bits"
func (n *Component_TransceiverPathAny) FecCorrectedBits() *Component_Transceiver_FecCorrectedBitsPathAny {
	return &Component_Transceiver_FecCorrectedBitsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bits"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBytes (leaf): The number of bytes that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bytes"
// Path from root: "/components/component/transceiver/state/fec-corrected-bytes"
func (n *Component_TransceiverPath) FecCorrectedBytes() *Component_Transceiver_FecCorrectedBytesPath {
	return &Component_Transceiver_FecCorrectedBytesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bytes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBytes (leaf): The number of bytes that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bytes"
// Path from root: "/components/component/transceiver/state/fec-corrected-bytes"
func (n *Component_TransceiverPathAny) FecCorrectedBytes() *Component_Transceiver_FecCorrectedBytesPathAny {
	return &Component_Transceiver_FecCorrectedBytesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bytes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecMode (leaf): The FEC mode indicates the mode of operation for the
// transceiver's FEC. This defines typical operational modes
// and does not aim to specify more granular FEC capabilities.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/fec-mode"
// Path from root: "/components/component/transceiver/config/fec-mode"
func (n *Component_TransceiverPath) FecMode() *Component_Transceiver_FecModePath {
	return &Component_Transceiver_FecModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fec-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecMode (leaf): The FEC mode indicates the mode of operation for the
// transceiver's FEC. This defines typical operational modes
// and does not aim to specify more granular FEC capabilities.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/fec-mode"
// Path from root: "/components/component/transceiver/config/fec-mode"
func (n *Component_TransceiverPathAny) FecMode() *Component_Transceiver_FecModePathAny {
	return &Component_Transceiver_FecModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fec-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecStatus (leaf): Operational status of FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-status"
// Path from root: "/components/component/transceiver/state/fec-status"
func (n *Component_TransceiverPath) FecStatus() *Component_Transceiver_FecStatusPath {
	return &Component_Transceiver_FecStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecStatus (leaf): Operational status of FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-status"
// Path from root: "/components/component/transceiver/state/fec-status"
func (n *Component_TransceiverPathAny) FecStatus() *Component_Transceiver_FecStatusPathAny {
	return &Component_Transceiver_FecStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableBlocks (leaf): The number of blocks that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-blocks"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-blocks"
func (n *Component_TransceiverPath) FecUncorrectableBlocks() *Component_Transceiver_FecUncorrectableBlocksPath {
	return &Component_Transceiver_FecUncorrectableBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableBlocks (leaf): The number of blocks that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-blocks"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-blocks"
func (n *Component_TransceiverPathAny) FecUncorrectableBlocks() *Component_Transceiver_FecUncorrectableBlocksPathAny {
	return &Component_Transceiver_FecUncorrectableBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableWords (leaf): The number of words that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-words"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-words"
func (n *Component_TransceiverPath) FecUncorrectableWords() *Component_Transceiver_FecUncorrectableWordsPath {
	return &Component_Transceiver_FecUncorrectableWordsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-words"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableWords (leaf): The number of words that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-words"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-words"
func (n *Component_TransceiverPathAny) FecUncorrectableWords() *Component_Transceiver_FecUncorrectableWordsPathAny {
	return &Component_Transceiver_FecUncorrectableWordsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-words"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactor (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/form-factor"
// Path from root: "/components/component/transceiver/state/form-factor"
func (n *Component_TransceiverPath) FormFactor() *Component_Transceiver_FormFactorPath {
	return &Component_Transceiver_FormFactorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "form-factor"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactor (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/form-factor"
// Path from root: "/components/component/transceiver/state/form-factor"
func (n *Component_TransceiverPathAny) FormFactor() *Component_Transceiver_FormFactorPathAny {
	return &Component_Transceiver_FormFactorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "form-factor"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactorPreconf (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
//
// The form factor is included in configuration data to allow
// pre-configuring a device with the expected type of
// transceiver ahead of deployment.  The corresponding state
// leaf should reflect the actual transceiver type plugged into
// the system.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/form-factor-preconf"
// Path from root: "/components/component/transceiver/config/form-factor-preconf"
func (n *Component_TransceiverPath) FormFactorPreconf() *Component_Transceiver_FormFactorPreconfPath {
	return &Component_Transceiver_FormFactorPreconfPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "form-factor-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactorPreconf (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
//
// The form factor is included in configuration data to allow
// pre-configuring a device with the expected type of
// transceiver ahead of deployment.  The corresponding state
// leaf should reflect the actual transceiver type plugged into
// the system.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/form-factor-preconf"
// Path from root: "/components/component/transceiver/config/form-factor-preconf"
func (n *Component_TransceiverPathAny) FormFactorPreconf() *Component_Transceiver_FormFactorPreconfPathAny {
	return &Component_Transceiver_FormFactorPreconfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "form-factor-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/state/input-power"
func (n *Component_TransceiverPath) InputPower() *Component_Transceiver_InputPowerPath {
	return &Component_Transceiver_InputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/state/input-power"
func (n *Component_TransceiverPathAny) InputPower() *Component_Transceiver_InputPowerPathAny {
	return &Component_Transceiver_InputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/state/laser-bias-current"
func (n *Component_TransceiverPath) LaserBiasCurrent() *Component_Transceiver_LaserBiasCurrentPath {
	return &Component_Transceiver_LaserBiasCurrentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/state/laser-bias-current"
func (n *Component_TransceiverPathAny) LaserBiasCurrent() *Component_Transceiver_LaserBiasCurrentPathAny {
	return &Component_Transceiver_LaserBiasCurrentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleFunctionalType (leaf): Indicates the module functional type which represents the
// functional capability of the transceiver. For example, this
// would specify the module is a digital coherent optic or a
// standard grey optic that performs on-off keying.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/module-functional-type"
// Path from root: "/components/component/transceiver/config/module-functional-type"
func (n *Component_TransceiverPath) ModuleFunctionalType() *Component_Transceiver_ModuleFunctionalTypePath {
	return &Component_Transceiver_ModuleFunctionalTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "module-functional-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleFunctionalType (leaf): Indicates the module functional type which represents the
// functional capability of the transceiver. For example, this
// would specify the module is a digital coherent optic or a
// standard grey optic that performs on-off keying.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/module-functional-type"
// Path from root: "/components/component/transceiver/config/module-functional-type"
func (n *Component_TransceiverPathAny) ModuleFunctionalType() *Component_Transceiver_ModuleFunctionalTypePathAny {
	return &Component_Transceiver_ModuleFunctionalTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "module-functional-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// OtnComplianceCode (leaf): OTN application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/otn-compliance-code"
// Path from root: "/components/component/transceiver/state/otn-compliance-code"
func (n *Component_TransceiverPath) OtnComplianceCode() *Component_Transceiver_OtnComplianceCodePath {
	return &Component_Transceiver_OtnComplianceCodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "otn-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// OtnComplianceCode (leaf): OTN application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/otn-compliance-code"
// Path from root: "/components/component/transceiver/state/otn-compliance-code"
func (n *Component_TransceiverPathAny) OtnComplianceCode() *Component_Transceiver_OtnComplianceCodePathAny {
	return &Component_Transceiver_OtnComplianceCodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "otn-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/state/output-power"
func (n *Component_TransceiverPath) OutputPower() *Component_Transceiver_OutputPowerPath {
	return &Component_Transceiver_OutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/state/output-power"
func (n *Component_TransceiverPathAny) OutputPower() *Component_Transceiver_OutputPowerPathAny {
	return &Component_Transceiver_OutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostFecBer (container): Bit error rate after forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/post-fec-ber"
// Path from root: "/components/component/transceiver/state/post-fec-ber"
func (n *Component_TransceiverPath) PostFecBer() *Component_Transceiver_PostFecBerPath {
	return &Component_Transceiver_PostFecBerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostFecBer (container): Bit error rate after forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/post-fec-ber"
// Path from root: "/components/component/transceiver/state/post-fec-ber"
func (n *Component_TransceiverPathAny) PostFecBer() *Component_Transceiver_PostFecBerPathAny {
	return &Component_Transceiver_PostFecBerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreFecBer (container): Bit error rate before forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/pre-fec-ber"
// Path from root: "/components/component/transceiver/state/pre-fec-ber"
func (n *Component_TransceiverPath) PreFecBer() *Component_Transceiver_PreFecBerPath {
	return &Component_Transceiver_PreFecBerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pre-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreFecBer (container): Bit error rate before forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/pre-fec-ber"
// Path from root: "/components/component/transceiver/state/pre-fec-ber"
func (n *Component_TransceiverPathAny) PreFecBer() *Component_Transceiver_PreFecBerPathAny {
	return &Component_Transceiver_PreFecBerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pre-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// Present (leaf): Indicates whether a transceiver is present in
// the specified client port.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/present"
// Path from root: "/components/component/transceiver/state/present"
func (n *Component_TransceiverPath) Present() *Component_Transceiver_PresentPath {
	return &Component_Transceiver_PresentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "present"},
			map[string]interface{}{},
			n,
		),
	}
}

// Present (leaf): Indicates whether a transceiver is present in
// the specified client port.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/present"
// Path from root: "/components/component/transceiver/state/present"
func (n *Component_TransceiverPathAny) Present() *Component_Transceiver_PresentPathAny {
	return &Component_Transceiver_PresentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "present"},
			map[string]interface{}{},
			n,
		),
	}
}

// SerialNo (leaf): Transceiver serial number. 16-octet field that contains
// ASCII characters, left-aligned and padded on the right with
// ASCII spaces (20h). If part serial number is undefined, all
// 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/serial-no"
// Path from root: "/components/component/transceiver/state/serial-no"
func (n *Component_TransceiverPath) SerialNo() *Component_Transceiver_SerialNoPath {
	return &Component_Transceiver_SerialNoPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "serial-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// SerialNo (leaf): Transceiver serial number. 16-octet field that contains
// ASCII characters, left-aligned and padded on the right with
// ASCII spaces (20h). If part serial number is undefined, all
// 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/serial-no"
// Path from root: "/components/component/transceiver/state/serial-no"
func (n *Component_TransceiverPathAny) SerialNo() *Component_Transceiver_SerialNoPathAny {
	return &Component_Transceiver_SerialNoPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "serial-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// SonetSdhComplianceCode (leaf): SONET/SDH application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/sonet-sdh-compliance-code"
// Path from root: "/components/component/transceiver/state/sonet-sdh-compliance-code"
func (n *Component_TransceiverPath) SonetSdhComplianceCode() *Component_Transceiver_SonetSdhComplianceCodePath {
	return &Component_Transceiver_SonetSdhComplianceCodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sonet-sdh-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// SonetSdhComplianceCode (leaf): SONET/SDH application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/sonet-sdh-compliance-code"
// Path from root: "/components/component/transceiver/state/sonet-sdh-compliance-code"
func (n *Component_TransceiverPathAny) SonetSdhComplianceCode() *Component_Transceiver_SonetSdhComplianceCodePathAny {
	return &Component_Transceiver_SonetSdhComplianceCodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sonet-sdh-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltage (container): Supply voltage to the transceiver in volts with 2 decimal
// precision. Values include the instantaneous, average, minimum,
// and maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage"
// Path from root: "/components/component/transceiver/state/supply-voltage"
func (n *Component_TransceiverPath) SupplyVoltage() *Component_Transceiver_SupplyVoltagePath {
	return &Component_Transceiver_SupplyVoltagePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltage (container): Supply voltage to the transceiver in volts with 2 decimal
// precision. Values include the instantaneous, average, minimum,
// and maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage"
// Path from root: "/components/component/transceiver/state/supply-voltage"
func (n *Component_TransceiverPathAny) SupplyVoltage() *Component_Transceiver_SupplyVoltagePathAny {
	return &Component_Transceiver_SupplyVoltagePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdAny (list): List of transceiver alarm thresholds, indexed by
// alarm severity.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "thresholds/threshold"
// Path from root: "/components/component/transceiver/thresholds/threshold"
// Severity (wildcarded): E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY
func (n *Component_TransceiverPath) ThresholdAny() *Component_Transceiver_ThresholdPathAny {
	return &Component_Transceiver_ThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"thresholds", "threshold"},
			map[string]interface{}{"severity": "*"},
			n,
		),
	}
}

// ThresholdAny (list): List of transceiver alarm thresholds, indexed by
// alarm severity.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "thresholds/threshold"
// Path from root: "/components/component/transceiver/thresholds/threshold"
// Severity (wildcarded): E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY
func (n *Component_TransceiverPathAny) ThresholdAny() *Component_Transceiver_ThresholdPathAny {
	return &Component_Transceiver_ThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"thresholds", "threshold"},
			map[string]interface{}{"severity": "*"},
			n,
		),
	}
}

// Threshold (list): List of transceiver alarm thresholds, indexed by
// alarm severity.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "thresholds/threshold"
// Path from root: "/components/component/transceiver/thresholds/threshold"
// Severity: E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY
func (n *Component_TransceiverPath) Threshold(Severity E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) *Component_Transceiver_ThresholdPath {
	return &Component_Transceiver_ThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"thresholds", "threshold"},
			map[string]interface{}{"severity": Severity},
			n,
		),
	}
}

// Threshold (list): List of transceiver alarm thresholds, indexed by
// alarm severity.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "thresholds/threshold"
// Path from root: "/components/component/transceiver/thresholds/threshold"
// Severity: E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY
func (n *Component_TransceiverPathAny) Threshold(Severity E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) *Component_Transceiver_ThresholdPathAny {
	return &Component_Transceiver_ThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"thresholds", "threshold"},
			map[string]interface{}{"severity": Severity},
			n,
		),
	}
}

// Vendor (leaf): Full name of transceiver vendor. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor"
// Path from root: "/components/component/transceiver/state/vendor"
func (n *Component_TransceiverPath) Vendor() *Component_Transceiver_VendorPath {
	return &Component_Transceiver_VendorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vendor (leaf): Full name of transceiver vendor. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor"
// Path from root: "/components/component/transceiver/state/vendor"
func (n *Component_TransceiverPathAny) Vendor() *Component_Transceiver_VendorPathAny {
	return &Component_Transceiver_VendorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorPart (leaf): Transceiver vendor's part number. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h). If part number is undefined,
// all 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-part"
// Path from root: "/components/component/transceiver/state/vendor-part"
func (n *Component_TransceiverPath) VendorPart() *Component_Transceiver_VendorPartPath {
	return &Component_Transceiver_VendorPartPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-part"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorPart (leaf): Transceiver vendor's part number. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h). If part number is undefined,
// all 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-part"
// Path from root: "/components/component/transceiver/state/vendor-part"
func (n *Component_TransceiverPathAny) VendorPart() *Component_Transceiver_VendorPartPathAny {
	return &Component_Transceiver_VendorPartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-part"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorRev (leaf): Transceiver vendor's revision number. Field of 1 to 4 octets that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-rev"
// Path from root: "/components/component/transceiver/state/vendor-rev"
func (n *Component_TransceiverPath) VendorRev() *Component_Transceiver_VendorRevPath {
	return &Component_Transceiver_VendorRevPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-rev"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorRev (leaf): Transceiver vendor's revision number. Field of 1 to 4 octets that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-rev"
// Path from root: "/components/component/transceiver/state/vendor-rev"
func (n *Component_TransceiverPathAny) VendorRev() *Component_Transceiver_VendorRevPathAny {
	return &Component_Transceiver_VendorRevPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-rev"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_ChannelPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel YANG schema element.
type Component_Transceiver_ChannelPath struct {
	*ygot.NodePath
}

// Component_Transceiver_ChannelPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel YANG schema element.
type Component_Transceiver_ChannelPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_AssociatedOpticalChannelPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/associated-optical-channel YANG schema element.
type Component_Transceiver_Channel_AssociatedOpticalChannelPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_AssociatedOpticalChannelPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/associated-optical-channel YANG schema element.
type Component_Transceiver_Channel_AssociatedOpticalChannelPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_DescriptionPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/description YANG schema element.
type Component_Transceiver_Channel_DescriptionPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_DescriptionPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/description YANG schema element.
type Component_Transceiver_Channel_DescriptionPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_IndexPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/index YANG schema element.
type Component_Transceiver_Channel_IndexPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_IndexPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/index YANG schema element.
type Component_Transceiver_Channel_IndexPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserAgePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-age YANG schema element.
type Component_Transceiver_Channel_LaserAgePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserAgePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-age YANG schema element.
type Component_Transceiver_Channel_LaserAgePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputFrequencyPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-frequency YANG schema element.
type Component_Transceiver_Channel_OutputFrequencyPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputFrequencyPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-frequency YANG schema element.
type Component_Transceiver_Channel_OutputFrequencyPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetOutputPowerPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/target-output-power YANG schema element.
type Component_Transceiver_Channel_TargetOutputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetOutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/target-output-power YANG schema element.
type Component_Transceiver_Channel_TargetOutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TxLaserPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/tx-laser YANG schema element.
type Component_Transceiver_Channel_TxLaserPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TxLaserPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/config/tx-laser YANG schema element.
type Component_Transceiver_Channel_TxLaserPathAny struct {
	*ygot.NodePath
}

// AssociatedOpticalChannel (leaf): A physical channel may reference an optical channel
// component. If the physical channel does make this optional
// reference, then a limited set of leaves will apply within
// the physical channel to avoid duplication within the optical
// channel.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/associated-optical-channel"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/associated-optical-channel"
func (n *Component_Transceiver_ChannelPath) AssociatedOpticalChannel() *Component_Transceiver_Channel_AssociatedOpticalChannelPath {
	return &Component_Transceiver_Channel_AssociatedOpticalChannelPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "associated-optical-channel"},
			map[string]interface{}{},
			n,
		),
	}
}

// AssociatedOpticalChannel (leaf): A physical channel may reference an optical channel
// component. If the physical channel does make this optional
// reference, then a limited set of leaves will apply within
// the physical channel to avoid duplication within the optical
// channel.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/associated-optical-channel"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/associated-optical-channel"
func (n *Component_Transceiver_ChannelPathAny) AssociatedOpticalChannel() *Component_Transceiver_Channel_AssociatedOpticalChannelPathAny {
	return &Component_Transceiver_Channel_AssociatedOpticalChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "associated-optical-channel"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): Text description for the client physical channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/description"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/description"
func (n *Component_Transceiver_ChannelPath) Description() *Component_Transceiver_Channel_DescriptionPath {
	return &Component_Transceiver_Channel_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): Text description for the client physical channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/description"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/description"
func (n *Component_Transceiver_ChannelPathAny) Description() *Component_Transceiver_Channel_DescriptionPathAny {
	return &Component_Transceiver_Channel_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the physical channnel or lane within a physical
// client port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/index"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/index"
func (n *Component_Transceiver_ChannelPath) Index() *Component_Transceiver_Channel_IndexPath {
	return &Component_Transceiver_Channel_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the physical channnel or lane within a physical
// client port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/index"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/index"
func (n *Component_Transceiver_ChannelPathAny) Index() *Component_Transceiver_Channel_IndexPathAny {
	return &Component_Transceiver_Channel_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power"
func (n *Component_Transceiver_ChannelPath) InputPower() *Component_Transceiver_Channel_InputPowerPath {
	return &Component_Transceiver_Channel_InputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power"
func (n *Component_Transceiver_ChannelPathAny) InputPower() *Component_Transceiver_Channel_InputPowerPathAny {
	return &Component_Transceiver_Channel_InputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserAge (leaf): Laser age (0% at beginning of life, 100% end of life) in integer
// percentage. This term is defined by Common Management Interface
// Specification (CMIS).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-age"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-age"
func (n *Component_Transceiver_ChannelPath) LaserAge() *Component_Transceiver_Channel_LaserAgePath {
	return &Component_Transceiver_Channel_LaserAgePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-age"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserAge (leaf): Laser age (0% at beginning of life, 100% end of life) in integer
// percentage. This term is defined by Common Management Interface
// Specification (CMIS).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-age"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-age"
func (n *Component_Transceiver_ChannelPathAny) LaserAge() *Component_Transceiver_Channel_LaserAgePathAny {
	return &Component_Transceiver_Channel_LaserAgePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-age"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"
func (n *Component_Transceiver_ChannelPath) LaserBiasCurrent() *Component_Transceiver_Channel_LaserBiasCurrentPath {
	return &Component_Transceiver_Channel_LaserBiasCurrentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"
func (n *Component_Transceiver_ChannelPathAny) LaserBiasCurrent() *Component_Transceiver_Channel_LaserBiasCurrentPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperature (container): Laser temperature for the cooled laser in degrees Celsius with 1
// decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the
// instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature"
func (n *Component_Transceiver_ChannelPath) LaserTemperature() *Component_Transceiver_Channel_LaserTemperaturePath {
	return &Component_Transceiver_Channel_LaserTemperaturePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperature (container): Laser temperature for the cooled laser in degrees Celsius with 1
// decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the
// instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature"
func (n *Component_Transceiver_ChannelPathAny) LaserTemperature() *Component_Transceiver_Channel_LaserTemperaturePathAny {
	return &Component_Transceiver_Channel_LaserTemperaturePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputFrequency (leaf): The frequency in MHz of the individual physical channel
// (e.g. ITU C50 - 195.0THz and would be reported as
// 195,000,000 MHz in this model). This attribute is not
// configurable on most client ports.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-frequency"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-frequency"
func (n *Component_Transceiver_ChannelPath) OutputFrequency() *Component_Transceiver_Channel_OutputFrequencyPath {
	return &Component_Transceiver_Channel_OutputFrequencyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-frequency"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputFrequency (leaf): The frequency in MHz of the individual physical channel
// (e.g. ITU C50 - 195.0THz and would be reported as
// 195,000,000 MHz in this model). This attribute is not
// configurable on most client ports.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-frequency"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-frequency"
func (n *Component_Transceiver_ChannelPathAny) OutputFrequency() *Component_Transceiver_Channel_OutputFrequencyPathAny {
	return &Component_Transceiver_Channel_OutputFrequencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-frequency"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power"
func (n *Component_Transceiver_ChannelPath) OutputPower() *Component_Transceiver_Channel_OutputPowerPath {
	return &Component_Transceiver_Channel_OutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power"
func (n *Component_Transceiver_ChannelPathAny) OutputPower() *Component_Transceiver_Channel_OutputPowerPathAny {
	return &Component_Transceiver_Channel_OutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetFrequencyDeviation (container): The difference in MHz with 1 decimal precision between the target
// center frequency and the actual current center frequency . This term
// is defined by Common Management Interface Specification (CMIS) and
// referred to as laser frequency error or laser ferquency deviation.
// Values include the instantaneous, average, minimum, and maximum
// statistics. If avg/min/max statistics are not supported, the target
// is expected to just supply the instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/target-frequency-deviation"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation"
func (n *Component_Transceiver_ChannelPath) TargetFrequencyDeviation() *Component_Transceiver_Channel_TargetFrequencyDeviationPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-frequency-deviation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetFrequencyDeviation (container): The difference in MHz with 1 decimal precision between the target
// center frequency and the actual current center frequency . This term
// is defined by Common Management Interface Specification (CMIS) and
// referred to as laser frequency error or laser ferquency deviation.
// Values include the instantaneous, average, minimum, and maximum
// statistics. If avg/min/max statistics are not supported, the target
// is expected to just supply the instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/target-frequency-deviation"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation"
func (n *Component_Transceiver_ChannelPathAny) TargetFrequencyDeviation() *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-frequency-deviation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetOutputPower (leaf): Target output optical power level of the optical channel,
// expressed in increments of 0.01 dBm (decibel-milliwats)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/target-output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/target-output-power"
func (n *Component_Transceiver_ChannelPath) TargetOutputPower() *Component_Transceiver_Channel_TargetOutputPowerPath {
	return &Component_Transceiver_Channel_TargetOutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "target-output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetOutputPower (leaf): Target output optical power level of the optical channel,
// expressed in increments of 0.01 dBm (decibel-milliwats)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/target-output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/target-output-power"
func (n *Component_Transceiver_ChannelPathAny) TargetOutputPower() *Component_Transceiver_Channel_TargetOutputPowerPathAny {
	return &Component_Transceiver_Channel_TargetOutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "target-output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// TecCurrent (container): The amount of current flowing to the TC of a cooled laser in percentage
// with 2 decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tec-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current"
func (n *Component_Transceiver_ChannelPath) TecCurrent() *Component_Transceiver_Channel_TecCurrentPath {
	return &Component_Transceiver_Channel_TecCurrentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tec-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// TecCurrent (container): The amount of current flowing to the TC of a cooled laser in percentage
// with 2 decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tec-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current"
func (n *Component_Transceiver_ChannelPathAny) TecCurrent() *Component_Transceiver_Channel_TecCurrentPathAny {
	return &Component_Transceiver_Channel_TecCurrentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tec-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// TxLaser (leaf): Enable (true) or disable (false) the transmit label for the
// channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/tx-laser"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/tx-laser"
func (n *Component_Transceiver_ChannelPath) TxLaser() *Component_Transceiver_Channel_TxLaserPath {
	return &Component_Transceiver_Channel_TxLaserPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tx-laser"},
			map[string]interface{}{},
			n,
		),
	}
}

// TxLaser (leaf): Enable (true) or disable (false) the transmit label for the
// channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "config/tx-laser"
// Path from root: "/components/component/transceiver/physical-channels/channel/config/tx-laser"
func (n *Component_Transceiver_ChannelPathAny) TxLaser() *Component_Transceiver_Channel_TxLaserPathAny {
	return &Component_Transceiver_Channel_TxLaserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tx-laser"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_InputPowerPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power YANG schema element.
type Component_Transceiver_Channel_InputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power YANG schema element.
type Component_Transceiver_Channel_InputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/avg YANG schema element.
type Component_Transceiver_Channel_InputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/avg YANG schema element.
type Component_Transceiver_Channel_InputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/instant YANG schema element.
type Component_Transceiver_Channel_InputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/instant YANG schema element.
type Component_Transceiver_Channel_InputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/interval YANG schema element.
type Component_Transceiver_Channel_InputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/interval YANG schema element.
type Component_Transceiver_Channel_InputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min YANG schema element.
type Component_Transceiver_Channel_InputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min YANG schema element.
type Component_Transceiver_Channel_InputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/avg"
func (n *Component_Transceiver_Channel_InputPowerPath) Avg() *Component_Transceiver_Channel_InputPower_AvgPath {
	return &Component_Transceiver_Channel_InputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/avg"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Avg() *Component_Transceiver_Channel_InputPower_AvgPathAny {
	return &Component_Transceiver_Channel_InputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/instant"
func (n *Component_Transceiver_Channel_InputPowerPath) Instant() *Component_Transceiver_Channel_InputPower_InstantPath {
	return &Component_Transceiver_Channel_InputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/instant"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Instant() *Component_Transceiver_Channel_InputPower_InstantPathAny {
	return &Component_Transceiver_Channel_InputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/interval"
func (n *Component_Transceiver_Channel_InputPowerPath) Interval() *Component_Transceiver_Channel_InputPower_IntervalPath {
	return &Component_Transceiver_Channel_InputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/interval"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Interval() *Component_Transceiver_Channel_InputPower_IntervalPathAny {
	return &Component_Transceiver_Channel_InputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max"
func (n *Component_Transceiver_Channel_InputPowerPath) Max() *Component_Transceiver_Channel_InputPower_MaxPath {
	return &Component_Transceiver_Channel_InputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Max() *Component_Transceiver_Channel_InputPower_MaxPathAny {
	return &Component_Transceiver_Channel_InputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max-time"
func (n *Component_Transceiver_Channel_InputPowerPath) MaxTime() *Component_Transceiver_Channel_InputPower_MaxTimePath {
	return &Component_Transceiver_Channel_InputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max-time"
func (n *Component_Transceiver_Channel_InputPowerPathAny) MaxTime() *Component_Transceiver_Channel_InputPower_MaxTimePathAny {
	return &Component_Transceiver_Channel_InputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min"
func (n *Component_Transceiver_Channel_InputPowerPath) Min() *Component_Transceiver_Channel_InputPower_MinPath {
	return &Component_Transceiver_Channel_InputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Min() *Component_Transceiver_Channel_InputPower_MinPathAny {
	return &Component_Transceiver_Channel_InputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min-time"
func (n *Component_Transceiver_Channel_InputPowerPath) MinTime() *Component_Transceiver_Channel_InputPower_MinTimePath {
	return &Component_Transceiver_Channel_InputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min-time"
func (n *Component_Transceiver_Channel_InputPowerPathAny) MinTime() *Component_Transceiver_Channel_InputPower_MinTimePathAny {
	return &Component_Transceiver_Channel_InputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_LaserBiasCurrentPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Avg() *Component_Transceiver_Channel_LaserBiasCurrent_AvgPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Avg() *Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Instant() *Component_Transceiver_Channel_LaserBiasCurrent_InstantPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Instant() *Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Interval() *Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Interval() *Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Max() *Component_Transceiver_Channel_LaserBiasCurrent_MaxPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Max() *Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) MaxTime() *Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) MaxTime() *Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Min() *Component_Transceiver_Channel_LaserBiasCurrent_MinPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Min() *Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) MinTime() *Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) MinTime() *Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_LaserTemperaturePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature YANG schema element.
type Component_Transceiver_Channel_LaserTemperaturePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperaturePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature YANG schema element.
type Component_Transceiver_Channel_LaserTemperaturePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Avg() *Component_Transceiver_Channel_LaserTemperature_AvgPath {
	return &Component_Transceiver_Channel_LaserTemperature_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Avg() *Component_Transceiver_Channel_LaserTemperature_AvgPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Instant() *Component_Transceiver_Channel_LaserTemperature_InstantPath {
	return &Component_Transceiver_Channel_LaserTemperature_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Instant() *Component_Transceiver_Channel_LaserTemperature_InstantPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Interval() *Component_Transceiver_Channel_LaserTemperature_IntervalPath {
	return &Component_Transceiver_Channel_LaserTemperature_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Interval() *Component_Transceiver_Channel_LaserTemperature_IntervalPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Max() *Component_Transceiver_Channel_LaserTemperature_MaxPath {
	return &Component_Transceiver_Channel_LaserTemperature_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Max() *Component_Transceiver_Channel_LaserTemperature_MaxPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) MaxTime() *Component_Transceiver_Channel_LaserTemperature_MaxTimePath {
	return &Component_Transceiver_Channel_LaserTemperature_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) MaxTime() *Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Min() *Component_Transceiver_Channel_LaserTemperature_MinPath {
	return &Component_Transceiver_Channel_LaserTemperature_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Min() *Component_Transceiver_Channel_LaserTemperature_MinPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) MinTime() *Component_Transceiver_Channel_LaserTemperature_MinTimePath {
	return &Component_Transceiver_Channel_LaserTemperature_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) MinTime() *Component_Transceiver_Channel_LaserTemperature_MinTimePathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_OutputPowerPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power YANG schema element.
type Component_Transceiver_Channel_OutputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power YANG schema element.
type Component_Transceiver_Channel_OutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/avg YANG schema element.
type Component_Transceiver_Channel_OutputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/avg YANG schema element.
type Component_Transceiver_Channel_OutputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/instant YANG schema element.
type Component_Transceiver_Channel_OutputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/instant YANG schema element.
type Component_Transceiver_Channel_OutputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/interval YANG schema element.
type Component_Transceiver_Channel_OutputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/interval YANG schema element.
type Component_Transceiver_Channel_OutputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/avg"
func (n *Component_Transceiver_Channel_OutputPowerPath) Avg() *Component_Transceiver_Channel_OutputPower_AvgPath {
	return &Component_Transceiver_Channel_OutputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/avg"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Avg() *Component_Transceiver_Channel_OutputPower_AvgPathAny {
	return &Component_Transceiver_Channel_OutputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/instant"
func (n *Component_Transceiver_Channel_OutputPowerPath) Instant() *Component_Transceiver_Channel_OutputPower_InstantPath {
	return &Component_Transceiver_Channel_OutputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/instant"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Instant() *Component_Transceiver_Channel_OutputPower_InstantPathAny {
	return &Component_Transceiver_Channel_OutputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/interval"
func (n *Component_Transceiver_Channel_OutputPowerPath) Interval() *Component_Transceiver_Channel_OutputPower_IntervalPath {
	return &Component_Transceiver_Channel_OutputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/interval"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Interval() *Component_Transceiver_Channel_OutputPower_IntervalPathAny {
	return &Component_Transceiver_Channel_OutputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max"
func (n *Component_Transceiver_Channel_OutputPowerPath) Max() *Component_Transceiver_Channel_OutputPower_MaxPath {
	return &Component_Transceiver_Channel_OutputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Max() *Component_Transceiver_Channel_OutputPower_MaxPathAny {
	return &Component_Transceiver_Channel_OutputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max-time"
func (n *Component_Transceiver_Channel_OutputPowerPath) MaxTime() *Component_Transceiver_Channel_OutputPower_MaxTimePath {
	return &Component_Transceiver_Channel_OutputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max-time"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) MaxTime() *Component_Transceiver_Channel_OutputPower_MaxTimePathAny {
	return &Component_Transceiver_Channel_OutputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min"
func (n *Component_Transceiver_Channel_OutputPowerPath) Min() *Component_Transceiver_Channel_OutputPower_MinPath {
	return &Component_Transceiver_Channel_OutputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Min() *Component_Transceiver_Channel_OutputPower_MinPathAny {
	return &Component_Transceiver_Channel_OutputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min-time"
func (n *Component_Transceiver_Channel_OutputPowerPath) MinTime() *Component_Transceiver_Channel_OutputPower_MinTimePath {
	return &Component_Transceiver_Channel_OutputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min-time"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) MinTime() *Component_Transceiver_Channel_OutputPower_MinTimePathAny {
	return &Component_Transceiver_Channel_OutputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_TargetFrequencyDeviationPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviationPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviationPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviationPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Avg() *Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Avg() *Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Instant() *Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Instant() *Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Interval() *Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Interval() *Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Max() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Max() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) MaxTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) MaxTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Min() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Min() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) MinTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) MinTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_TecCurrentPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current YANG schema element.
type Component_Transceiver_Channel_TecCurrentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current YANG schema element.
type Component_Transceiver_Channel_TecCurrentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/avg YANG schema element.
type Component_Transceiver_Channel_TecCurrent_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/avg YANG schema element.
type Component_Transceiver_Channel_TecCurrent_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/instant YANG schema element.
type Component_Transceiver_Channel_TecCurrent_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/instant YANG schema element.
type Component_Transceiver_Channel_TecCurrent_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/interval YANG schema element.
type Component_Transceiver_Channel_TecCurrent_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/interval YANG schema element.
type Component_Transceiver_Channel_TecCurrent_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/avg"
func (n *Component_Transceiver_Channel_TecCurrentPath) Avg() *Component_Transceiver_Channel_TecCurrent_AvgPath {
	return &Component_Transceiver_Channel_TecCurrent_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/avg"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Avg() *Component_Transceiver_Channel_TecCurrent_AvgPathAny {
	return &Component_Transceiver_Channel_TecCurrent_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/instant"
func (n *Component_Transceiver_Channel_TecCurrentPath) Instant() *Component_Transceiver_Channel_TecCurrent_InstantPath {
	return &Component_Transceiver_Channel_TecCurrent_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/instant"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Instant() *Component_Transceiver_Channel_TecCurrent_InstantPathAny {
	return &Component_Transceiver_Channel_TecCurrent_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/interval"
func (n *Component_Transceiver_Channel_TecCurrentPath) Interval() *Component_Transceiver_Channel_TecCurrent_IntervalPath {
	return &Component_Transceiver_Channel_TecCurrent_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/interval"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Interval() *Component_Transceiver_Channel_TecCurrent_IntervalPathAny {
	return &Component_Transceiver_Channel_TecCurrent_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max"
func (n *Component_Transceiver_Channel_TecCurrentPath) Max() *Component_Transceiver_Channel_TecCurrent_MaxPath {
	return &Component_Transceiver_Channel_TecCurrent_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Max() *Component_Transceiver_Channel_TecCurrent_MaxPathAny {
	return &Component_Transceiver_Channel_TecCurrent_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max-time"
func (n *Component_Transceiver_Channel_TecCurrentPath) MaxTime() *Component_Transceiver_Channel_TecCurrent_MaxTimePath {
	return &Component_Transceiver_Channel_TecCurrent_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max-time"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) MaxTime() *Component_Transceiver_Channel_TecCurrent_MaxTimePathAny {
	return &Component_Transceiver_Channel_TecCurrent_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min"
func (n *Component_Transceiver_Channel_TecCurrentPath) Min() *Component_Transceiver_Channel_TecCurrent_MinPath {
	return &Component_Transceiver_Channel_TecCurrent_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Min() *Component_Transceiver_Channel_TecCurrent_MinPathAny {
	return &Component_Transceiver_Channel_TecCurrent_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min-time"
func (n *Component_Transceiver_Channel_TecCurrentPath) MinTime() *Component_Transceiver_Channel_TecCurrent_MinTimePath {
	return &Component_Transceiver_Channel_TecCurrent_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min-time"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) MinTime() *Component_Transceiver_Channel_TecCurrent_MinTimePathAny {
	return &Component_Transceiver_Channel_TecCurrent_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_InputPowerPath represents the /openconfig-platform/components/component/transceiver/state/input-power YANG schema element.
type Component_Transceiver_InputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power YANG schema element.
type Component_Transceiver_InputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/state/input-power/avg YANG schema element.
type Component_Transceiver_InputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/avg YANG schema element.
type Component_Transceiver_InputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/state/input-power/instant YANG schema element.
type Component_Transceiver_InputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/instant YANG schema element.
type Component_Transceiver_InputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/input-power/interval YANG schema element.
type Component_Transceiver_InputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/interval YANG schema element.
type Component_Transceiver_InputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/state/input-power/max YANG schema element.
type Component_Transceiver_InputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/max YANG schema element.
type Component_Transceiver_InputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/input-power/max-time YANG schema element.
type Component_Transceiver_InputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/max-time YANG schema element.
type Component_Transceiver_InputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinPath represents the /openconfig-platform/components/component/transceiver/state/input-power/min YANG schema element.
type Component_Transceiver_InputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/min YANG schema element.
type Component_Transceiver_InputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/input-power/min-time YANG schema element.
type Component_Transceiver_InputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/min-time YANG schema element.
type Component_Transceiver_InputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/input-power/avg"
func (n *Component_Transceiver_InputPowerPath) Avg() *Component_Transceiver_InputPower_AvgPath {
	return &Component_Transceiver_InputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/input-power/avg"
func (n *Component_Transceiver_InputPowerPathAny) Avg() *Component_Transceiver_InputPower_AvgPathAny {
	return &Component_Transceiver_InputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/input-power/instant"
func (n *Component_Transceiver_InputPowerPath) Instant() *Component_Transceiver_InputPower_InstantPath {
	return &Component_Transceiver_InputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/input-power/instant"
func (n *Component_Transceiver_InputPowerPathAny) Instant() *Component_Transceiver_InputPower_InstantPathAny {
	return &Component_Transceiver_InputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/input-power/interval"
func (n *Component_Transceiver_InputPowerPath) Interval() *Component_Transceiver_InputPower_IntervalPath {
	return &Component_Transceiver_InputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/input-power/interval"
func (n *Component_Transceiver_InputPowerPathAny) Interval() *Component_Transceiver_InputPower_IntervalPathAny {
	return &Component_Transceiver_InputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/input-power/max"
func (n *Component_Transceiver_InputPowerPath) Max() *Component_Transceiver_InputPower_MaxPath {
	return &Component_Transceiver_InputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/input-power/max"
func (n *Component_Transceiver_InputPowerPathAny) Max() *Component_Transceiver_InputPower_MaxPathAny {
	return &Component_Transceiver_InputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/input-power/max-time"
func (n *Component_Transceiver_InputPowerPath) MaxTime() *Component_Transceiver_InputPower_MaxTimePath {
	return &Component_Transceiver_InputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/input-power/max-time"
func (n *Component_Transceiver_InputPowerPathAny) MaxTime() *Component_Transceiver_InputPower_MaxTimePathAny {
	return &Component_Transceiver_InputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/input-power/min"
func (n *Component_Transceiver_InputPowerPath) Min() *Component_Transceiver_InputPower_MinPath {
	return &Component_Transceiver_InputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/input-power/min"
func (n *Component_Transceiver_InputPowerPathAny) Min() *Component_Transceiver_InputPower_MinPathAny {
	return &Component_Transceiver_InputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/input-power/min-time"
func (n *Component_Transceiver_InputPowerPath) MinTime() *Component_Transceiver_InputPower_MinTimePath {
	return &Component_Transceiver_InputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/input-power/min-time"
func (n *Component_Transceiver_InputPowerPathAny) MinTime() *Component_Transceiver_InputPower_MinTimePathAny {
	return &Component_Transceiver_InputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_LaserBiasCurrentPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current YANG schema element.
type Component_Transceiver_LaserBiasCurrentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current YANG schema element.
type Component_Transceiver_LaserBiasCurrentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_AvgPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_LaserBiasCurrent_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_LaserBiasCurrent_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_InstantPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_LaserBiasCurrent_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_LaserBiasCurrent_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_LaserBiasCurrent_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_LaserBiasCurrent_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/laser-bias-current/avg"
func (n *Component_Transceiver_LaserBiasCurrentPath) Avg() *Component_Transceiver_LaserBiasCurrent_AvgPath {
	return &Component_Transceiver_LaserBiasCurrent_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/laser-bias-current/avg"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Avg() *Component_Transceiver_LaserBiasCurrent_AvgPathAny {
	return &Component_Transceiver_LaserBiasCurrent_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/laser-bias-current/instant"
func (n *Component_Transceiver_LaserBiasCurrentPath) Instant() *Component_Transceiver_LaserBiasCurrent_InstantPath {
	return &Component_Transceiver_LaserBiasCurrent_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/laser-bias-current/instant"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Instant() *Component_Transceiver_LaserBiasCurrent_InstantPathAny {
	return &Component_Transceiver_LaserBiasCurrent_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/laser-bias-current/interval"
func (n *Component_Transceiver_LaserBiasCurrentPath) Interval() *Component_Transceiver_LaserBiasCurrent_IntervalPath {
	return &Component_Transceiver_LaserBiasCurrent_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/laser-bias-current/interval"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Interval() *Component_Transceiver_LaserBiasCurrent_IntervalPathAny {
	return &Component_Transceiver_LaserBiasCurrent_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max"
func (n *Component_Transceiver_LaserBiasCurrentPath) Max() *Component_Transceiver_LaserBiasCurrent_MaxPath {
	return &Component_Transceiver_LaserBiasCurrent_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Max() *Component_Transceiver_LaserBiasCurrent_MaxPathAny {
	return &Component_Transceiver_LaserBiasCurrent_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max-time"
func (n *Component_Transceiver_LaserBiasCurrentPath) MaxTime() *Component_Transceiver_LaserBiasCurrent_MaxTimePath {
	return &Component_Transceiver_LaserBiasCurrent_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max-time"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) MaxTime() *Component_Transceiver_LaserBiasCurrent_MaxTimePathAny {
	return &Component_Transceiver_LaserBiasCurrent_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min"
func (n *Component_Transceiver_LaserBiasCurrentPath) Min() *Component_Transceiver_LaserBiasCurrent_MinPath {
	return &Component_Transceiver_LaserBiasCurrent_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Min() *Component_Transceiver_LaserBiasCurrent_MinPathAny {
	return &Component_Transceiver_LaserBiasCurrent_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min-time"
func (n *Component_Transceiver_LaserBiasCurrentPath) MinTime() *Component_Transceiver_LaserBiasCurrent_MinTimePath {
	return &Component_Transceiver_LaserBiasCurrent_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min-time"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) MinTime() *Component_Transceiver_LaserBiasCurrent_MinTimePathAny {
	return &Component_Transceiver_LaserBiasCurrent_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_OutputPowerPath represents the /openconfig-platform/components/component/transceiver/state/output-power YANG schema element.
type Component_Transceiver_OutputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power YANG schema element.
type Component_Transceiver_OutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/state/output-power/avg YANG schema element.
type Component_Transceiver_OutputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/avg YANG schema element.
type Component_Transceiver_OutputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/state/output-power/instant YANG schema element.
type Component_Transceiver_OutputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/instant YANG schema element.
type Component_Transceiver_OutputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/output-power/interval YANG schema element.
type Component_Transceiver_OutputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/interval YANG schema element.
type Component_Transceiver_OutputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/state/output-power/max YANG schema element.
type Component_Transceiver_OutputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/max YANG schema element.
type Component_Transceiver_OutputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/output-power/max-time YANG schema element.
type Component_Transceiver_OutputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/max-time YANG schema element.
type Component_Transceiver_OutputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinPath represents the /openconfig-platform/components/component/transceiver/state/output-power/min YANG schema element.
type Component_Transceiver_OutputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/min YANG schema element.
type Component_Transceiver_OutputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/output-power/min-time YANG schema element.
type Component_Transceiver_OutputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/min-time YANG schema element.
type Component_Transceiver_OutputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/output-power/avg"
func (n *Component_Transceiver_OutputPowerPath) Avg() *Component_Transceiver_OutputPower_AvgPath {
	return &Component_Transceiver_OutputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/output-power/avg"
func (n *Component_Transceiver_OutputPowerPathAny) Avg() *Component_Transceiver_OutputPower_AvgPathAny {
	return &Component_Transceiver_OutputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/output-power/instant"
func (n *Component_Transceiver_OutputPowerPath) Instant() *Component_Transceiver_OutputPower_InstantPath {
	return &Component_Transceiver_OutputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/output-power/instant"
func (n *Component_Transceiver_OutputPowerPathAny) Instant() *Component_Transceiver_OutputPower_InstantPathAny {
	return &Component_Transceiver_OutputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/output-power/interval"
func (n *Component_Transceiver_OutputPowerPath) Interval() *Component_Transceiver_OutputPower_IntervalPath {
	return &Component_Transceiver_OutputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/output-power/interval"
func (n *Component_Transceiver_OutputPowerPathAny) Interval() *Component_Transceiver_OutputPower_IntervalPathAny {
	return &Component_Transceiver_OutputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/output-power/max"
func (n *Component_Transceiver_OutputPowerPath) Max() *Component_Transceiver_OutputPower_MaxPath {
	return &Component_Transceiver_OutputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/output-power/max"
func (n *Component_Transceiver_OutputPowerPathAny) Max() *Component_Transceiver_OutputPower_MaxPathAny {
	return &Component_Transceiver_OutputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/output-power/max-time"
func (n *Component_Transceiver_OutputPowerPath) MaxTime() *Component_Transceiver_OutputPower_MaxTimePath {
	return &Component_Transceiver_OutputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/output-power/max-time"
func (n *Component_Transceiver_OutputPowerPathAny) MaxTime() *Component_Transceiver_OutputPower_MaxTimePathAny {
	return &Component_Transceiver_OutputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/output-power/min"
func (n *Component_Transceiver_OutputPowerPath) Min() *Component_Transceiver_OutputPower_MinPath {
	return &Component_Transceiver_OutputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/output-power/min"
func (n *Component_Transceiver_OutputPowerPathAny) Min() *Component_Transceiver_OutputPower_MinPathAny {
	return &Component_Transceiver_OutputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/output-power/min-time"
func (n *Component_Transceiver_OutputPowerPath) MinTime() *Component_Transceiver_OutputPower_MinTimePath {
	return &Component_Transceiver_OutputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/output-power/min-time"
func (n *Component_Transceiver_OutputPowerPathAny) MinTime() *Component_Transceiver_OutputPower_MinTimePathAny {
	return &Component_Transceiver_OutputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_PostFecBerPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber YANG schema element.
type Component_Transceiver_PostFecBerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber YANG schema element.
type Component_Transceiver_PostFecBerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_AvgPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/avg YANG schema element.
type Component_Transceiver_PostFecBer_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/avg YANG schema element.
type Component_Transceiver_PostFecBer_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_InstantPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/instant YANG schema element.
type Component_Transceiver_PostFecBer_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/instant YANG schema element.
type Component_Transceiver_PostFecBer_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/interval YANG schema element.
type Component_Transceiver_PostFecBer_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/interval YANG schema element.
type Component_Transceiver_PostFecBer_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max YANG schema element.
type Component_Transceiver_PostFecBer_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max YANG schema element.
type Component_Transceiver_PostFecBer_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max-time YANG schema element.
type Component_Transceiver_PostFecBer_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max-time YANG schema element.
type Component_Transceiver_PostFecBer_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min YANG schema element.
type Component_Transceiver_PostFecBer_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min YANG schema element.
type Component_Transceiver_PostFecBer_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min-time YANG schema element.
type Component_Transceiver_PostFecBer_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min-time YANG schema element.
type Component_Transceiver_PostFecBer_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/post-fec-ber/avg"
func (n *Component_Transceiver_PostFecBerPath) Avg() *Component_Transceiver_PostFecBer_AvgPath {
	return &Component_Transceiver_PostFecBer_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/post-fec-ber/avg"
func (n *Component_Transceiver_PostFecBerPathAny) Avg() *Component_Transceiver_PostFecBer_AvgPathAny {
	return &Component_Transceiver_PostFecBer_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/post-fec-ber/instant"
func (n *Component_Transceiver_PostFecBerPath) Instant() *Component_Transceiver_PostFecBer_InstantPath {
	return &Component_Transceiver_PostFecBer_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/post-fec-ber/instant"
func (n *Component_Transceiver_PostFecBerPathAny) Instant() *Component_Transceiver_PostFecBer_InstantPathAny {
	return &Component_Transceiver_PostFecBer_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/post-fec-ber/interval"
func (n *Component_Transceiver_PostFecBerPath) Interval() *Component_Transceiver_PostFecBer_IntervalPath {
	return &Component_Transceiver_PostFecBer_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/post-fec-ber/interval"
func (n *Component_Transceiver_PostFecBerPathAny) Interval() *Component_Transceiver_PostFecBer_IntervalPathAny {
	return &Component_Transceiver_PostFecBer_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max"
func (n *Component_Transceiver_PostFecBerPath) Max() *Component_Transceiver_PostFecBer_MaxPath {
	return &Component_Transceiver_PostFecBer_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max"
func (n *Component_Transceiver_PostFecBerPathAny) Max() *Component_Transceiver_PostFecBer_MaxPathAny {
	return &Component_Transceiver_PostFecBer_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max-time"
func (n *Component_Transceiver_PostFecBerPath) MaxTime() *Component_Transceiver_PostFecBer_MaxTimePath {
	return &Component_Transceiver_PostFecBer_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max-time"
func (n *Component_Transceiver_PostFecBerPathAny) MaxTime() *Component_Transceiver_PostFecBer_MaxTimePathAny {
	return &Component_Transceiver_PostFecBer_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min"
func (n *Component_Transceiver_PostFecBerPath) Min() *Component_Transceiver_PostFecBer_MinPath {
	return &Component_Transceiver_PostFecBer_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min"
func (n *Component_Transceiver_PostFecBerPathAny) Min() *Component_Transceiver_PostFecBer_MinPathAny {
	return &Component_Transceiver_PostFecBer_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min-time"
func (n *Component_Transceiver_PostFecBerPath) MinTime() *Component_Transceiver_PostFecBer_MinTimePath {
	return &Component_Transceiver_PostFecBer_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min-time"
func (n *Component_Transceiver_PostFecBerPathAny) MinTime() *Component_Transceiver_PostFecBer_MinTimePathAny {
	return &Component_Transceiver_PostFecBer_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_PreFecBerPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber YANG schema element.
type Component_Transceiver_PreFecBerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber YANG schema element.
type Component_Transceiver_PreFecBerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_AvgPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/avg YANG schema element.
type Component_Transceiver_PreFecBer_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/avg YANG schema element.
type Component_Transceiver_PreFecBer_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_InstantPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/instant YANG schema element.
type Component_Transceiver_PreFecBer_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/instant YANG schema element.
type Component_Transceiver_PreFecBer_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/interval YANG schema element.
type Component_Transceiver_PreFecBer_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/interval YANG schema element.
type Component_Transceiver_PreFecBer_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max YANG schema element.
type Component_Transceiver_PreFecBer_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max YANG schema element.
type Component_Transceiver_PreFecBer_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max-time YANG schema element.
type Component_Transceiver_PreFecBer_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max-time YANG schema element.
type Component_Transceiver_PreFecBer_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min YANG schema element.
type Component_Transceiver_PreFecBer_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min YANG schema element.
type Component_Transceiver_PreFecBer_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min-time YANG schema element.
type Component_Transceiver_PreFecBer_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min-time YANG schema element.
type Component_Transceiver_PreFecBer_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/avg"
func (n *Component_Transceiver_PreFecBerPath) Avg() *Component_Transceiver_PreFecBer_AvgPath {
	return &Component_Transceiver_PreFecBer_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/avg"
func (n *Component_Transceiver_PreFecBerPathAny) Avg() *Component_Transceiver_PreFecBer_AvgPathAny {
	return &Component_Transceiver_PreFecBer_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/instant"
func (n *Component_Transceiver_PreFecBerPath) Instant() *Component_Transceiver_PreFecBer_InstantPath {
	return &Component_Transceiver_PreFecBer_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/instant"
func (n *Component_Transceiver_PreFecBerPathAny) Instant() *Component_Transceiver_PreFecBer_InstantPathAny {
	return &Component_Transceiver_PreFecBer_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/interval"
func (n *Component_Transceiver_PreFecBerPath) Interval() *Component_Transceiver_PreFecBer_IntervalPath {
	return &Component_Transceiver_PreFecBer_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/interval"
func (n *Component_Transceiver_PreFecBerPathAny) Interval() *Component_Transceiver_PreFecBer_IntervalPathAny {
	return &Component_Transceiver_PreFecBer_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max"
func (n *Component_Transceiver_PreFecBerPath) Max() *Component_Transceiver_PreFecBer_MaxPath {
	return &Component_Transceiver_PreFecBer_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max"
func (n *Component_Transceiver_PreFecBerPathAny) Max() *Component_Transceiver_PreFecBer_MaxPathAny {
	return &Component_Transceiver_PreFecBer_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max-time"
func (n *Component_Transceiver_PreFecBerPath) MaxTime() *Component_Transceiver_PreFecBer_MaxTimePath {
	return &Component_Transceiver_PreFecBer_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max-time"
func (n *Component_Transceiver_PreFecBerPathAny) MaxTime() *Component_Transceiver_PreFecBer_MaxTimePathAny {
	return &Component_Transceiver_PreFecBer_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min"
func (n *Component_Transceiver_PreFecBerPath) Min() *Component_Transceiver_PreFecBer_MinPath {
	return &Component_Transceiver_PreFecBer_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min"
func (n *Component_Transceiver_PreFecBerPathAny) Min() *Component_Transceiver_PreFecBer_MinPathAny {
	return &Component_Transceiver_PreFecBer_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min-time"
func (n *Component_Transceiver_PreFecBerPath) MinTime() *Component_Transceiver_PreFecBer_MinTimePath {
	return &Component_Transceiver_PreFecBer_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min-time"
func (n *Component_Transceiver_PreFecBerPathAny) MinTime() *Component_Transceiver_PreFecBer_MinTimePathAny {
	return &Component_Transceiver_PreFecBer_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_SupplyVoltagePath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage YANG schema element.
type Component_Transceiver_SupplyVoltagePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltagePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage YANG schema element.
type Component_Transceiver_SupplyVoltagePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_AvgPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/avg YANG schema element.
type Component_Transceiver_SupplyVoltage_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/avg YANG schema element.
type Component_Transceiver_SupplyVoltage_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_InstantPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/instant YANG schema element.
type Component_Transceiver_SupplyVoltage_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/instant YANG schema element.
type Component_Transceiver_SupplyVoltage_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/interval YANG schema element.
type Component_Transceiver_SupplyVoltage_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/interval YANG schema element.
type Component_Transceiver_SupplyVoltage_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/max YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/max YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/max-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/max-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/min YANG schema element.
type Component_Transceiver_SupplyVoltage_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/min YANG schema element.
type Component_Transceiver_SupplyVoltage_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/min-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/min-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/supply-voltage/avg"
func (n *Component_Transceiver_SupplyVoltagePath) Avg() *Component_Transceiver_SupplyVoltage_AvgPath {
	return &Component_Transceiver_SupplyVoltage_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/supply-voltage/avg"
func (n *Component_Transceiver_SupplyVoltagePathAny) Avg() *Component_Transceiver_SupplyVoltage_AvgPathAny {
	return &Component_Transceiver_SupplyVoltage_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/supply-voltage/instant"
func (n *Component_Transceiver_SupplyVoltagePath) Instant() *Component_Transceiver_SupplyVoltage_InstantPath {
	return &Component_Transceiver_SupplyVoltage_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/supply-voltage/instant"
func (n *Component_Transceiver_SupplyVoltagePathAny) Instant() *Component_Transceiver_SupplyVoltage_InstantPathAny {
	return &Component_Transceiver_SupplyVoltage_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/supply-voltage/interval"
func (n *Component_Transceiver_SupplyVoltagePath) Interval() *Component_Transceiver_SupplyVoltage_IntervalPath {
	return &Component_Transceiver_SupplyVoltage_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/supply-voltage/interval"
func (n *Component_Transceiver_SupplyVoltagePathAny) Interval() *Component_Transceiver_SupplyVoltage_IntervalPathAny {
	return &Component_Transceiver_SupplyVoltage_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/supply-voltage/max"
func (n *Component_Transceiver_SupplyVoltagePath) Max() *Component_Transceiver_SupplyVoltage_MaxPath {
	return &Component_Transceiver_SupplyVoltage_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/supply-voltage/max"
func (n *Component_Transceiver_SupplyVoltagePathAny) Max() *Component_Transceiver_SupplyVoltage_MaxPathAny {
	return &Component_Transceiver_SupplyVoltage_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/max-time"
func (n *Component_Transceiver_SupplyVoltagePath) MaxTime() *Component_Transceiver_SupplyVoltage_MaxTimePath {
	return &Component_Transceiver_SupplyVoltage_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/max-time"
func (n *Component_Transceiver_SupplyVoltagePathAny) MaxTime() *Component_Transceiver_SupplyVoltage_MaxTimePathAny {
	return &Component_Transceiver_SupplyVoltage_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/supply-voltage/min"
func (n *Component_Transceiver_SupplyVoltagePath) Min() *Component_Transceiver_SupplyVoltage_MinPath {
	return &Component_Transceiver_SupplyVoltage_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/supply-voltage/min"
func (n *Component_Transceiver_SupplyVoltagePathAny) Min() *Component_Transceiver_SupplyVoltage_MinPathAny {
	return &Component_Transceiver_SupplyVoltage_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/min-time"
func (n *Component_Transceiver_SupplyVoltagePath) MinTime() *Component_Transceiver_SupplyVoltage_MinTimePath {
	return &Component_Transceiver_SupplyVoltage_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/min-time"
func (n *Component_Transceiver_SupplyVoltagePathAny) MinTime() *Component_Transceiver_SupplyVoltage_MinTimePathAny {
	return &Component_Transceiver_SupplyVoltage_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_ThresholdPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold YANG schema element.
type Component_Transceiver_ThresholdPath struct {
	*ygot.NodePath
}

// Component_Transceiver_ThresholdPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold YANG schema element.
type Component_Transceiver_ThresholdPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_InputPowerLowerPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/input-power-lower YANG schema element.
type Component_Transceiver_Threshold_InputPowerLowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_InputPowerLowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/input-power-lower YANG schema element.
type Component_Transceiver_Threshold_InputPowerLowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_InputPowerUpperPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/input-power-upper YANG schema element.
type Component_Transceiver_Threshold_InputPowerUpperPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_InputPowerUpperPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/input-power-upper YANG schema element.
type Component_Transceiver_Threshold_InputPowerUpperPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserBiasCurrentLowerPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-bias-current-lower YANG schema element.
type Component_Transceiver_Threshold_LaserBiasCurrentLowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserBiasCurrentLowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-bias-current-lower YANG schema element.
type Component_Transceiver_Threshold_LaserBiasCurrentLowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserBiasCurrentUpperPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-bias-current-upper YANG schema element.
type Component_Transceiver_Threshold_LaserBiasCurrentUpperPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserBiasCurrentUpperPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-bias-current-upper YANG schema element.
type Component_Transceiver_Threshold_LaserBiasCurrentUpperPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserTemperatureLowerPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-temperature-lower YANG schema element.
type Component_Transceiver_Threshold_LaserTemperatureLowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserTemperatureLowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-temperature-lower YANG schema element.
type Component_Transceiver_Threshold_LaserTemperatureLowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserTemperatureUpperPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-temperature-upper YANG schema element.
type Component_Transceiver_Threshold_LaserTemperatureUpperPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_LaserTemperatureUpperPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/laser-temperature-upper YANG schema element.
type Component_Transceiver_Threshold_LaserTemperatureUpperPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_ModuleTemperatureLowerPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/module-temperature-lower YANG schema element.
type Component_Transceiver_Threshold_ModuleTemperatureLowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_ModuleTemperatureLowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/module-temperature-lower YANG schema element.
type Component_Transceiver_Threshold_ModuleTemperatureLowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_ModuleTemperatureUpperPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/module-temperature-upper YANG schema element.
type Component_Transceiver_Threshold_ModuleTemperatureUpperPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_ModuleTemperatureUpperPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/module-temperature-upper YANG schema element.
type Component_Transceiver_Threshold_ModuleTemperatureUpperPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_OutputPowerLowerPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/output-power-lower YANG schema element.
type Component_Transceiver_Threshold_OutputPowerLowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_OutputPowerLowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/output-power-lower YANG schema element.
type Component_Transceiver_Threshold_OutputPowerLowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_OutputPowerUpperPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/output-power-upper YANG schema element.
type Component_Transceiver_Threshold_OutputPowerUpperPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_OutputPowerUpperPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/output-power-upper YANG schema element.
type Component_Transceiver_Threshold_OutputPowerUpperPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_SeverityPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/severity YANG schema element.
type Component_Transceiver_Threshold_SeverityPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_SeverityPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/severity YANG schema element.
type Component_Transceiver_Threshold_SeverityPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_SupplyVoltageLowerPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/supply-voltage-lower YANG schema element.
type Component_Transceiver_Threshold_SupplyVoltageLowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_SupplyVoltageLowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/supply-voltage-lower YANG schema element.
type Component_Transceiver_Threshold_SupplyVoltageLowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_SupplyVoltageUpperPath represents the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/supply-voltage-upper YANG schema element.
type Component_Transceiver_Threshold_SupplyVoltageUpperPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Threshold_SupplyVoltageUpperPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/thresholds/threshold/state/supply-voltage-upper YANG schema element.
type Component_Transceiver_Threshold_SupplyVoltageUpperPathAny struct {
	*ygot.NodePath
}

// InputPowerLower (leaf): The lower power threshold for the laser input power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/input-power-lower"
func (n *Component_Transceiver_ThresholdPath) InputPowerLower() *Component_Transceiver_Threshold_InputPowerLowerPath {
	return &Component_Transceiver_Threshold_InputPowerLowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPowerLower (leaf): The lower power threshold for the laser input power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/input-power-lower"
func (n *Component_Transceiver_ThresholdPathAny) InputPowerLower() *Component_Transceiver_Threshold_InputPowerLowerPathAny {
	return &Component_Transceiver_Threshold_InputPowerLowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPowerUpper (leaf): The upper power threshold for the laser input power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/input-power-upper"
func (n *Component_Transceiver_ThresholdPath) InputPowerUpper() *Component_Transceiver_Threshold_InputPowerUpperPath {
	return &Component_Transceiver_Threshold_InputPowerUpperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPowerUpper (leaf): The upper power threshold for the laser input power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/input-power-upper"
func (n *Component_Transceiver_ThresholdPathAny) InputPowerUpper() *Component_Transceiver_Threshold_InputPowerUpperPathAny {
	return &Component_Transceiver_Threshold_InputPowerUpperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrentLower (leaf): The lower threshold for the laser bias current.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-bias-current-lower"
func (n *Component_Transceiver_ThresholdPath) LaserBiasCurrentLower() *Component_Transceiver_Threshold_LaserBiasCurrentLowerPath {
	return &Component_Transceiver_Threshold_LaserBiasCurrentLowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrentLower (leaf): The lower threshold for the laser bias current.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-bias-current-lower"
func (n *Component_Transceiver_ThresholdPathAny) LaserBiasCurrentLower() *Component_Transceiver_Threshold_LaserBiasCurrentLowerPathAny {
	return &Component_Transceiver_Threshold_LaserBiasCurrentLowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrentUpper (leaf): The upper threshold for the laser bias current.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-bias-current-upper"
func (n *Component_Transceiver_ThresholdPath) LaserBiasCurrentUpper() *Component_Transceiver_Threshold_LaserBiasCurrentUpperPath {
	return &Component_Transceiver_Threshold_LaserBiasCurrentUpperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrentUpper (leaf): The upper threshold for the laser bias current.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-bias-current-upper"
func (n *Component_Transceiver_ThresholdPathAny) LaserBiasCurrentUpper() *Component_Transceiver_Threshold_LaserBiasCurrentUpperPathAny {
	return &Component_Transceiver_Threshold_LaserBiasCurrentUpperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperatureLower (leaf): The lower temperature threshold for the laser temperature sensor.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-temperature-lower"
func (n *Component_Transceiver_ThresholdPath) LaserTemperatureLower() *Component_Transceiver_Threshold_LaserTemperatureLowerPath {
	return &Component_Transceiver_Threshold_LaserTemperatureLowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperatureLower (leaf): The lower temperature threshold for the laser temperature sensor.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-temperature-lower"
func (n *Component_Transceiver_ThresholdPathAny) LaserTemperatureLower() *Component_Transceiver_Threshold_LaserTemperatureLowerPathAny {
	return &Component_Transceiver_Threshold_LaserTemperatureLowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperatureUpper (leaf): The upper temperature threshold for the laser temperature sensor.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-temperature-upper"
func (n *Component_Transceiver_ThresholdPath) LaserTemperatureUpper() *Component_Transceiver_Threshold_LaserTemperatureUpperPath {
	return &Component_Transceiver_Threshold_LaserTemperatureUpperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperatureUpper (leaf): The upper temperature threshold for the laser temperature sensor.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/laser-temperature-upper"
func (n *Component_Transceiver_ThresholdPathAny) LaserTemperatureUpper() *Component_Transceiver_Threshold_LaserTemperatureUpperPathAny {
	return &Component_Transceiver_Threshold_LaserTemperatureUpperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleTemperatureLower (leaf): The lower temperature threshold for the transceiver module.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-temperature-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/module-temperature-lower"
func (n *Component_Transceiver_ThresholdPath) ModuleTemperatureLower() *Component_Transceiver_Threshold_ModuleTemperatureLowerPath {
	return &Component_Transceiver_Threshold_ModuleTemperatureLowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-temperature-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleTemperatureLower (leaf): The lower temperature threshold for the transceiver module.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-temperature-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/module-temperature-lower"
func (n *Component_Transceiver_ThresholdPathAny) ModuleTemperatureLower() *Component_Transceiver_Threshold_ModuleTemperatureLowerPathAny {
	return &Component_Transceiver_Threshold_ModuleTemperatureLowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-temperature-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleTemperatureUpper (leaf): The upper temperature threshold for the transceiver module.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-temperature-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/module-temperature-upper"
func (n *Component_Transceiver_ThresholdPath) ModuleTemperatureUpper() *Component_Transceiver_Threshold_ModuleTemperatureUpperPath {
	return &Component_Transceiver_Threshold_ModuleTemperatureUpperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-temperature-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleTemperatureUpper (leaf): The upper temperature threshold for the transceiver module.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-temperature-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/module-temperature-upper"
func (n *Component_Transceiver_ThresholdPathAny) ModuleTemperatureUpper() *Component_Transceiver_Threshold_ModuleTemperatureUpperPathAny {
	return &Component_Transceiver_Threshold_ModuleTemperatureUpperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-temperature-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPowerLower (leaf): The lower power threshold for the laser output power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/output-power-lower"
func (n *Component_Transceiver_ThresholdPath) OutputPowerLower() *Component_Transceiver_Threshold_OutputPowerLowerPath {
	return &Component_Transceiver_Threshold_OutputPowerLowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPowerLower (leaf): The lower power threshold for the laser output power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/output-power-lower"
func (n *Component_Transceiver_ThresholdPathAny) OutputPowerLower() *Component_Transceiver_Threshold_OutputPowerLowerPathAny {
	return &Component_Transceiver_Threshold_OutputPowerLowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPowerUpper (leaf): The upper power threshold for the laser output power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/output-power-upper"
func (n *Component_Transceiver_ThresholdPath) OutputPowerUpper() *Component_Transceiver_Threshold_OutputPowerUpperPath {
	return &Component_Transceiver_Threshold_OutputPowerUpperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPowerUpper (leaf): The upper power threshold for the laser output power.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/output-power-upper"
func (n *Component_Transceiver_ThresholdPathAny) OutputPowerUpper() *Component_Transceiver_Threshold_OutputPowerUpperPathAny {
	return &Component_Transceiver_Threshold_OutputPowerUpperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// Severity (leaf): The type of alarm to which the thresholds apply.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/severity"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/severity"
func (n *Component_Transceiver_ThresholdPath) Severity() *Component_Transceiver_Threshold_SeverityPath {
	return &Component_Transceiver_Threshold_SeverityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Severity (leaf): The type of alarm to which the thresholds apply.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/severity"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/severity"
func (n *Component_Transceiver_ThresholdPathAny) Severity() *Component_Transceiver_Threshold_SeverityPathAny {
	return &Component_Transceiver_Threshold_SeverityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltageLower (leaf): The lower threshold for the transceiver supply voltage.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/supply-voltage-lower"
func (n *Component_Transceiver_ThresholdPath) SupplyVoltageLower() *Component_Transceiver_Threshold_SupplyVoltageLowerPath {
	return &Component_Transceiver_Threshold_SupplyVoltageLowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltageLower (leaf): The lower threshold for the transceiver supply voltage.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage-lower"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/supply-voltage-lower"
func (n *Component_Transceiver_ThresholdPathAny) SupplyVoltageLower() *Component_Transceiver_Threshold_SupplyVoltageLowerPathAny {
	return &Component_Transceiver_Threshold_SupplyVoltageLowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage-lower"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltageUpper (leaf): The upper threshold for the transceiver supply voltage.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/supply-voltage-upper"
func (n *Component_Transceiver_ThresholdPath) SupplyVoltageUpper() *Component_Transceiver_Threshold_SupplyVoltageUpperPath {
	return &Component_Transceiver_Threshold_SupplyVoltageUpperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltageUpper (leaf): The upper threshold for the transceiver supply voltage.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage-upper"
// Path from root: "/components/component/transceiver/thresholds/threshold/state/supply-voltage-upper"
func (n *Component_Transceiver_ThresholdPathAny) SupplyVoltageUpper() *Component_Transceiver_Threshold_SupplyVoltageUpperPathAny {
	return &Component_Transceiver_Threshold_SupplyVoltageUpperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage-upper"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefinedSetsPath represents the /openconfig-defined-sets/defined-sets YANG schema element.
type DefinedSetsPath struct {
	*ygot.NodePath
}

// DefinedSetsPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets YANG schema element.
type DefinedSetsPathAny struct {
	*ygot.NodePath
}

// Ipv4PrefixSetAny (list): List of IPv4 prefix sets.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv4-prefix-sets/ipv4-prefix-set"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set"
// Name (wildcarded): string
func (n *DefinedSetsPath) Ipv4PrefixSetAny() *DefinedSets_Ipv4PrefixSetPathAny {
	return &DefinedSets_Ipv4PrefixSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-prefix-sets", "ipv4-prefix-set"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Ipv4PrefixSetAny (list): List of IPv4 prefix sets.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv4-prefix-sets/ipv4-prefix-set"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set"
// Name (wildcarded): string
func (n *DefinedSetsPathAny) Ipv4PrefixSetAny() *DefinedSets_Ipv4PrefixSetPathAny {
	return &DefinedSets_Ipv4PrefixSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-prefix-sets", "ipv4-prefix-set"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Ipv4PrefixSet (list): List of IPv4 prefix sets.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv4-prefix-sets/ipv4-prefix-set"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set"
// Name: string
func (n *DefinedSetsPath) Ipv4PrefixSet(Name string) *DefinedSets_Ipv4PrefixSetPath {
	return &DefinedSets_Ipv4PrefixSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-prefix-sets", "ipv4-prefix-set"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Ipv4PrefixSet (list): List of IPv4 prefix sets.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv4-prefix-sets/ipv4-prefix-set"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set"
// Name: string
func (n *DefinedSetsPathAny) Ipv4PrefixSet(Name string) *DefinedSets_Ipv4PrefixSetPathAny {
	return &DefinedSets_Ipv4PrefixSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-prefix-sets", "ipv4-prefix-set"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Ipv6PrefixSetAny (list): List of IPv6 prefix sets. Each defined set
// is uniquely identified by a name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv6-prefix-sets/ipv6-prefix-set"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set"
// Name (wildcarded): string
func (n *DefinedSetsPath) Ipv6PrefixSetAny() *DefinedSets_Ipv6PrefixSetPathAny {
	return &DefinedSets_Ipv6PrefixSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-prefix-sets", "ipv6-prefix-set"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Ipv6PrefixSetAny (list): List of IPv6 prefix sets. Each defined set
// is uniquely identified by a name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv6-prefix-sets/ipv6-prefix-set"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set"
// Name (wildcarded): string
func (n *DefinedSetsPathAny) Ipv6PrefixSetAny() *DefinedSets_Ipv6PrefixSetPathAny {
	return &DefinedSets_Ipv6PrefixSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-prefix-sets", "ipv6-prefix-set"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Ipv6PrefixSet (list): List of IPv6 prefix sets. Each defined set
// is uniquely identified by a name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv6-prefix-sets/ipv6-prefix-set"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set"
// Name: string
func (n *DefinedSetsPath) Ipv6PrefixSet(Name string) *DefinedSets_Ipv6PrefixSetPath {
	return &DefinedSets_Ipv6PrefixSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-prefix-sets", "ipv6-prefix-set"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Ipv6PrefixSet (list): List of IPv6 prefix sets. Each defined set
// is uniquely identified by a name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "ipv6-prefix-sets/ipv6-prefix-set"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set"
// Name: string
func (n *DefinedSetsPathAny) Ipv6PrefixSet(Name string) *DefinedSets_Ipv6PrefixSetPathAny {
	return &DefinedSets_Ipv6PrefixSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-prefix-sets", "ipv6-prefix-set"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// PortSetAny (list): List of port sets. Each por set is uniquely
// identified by its name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "port-sets/port-set"
// Path from root: "/defined-sets/port-sets/port-set"
// Name (wildcarded): string
func (n *DefinedSetsPath) PortSetAny() *DefinedSets_PortSetPathAny {
	return &DefinedSets_PortSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"port-sets", "port-set"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// PortSetAny (list): List of port sets. Each por set is uniquely
// identified by its name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "port-sets/port-set"
// Path from root: "/defined-sets/port-sets/port-set"
// Name (wildcarded): string
func (n *DefinedSetsPathAny) PortSetAny() *DefinedSets_PortSetPathAny {
	return &DefinedSets_PortSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"port-sets", "port-set"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// PortSet (list): List of port sets. Each por set is uniquely
// identified by its name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "port-sets/port-set"
// Path from root: "/defined-sets/port-sets/port-set"
// Name: string
func (n *DefinedSetsPath) PortSet(Name string) *DefinedSets_PortSetPath {
	return &DefinedSets_PortSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"port-sets", "port-set"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// PortSet (list): List of port sets. Each por set is uniquely
// identified by its name
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "port-sets/port-set"
// Path from root: "/defined-sets/port-sets/port-set"
// Name: string
func (n *DefinedSetsPathAny) PortSet(Name string) *DefinedSets_PortSetPathAny {
	return &DefinedSets_PortSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"port-sets", "port-set"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// DefinedSets_Ipv4PrefixSetPath represents the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set YANG schema element.
type DefinedSets_Ipv4PrefixSetPath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSetPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set YANG schema element.
type DefinedSets_Ipv4PrefixSetPathAny struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSet_DescriptionPath represents the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/description YANG schema element.
type DefinedSets_Ipv4PrefixSet_DescriptionPath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSet_DescriptionPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/description YANG schema element.
type DefinedSets_Ipv4PrefixSet_DescriptionPathAny struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSet_NamePath represents the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/name YANG schema element.
type DefinedSets_Ipv4PrefixSet_NamePath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSet_NamePathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/name YANG schema element.
type DefinedSets_Ipv4PrefixSet_NamePathAny struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSet_PrefixPath represents the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/prefix YANG schema element.
type DefinedSets_Ipv4PrefixSet_PrefixPath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv4PrefixSet_PrefixPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/prefix YANG schema element.
type DefinedSets_Ipv4PrefixSet_PrefixPathAny struct {
	*ygot.NodePath
}

// Description (leaf): A user defined IPv4 prefix set description.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/description"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/description"
func (n *DefinedSets_Ipv4PrefixSetPath) Description() *DefinedSets_Ipv4PrefixSet_DescriptionPath {
	return &DefinedSets_Ipv4PrefixSet_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): A user defined IPv4 prefix set description.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/description"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/description"
func (n *DefinedSets_Ipv4PrefixSetPathAny) Description() *DefinedSets_Ipv4PrefixSet_DescriptionPathAny {
	return &DefinedSets_Ipv4PrefixSet_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A user defined name of the IPv4 prefix set.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/name"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/name"
func (n *DefinedSets_Ipv4PrefixSetPath) Name() *DefinedSets_Ipv4PrefixSet_NamePath {
	return &DefinedSets_Ipv4PrefixSet_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A user defined name of the IPv4 prefix set.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/name"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/name"
func (n *DefinedSets_Ipv4PrefixSetPathAny) Name() *DefinedSets_Ipv4PrefixSet_NamePathAny {
	return &DefinedSets_Ipv4PrefixSet_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf-list): A user defined list of IPv4 prefixes to be used in match
// conditions. Each entry is a IPv4 + mask combination.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/prefix"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/prefix"
func (n *DefinedSets_Ipv4PrefixSetPath) Prefix() *DefinedSets_Ipv4PrefixSet_PrefixPath {
	return &DefinedSets_Ipv4PrefixSet_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf-list): A user defined list of IPv4 prefixes to be used in match
// conditions. Each entry is a IPv4 + mask combination.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/prefix"
// Path from root: "/defined-sets/ipv4-prefix-sets/ipv4-prefix-set/config/prefix"
func (n *DefinedSets_Ipv4PrefixSetPathAny) Prefix() *DefinedSets_Ipv4PrefixSet_PrefixPathAny {
	return &DefinedSets_Ipv4PrefixSet_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefinedSets_Ipv6PrefixSetPath represents the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set YANG schema element.
type DefinedSets_Ipv6PrefixSetPath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSetPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set YANG schema element.
type DefinedSets_Ipv6PrefixSetPathAny struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSet_DescriptionPath represents the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/description YANG schema element.
type DefinedSets_Ipv6PrefixSet_DescriptionPath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSet_DescriptionPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/description YANG schema element.
type DefinedSets_Ipv6PrefixSet_DescriptionPathAny struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSet_NamePath represents the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/name YANG schema element.
type DefinedSets_Ipv6PrefixSet_NamePath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSet_NamePathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/name YANG schema element.
type DefinedSets_Ipv6PrefixSet_NamePathAny struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSet_PrefixPath represents the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/prefix YANG schema element.
type DefinedSets_Ipv6PrefixSet_PrefixPath struct {
	*ygot.NodePath
}

// DefinedSets_Ipv6PrefixSet_PrefixPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/prefix YANG schema element.
type DefinedSets_Ipv6PrefixSet_PrefixPathAny struct {
	*ygot.NodePath
}

// Description (leaf): A user defined IPv6 prefix set description.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/description"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/description"
func (n *DefinedSets_Ipv6PrefixSetPath) Description() *DefinedSets_Ipv6PrefixSet_DescriptionPath {
	return &DefinedSets_Ipv6PrefixSet_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): A user defined IPv6 prefix set description.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/description"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/description"
func (n *DefinedSets_Ipv6PrefixSetPathAny) Description() *DefinedSets_Ipv6PrefixSet_DescriptionPathAny {
	return &DefinedSets_Ipv6PrefixSet_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name of the IPv6 prefix set.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/name"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/name"
func (n *DefinedSets_Ipv6PrefixSetPath) Name() *DefinedSets_Ipv6PrefixSet_NamePath {
	return &DefinedSets_Ipv6PrefixSet_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name of the IPv6 prefix set.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/name"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/name"
func (n *DefinedSets_Ipv6PrefixSetPathAny) Name() *DefinedSets_Ipv6PrefixSet_NamePathAny {
	return &DefinedSets_Ipv6PrefixSet_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf-list): A user defined list of IPv6 prefixes to be used in match
// conditions. Each entry is a IPv6 + mask combination.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/prefix"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/prefix"
func (n *DefinedSets_Ipv6PrefixSetPath) Prefix() *DefinedSets_Ipv6PrefixSet_PrefixPath {
	return &DefinedSets_Ipv6PrefixSet_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf-list): A user defined list of IPv6 prefixes to be used in match
// conditions. Each entry is a IPv6 + mask combination.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/prefix"
// Path from root: "/defined-sets/ipv6-prefix-sets/ipv6-prefix-set/config/prefix"
func (n *DefinedSets_Ipv6PrefixSetPathAny) Prefix() *DefinedSets_Ipv6PrefixSet_PrefixPathAny {
	return &DefinedSets_Ipv6PrefixSet_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefinedSets_PortSetPath represents the /openconfig-defined-sets/defined-sets/port-sets/port-set YANG schema element.
type DefinedSets_PortSetPath struct {
	*ygot.NodePath
}

// DefinedSets_PortSetPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/port-sets/port-set YANG schema element.
type DefinedSets_PortSetPathAny struct {
	*ygot.NodePath
}

// DefinedSets_PortSet_DescriptionPath represents the /openconfig-defined-sets/defined-sets/port-sets/port-set/config/description YANG schema element.
type DefinedSets_PortSet_DescriptionPath struct {
	*ygot.NodePath
}

// DefinedSets_PortSet_DescriptionPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/port-sets/port-set/config/description YANG schema element.
type DefinedSets_PortSet_DescriptionPathAny struct {
	*ygot.NodePath
}

// DefinedSets_PortSet_NamePath represents the /openconfig-defined-sets/defined-sets/port-sets/port-set/config/name YANG schema element.
type DefinedSets_PortSet_NamePath struct {
	*ygot.NodePath
}

// DefinedSets_PortSet_NamePathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/port-sets/port-set/config/name YANG schema element.
type DefinedSets_PortSet_NamePathAny struct {
	*ygot.NodePath
}

// DefinedSets_PortSet_PortPath represents the /openconfig-defined-sets/defined-sets/port-sets/port-set/config/port YANG schema element.
type DefinedSets_PortSet_PortPath struct {
	*ygot.NodePath
}

// DefinedSets_PortSet_PortPathAny represents the wildcard version of the /openconfig-defined-sets/defined-sets/port-sets/port-set/config/port YANG schema element.
type DefinedSets_PortSet_PortPathAny struct {
	*ygot.NodePath
}

// Description (leaf): A user defined description for the port set
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/description"
// Path from root: "/defined-sets/port-sets/port-set/config/description"
func (n *DefinedSets_PortSetPath) Description() *DefinedSets_PortSet_DescriptionPath {
	return &DefinedSets_PortSet_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): A user defined description for the port set
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/description"
// Path from root: "/defined-sets/port-sets/port-set/config/description"
func (n *DefinedSets_PortSetPathAny) Description() *DefinedSets_PortSet_DescriptionPathAny {
	return &DefinedSets_PortSet_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A user defined name of the port set.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/name"
// Path from root: "/defined-sets/port-sets/port-set/config/name"
func (n *DefinedSets_PortSetPath) Name() *DefinedSets_PortSet_NamePath {
	return &DefinedSets_PortSet_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A user defined name of the port set.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/name"
// Path from root: "/defined-sets/port-sets/port-set/config/name"
func (n *DefinedSets_PortSetPathAny) Name() *DefinedSets_PortSet_NamePathAny {
	return &DefinedSets_PortSet_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf-list): A user defined set of ports to be
// used in the match conditions.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/port"
// Path from root: "/defined-sets/port-sets/port-set/config/port"
func (n *DefinedSets_PortSetPath) Port() *DefinedSets_PortSet_PortPath {
	return &DefinedSets_PortSet_PortPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf-list): A user defined set of ports to be
// used in the match conditions.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "config/port"
// Path from root: "/defined-sets/port-sets/port-set/config/port"
func (n *DefinedSets_PortSetPathAny) Port() *DefinedSets_PortSet_PortPathAny {
	return &DefinedSets_PortSet_PortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// DevicePath represents the /device YANG schema element.
type DevicePath struct {
	*ygot.DeviceRootBase
}

// DeviceRoot returns a new path object from which YANG paths can be constructed.
func DeviceRoot(id string) *DevicePath {
	return &DevicePath{ygot.NewDeviceRootBase(id)}
}

// Acl (container): Top level enclosing container for ACL model config
// and operational state data
// ----------------------------------------
// Defining module: "openconfig-acl"
// Instantiating module: "openconfig-acl"
// Path from parent: "acl"
// Path from root: "/acl"
func (n *DevicePath) Acl() *AclPath {
	return &AclPath{
		NodePath: ygot.NewNodePath(
			[]string{"acl"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aps (container): Top level grouping for automatic protection switch data
// ----------------------------------------
// Defining module: "openconfig-transport-line-protection"
// Instantiating module: "openconfig-transport-line-protection"
// Path from parent: "aps"
// Path from root: "/aps"
func (n *DevicePath) Aps() *ApsPath {
	return &ApsPath{
		NodePath: ygot.NewNodePath(
			[]string{"aps"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): Configuration and operational state parameters for BFD.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-bfd"
// Path from parent: "bfd"
// Path from root: "/bfd"
func (n *DevicePath) Bfd() *BfdPath {
	return &BfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// ComponentAny (list): List of components, keyed by component name.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "components/component"
// Path from root: "/components/component"
// Name (wildcarded): string
func (n *DevicePath) ComponentAny() *ComponentPathAny {
	return &ComponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"components", "component"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Component (list): List of components, keyed by component name.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "components/component"
// Path from root: "/components/component"
// Name: string
func (n *DevicePath) Component(Name string) *ComponentPath {
	return &ComponentPath{
		NodePath: ygot.NewNodePath(
			[]string{"components", "component"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// DefinedSets (container): Top level enclosing container for defined-set model
// config and operational state data.
// ----------------------------------------
// Defining module: "openconfig-defined-sets"
// Instantiating module: "openconfig-defined-sets"
// Path from parent: "defined-sets"
// Path from root: "/defined-sets"
func (n *DevicePath) DefinedSets() *DefinedSetsPath {
	return &DefinedSetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"defined-sets"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetSegmentAny (list): List of Ethernet Segments.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "ethernet-segments/ethernet-segment"
// Path from root: "/ethernet-segments/ethernet-segment"
// Name (wildcarded): string
func (n *DevicePath) EthernetSegmentAny() *EthernetSegmentPathAny {
	return &EthernetSegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet-segments", "ethernet-segment"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// EthernetSegment (list): List of Ethernet Segments.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "ethernet-segments/ethernet-segment"
// Path from root: "/ethernet-segments/ethernet-segment"
// Name: string
func (n *DevicePath) EthernetSegment(Name string) *EthernetSegmentPath {
	return &EthernetSegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet-segments", "ethernet-segment"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// InterfaceAny (list): The list of named interfaces on the device.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "interfaces/interface"
// Path from root: "/interfaces/interface"
// Name (wildcarded): string
func (n *DevicePath) InterfaceAny() *InterfacePathAny {
	return &InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Interface (list): The list of named interfaces on the device.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "interfaces/interface"
// Path from root: "/interfaces/interface"
// Name: string
func (n *DevicePath) Interface(Name string) *InterfacePath {
	return &InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// KeychainAny (list): List of defined keychains.
// ----------------------------------------
// Defining module: "openconfig-keychain"
// Instantiating module: "openconfig-keychain"
// Path from parent: "keychains/keychain"
// Path from root: "/keychains/keychain"
// Name (wildcarded): string
func (n *DevicePath) KeychainAny() *KeychainPathAny {
	return &KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"keychains", "keychain"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Keychain (list): List of defined keychains.
// ----------------------------------------
// Defining module: "openconfig-keychain"
// Instantiating module: "openconfig-keychain"
// Path from parent: "keychains/keychain"
// Path from root: "/keychains/keychain"
// Name: string
func (n *DevicePath) Keychain(Name string) *KeychainPath {
	return &KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"keychains", "keychain"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Lacp (container): Configuration and operational state data for LACP protocol
// operation on the aggregate interface
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp"
// Path from root: "/lacp"
func (n *DevicePath) Lacp() *LacpPath {
	return &LacpPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lldp (container): Top-level container for LLDP configuration and state data
// ----------------------------------------
// Defining module: "openconfig-lldp"
// Instantiating module: "openconfig-lldp"
// Path from parent: "lldp"
// Path from root: "/lldp"
func (n *DevicePath) Lldp() *LldpPath {
	return &LldpPath{
		NodePath: ygot.NewNodePath(
			[]string{"lldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Macsec (container): The MACsec
// ----------------------------------------
// Defining module: "openconfig-macsec"
// Instantiating module: "openconfig-macsec"
// Path from parent: "macsec"
// Path from root: "/macsec"
func (n *DevicePath) Macsec() *MacsecPath {
	return &MacsecPath{
		NodePath: ygot.NewNodePath(
			[]string{"macsec"},
			map[string]interface{}{},
			n,
		),
	}
}

// Messages (container): Top-level container for Syslog messages.
// ----------------------------------------
// Defining module: "openconfig-messages"
// Instantiating module: "openconfig-messages"
// Path from parent: "messages"
// Path from root: "/messages"
func (n *DevicePath) Messages() *MessagesPath {
	return &MessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstanceAny (list): Network instances configured on the local system
//
// IPv4 and IPv6 forwarding are enabled by default within an L3
// network-instance and subsequently, routes can be populated
// into the network-instance using protocols that enable IPv4 and
// IPv6 configuration without explicitly enabling these.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "network-instances/network-instance"
// Path from root: "/network-instances/network-instance"
// Name (wildcarded): string
func (n *DevicePath) NetworkInstanceAny() *NetworkInstancePathAny {
	return &NetworkInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"network-instances", "network-instance"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// NetworkInstance (list): Network instances configured on the local system
//
// IPv4 and IPv6 forwarding are enabled by default within an L3
// network-instance and subsequently, routes can be populated
// into the network-instance using protocols that enable IPv4 and
// IPv6 configuration without explicitly enabling these.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "network-instances/network-instance"
// Path from root: "/network-instances/network-instance"
// Name: string
func (n *DevicePath) NetworkInstance(Name string) *NetworkInstancePath {
	return &NetworkInstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"network-instances", "network-instance"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// OpticalAmplifier (container): Enclosing container for amplifiers and supervisory channels
// ----------------------------------------
// Defining module: "openconfig-optical-amplifier"
// Instantiating module: "openconfig-optical-amplifier"
// Path from parent: "optical-amplifier"
// Path from root: "/optical-amplifier"
func (n *DevicePath) OpticalAmplifier() *OpticalAmplifierPath {
	return &OpticalAmplifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"optical-amplifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProbeAny (list): List of probes configured.
// ----------------------------------------
// Defining module: "openconfig-probes"
// Instantiating module: "openconfig-probes"
// Path from parent: "probes/probe"
// Path from root: "/probes/probe"
// Name (wildcarded): string
func (n *DevicePath) ProbeAny() *ProbePathAny {
	return &ProbePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"probes", "probe"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Probe (list): List of probes configured.
// ----------------------------------------
// Defining module: "openconfig-probes"
// Instantiating module: "openconfig-probes"
// Path from parent: "probes/probe"
// Path from root: "/probes/probe"
// Name: string
func (n *DevicePath) Probe(Name string) *ProbePath {
	return &ProbePath{
		NodePath: ygot.NewNodePath(
			[]string{"probes", "probe"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Qos (container): Top-level container for QoS data
// ----------------------------------------
// Defining module: "openconfig-qos"
// Instantiating module: "openconfig-qos"
// Path from parent: "qos"
// Path from root: "/qos"
func (n *DevicePath) Qos() *QosPath {
	return &QosPath{
		NodePath: ygot.NewNodePath(
			[]string{"qos"},
			map[string]interface{}{},
			n,
		),
	}
}

// RelayAgent (container): Top level container for relay-agent configuration and
// operational state data
// ----------------------------------------
// Defining module: "openconfig-relay-agent"
// Instantiating module: "openconfig-relay-agent"
// Path from parent: "relay-agent"
// Path from root: "/relay-agent"
func (n *DevicePath) RelayAgent() *RelayAgentPath {
	return &RelayAgentPath{
		NodePath: ygot.NewNodePath(
			[]string{"relay-agent"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutingPolicy (container): Top-level container for all routing policy configuration
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-routing-policy"
// Path from parent: "routing-policy"
// Path from root: "/routing-policy"
func (n *DevicePath) RoutingPolicy() *RoutingPolicyPath {
	return &RoutingPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"routing-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sampling (container): Top-level container for sampling-related configuration and
// operational state data
// ----------------------------------------
// Defining module: "openconfig-sampling"
// Instantiating module: "openconfig-sampling"
// Path from parent: "sampling"
// Path from root: "/sampling"
func (n *DevicePath) Sampling() *SamplingPath {
	return &SamplingPath{
		NodePath: ygot.NewNodePath(
			[]string{"sampling"},
			map[string]interface{}{},
			n,
		),
	}
}

// Stp (container): Top-level container for spanning tree configuration and
// state data
// ----------------------------------------
// Defining module: "openconfig-spanning-tree"
// Instantiating module: "openconfig-spanning-tree"
// Path from parent: "stp"
// Path from root: "/stp"
func (n *DevicePath) Stp() *StpPath {
	return &StpPath{
		NodePath: ygot.NewNodePath(
			[]string{"stp"},
			map[string]interface{}{},
			n,
		),
	}
}

// System (container): Enclosing container for system-related configuration and
// operational state data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "system"
// Path from root: "/system"
func (n *DevicePath) System() *SystemPath {
	return &SystemPath{
		NodePath: ygot.NewNodePath(
			[]string{"system"},
			map[string]interface{}{},
			n,
		),
	}
}

// TelemetrySystem (container): Top level configuration and state for the
// device's telemetry system.
// ----------------------------------------
// Defining module: "openconfig-telemetry"
// Instantiating module: "openconfig-telemetry"
// Path from parent: "telemetry-system"
// Path from root: "/telemetry-system"
func (n *DevicePath) TelemetrySystem() *TelemetrySystemPath {
	return &TelemetrySystemPath{
		NodePath: ygot.NewNodePath(
			[]string{"telemetry-system"},
			map[string]interface{}{},
			n,
		),
	}
}

// TerminalDevice (container): Top-level container for the terminal device
// ----------------------------------------
// Defining module: "openconfig-terminal-device"
// Instantiating module: "openconfig-terminal-device"
// Path from parent: "terminal-device"
// Path from root: "/terminal-device"
func (n *DevicePath) TerminalDevice() *TerminalDevicePath {
	return &TerminalDevicePath{
		NodePath: ygot.NewNodePath(
			[]string{"terminal-device"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetSegmentPath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment YANG schema element.
type EthernetSegmentPath struct {
	*ygot.NodePath
}

// EthernetSegmentPathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment YANG schema element.
type EthernetSegmentPathAny struct {
	*ygot.NodePath
}

// EthernetSegment_EsiPath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/esi YANG schema element.
type EthernetSegment_EsiPath struct {
	*ygot.NodePath
}

// EthernetSegment_EsiPathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/esi YANG schema element.
type EthernetSegment_EsiPathAny struct {
	*ygot.NodePath
}

// EthernetSegment_EsiTypePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/esi-type YANG schema element.
type EthernetSegment_EsiTypePath struct {
	*ygot.NodePath
}

// EthernetSegment_EsiTypePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/esi-type YANG schema element.
type EthernetSegment_EsiTypePathAny struct {
	*ygot.NodePath
}

// EthernetSegment_InterfacePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/interface YANG schema element.
type EthernetSegment_InterfacePath struct {
	*ygot.NodePath
}

// EthernetSegment_InterfacePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/interface YANG schema element.
type EthernetSegment_InterfacePathAny struct {
	*ygot.NodePath
}

// EthernetSegment_NamePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/name YANG schema element.
type EthernetSegment_NamePath struct {
	*ygot.NodePath
}

// EthernetSegment_NamePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/name YANG schema element.
type EthernetSegment_NamePathAny struct {
	*ygot.NodePath
}

// EthernetSegment_RedundancyModePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/redundancy-mode YANG schema element.
type EthernetSegment_RedundancyModePath struct {
	*ygot.NodePath
}

// EthernetSegment_RedundancyModePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/redundancy-mode YANG schema element.
type EthernetSegment_RedundancyModePathAny struct {
	*ygot.NodePath
}

// EthernetSegment_SubinterfacePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/subinterface YANG schema element.
type EthernetSegment_SubinterfacePath struct {
	*ygot.NodePath
}

// EthernetSegment_SubinterfacePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/config/subinterface YANG schema element.
type EthernetSegment_SubinterfacePathAny struct {
	*ygot.NodePath
}

// DfElection (container): Top container for the configuration and state parameters
// for the Designated forwarding Election
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "df-election"
// Path from root: "/ethernet-segments/ethernet-segment/df-election"
func (n *EthernetSegmentPath) DfElection() *EthernetSegment_DfElectionPath {
	return &EthernetSegment_DfElectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"df-election"},
			map[string]interface{}{},
			n,
		),
	}
}

// DfElection (container): Top container for the configuration and state parameters
// for the Designated forwarding Election
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "df-election"
// Path from root: "/ethernet-segments/ethernet-segment/df-election"
func (n *EthernetSegmentPathAny) DfElection() *EthernetSegment_DfElectionPathAny {
	return &EthernetSegment_DfElectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"df-election"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): Ethernet Segment Identifier (ESI) value.
// For ESI Type 0: The esi leaf value is directly configured by the operator.
// For ESI Type 1: The AUTO enum must be used.
// For ESI Type 2: The AUTO enum must be used.
// For ESI Type 3: The directly configured or AUTO enum must be used.
// For ESI Type 4: The directly configured or AUTO enum must be used.
// For ESI Type 5: The directly configured or AUTO enum must be used.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/esi"
// Path from root: "/ethernet-segments/ethernet-segment/config/esi"
func (n *EthernetSegmentPath) Esi() *EthernetSegment_EsiPath {
	return &EthernetSegment_EsiPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): Ethernet Segment Identifier (ESI) value.
// For ESI Type 0: The esi leaf value is directly configured by the operator.
// For ESI Type 1: The AUTO enum must be used.
// For ESI Type 2: The AUTO enum must be used.
// For ESI Type 3: The directly configured or AUTO enum must be used.
// For ESI Type 4: The directly configured or AUTO enum must be used.
// For ESI Type 5: The directly configured or AUTO enum must be used.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/esi"
// Path from root: "/ethernet-segments/ethernet-segment/config/esi"
func (n *EthernetSegmentPathAny) Esi() *EthernetSegment_EsiPathAny {
	return &EthernetSegment_EsiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// EsiType (leaf): ESI Type is a 1-octet field (most significant octet) that
// specifies the format of the remaining 9 octets (ESI Value).
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/esi-type"
// Path from root: "/ethernet-segments/ethernet-segment/config/esi-type"
func (n *EthernetSegmentPath) EsiType() *EthernetSegment_EsiTypePath {
	return &EthernetSegment_EsiTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EsiType (leaf): ESI Type is a 1-octet field (most significant octet) that
// specifies the format of the remaining 9 octets (ESI Value).
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/esi-type"
// Path from root: "/ethernet-segments/ethernet-segment/config/esi-type"
func (n *EthernetSegmentPathAny) EsiType() *EthernetSegment_EsiTypePathAny {
	return &EthernetSegment_EsiTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "esi-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/interface"
// Path from root: "/ethernet-segments/ethernet-segment/config/interface"
func (n *EthernetSegmentPath) Interface() *EthernetSegment_InterfacePath {
	return &EthernetSegment_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/interface"
// Path from root: "/ethernet-segments/ethernet-segment/config/interface"
func (n *EthernetSegmentPathAny) Interface() *EthernetSegment_InterfacePathAny {
	return &EthernetSegment_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Ethernet Segment name
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/name"
// Path from root: "/ethernet-segments/ethernet-segment/config/name"
func (n *EthernetSegmentPath) Name() *EthernetSegment_NamePath {
	return &EthernetSegment_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Ethernet Segment name
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/name"
// Path from root: "/ethernet-segments/ethernet-segment/config/name"
func (n *EthernetSegmentPathAny) Name() *EthernetSegment_NamePathAny {
	return &EthernetSegment_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedundancyMode (leaf): Multihoming options for load balancing of
// traffic in the Ethernet Segment.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/redundancy-mode"
// Path from root: "/ethernet-segments/ethernet-segment/config/redundancy-mode"
func (n *EthernetSegmentPath) RedundancyMode() *EthernetSegment_RedundancyModePath {
	return &EthernetSegment_RedundancyModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "redundancy-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedundancyMode (leaf): Multihoming options for load balancing of
// traffic in the Ethernet Segment.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/redundancy-mode"
// Path from root: "/ethernet-segments/ethernet-segment/config/redundancy-mode"
func (n *EthernetSegmentPathAny) RedundancyMode() *EthernetSegment_RedundancyModePathAny {
	return &EthernetSegment_RedundancyModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "redundancy-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/subinterface"
// Path from root: "/ethernet-segments/ethernet-segment/config/subinterface"
func (n *EthernetSegmentPath) Subinterface() *EthernetSegment_SubinterfacePath {
	return &EthernetSegment_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/subinterface"
// Path from root: "/ethernet-segments/ethernet-segment/config/subinterface"
func (n *EthernetSegmentPathAny) Subinterface() *EthernetSegment_SubinterfacePathAny {
	return &EthernetSegment_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetSegment_DfElectionPath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election YANG schema element.
type EthernetSegment_DfElectionPath struct {
	*ygot.NodePath
}

// EthernetSegment_DfElectionPathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election YANG schema element.
type EthernetSegment_DfElectionPathAny struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_DfElectionMethodPath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/df-election-method YANG schema element.
type EthernetSegment_DfElection_DfElectionMethodPath struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_DfElectionMethodPathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/df-election-method YANG schema element.
type EthernetSegment_DfElection_DfElectionMethodPathAny struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_ElectionWaitTimePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/election-wait-time YANG schema element.
type EthernetSegment_DfElection_ElectionWaitTimePath struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_ElectionWaitTimePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/election-wait-time YANG schema element.
type EthernetSegment_DfElection_ElectionWaitTimePathAny struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_PreferencePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/preference YANG schema element.
type EthernetSegment_DfElection_PreferencePath struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_PreferencePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/preference YANG schema element.
type EthernetSegment_DfElection_PreferencePathAny struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_RevertivePath represents the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/revertive YANG schema element.
type EthernetSegment_DfElection_RevertivePath struct {
	*ygot.NodePath
}

// EthernetSegment_DfElection_RevertivePathAny represents the wildcard version of the /openconfig-ethernet-segments/ethernet-segments/ethernet-segment/df-election/config/revertive YANG schema element.
type EthernetSegment_DfElection_RevertivePathAny struct {
	*ygot.NodePath
}

// DfElectionMethod (leaf): Select the Designated Forwarder Election (DF) election method
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/df-election-method"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/df-election-method"
func (n *EthernetSegment_DfElectionPath) DfElectionMethod() *EthernetSegment_DfElection_DfElectionMethodPath {
	return &EthernetSegment_DfElection_DfElectionMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "df-election-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// DfElectionMethod (leaf): Select the Designated Forwarder Election (DF) election method
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/df-election-method"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/df-election-method"
func (n *EthernetSegment_DfElectionPathAny) DfElectionMethod() *EthernetSegment_DfElection_DfElectionMethodPathAny {
	return &EthernetSegment_DfElection_DfElectionMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "df-election-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// ElectionWaitTime (leaf): Designated Forwarder Election wait-time. When the DF timer expires,
// the PE device selects the DF based on the highest preference value
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/election-wait-time"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/election-wait-time"
func (n *EthernetSegment_DfElectionPath) ElectionWaitTime() *EthernetSegment_DfElection_ElectionWaitTimePath {
	return &EthernetSegment_DfElection_ElectionWaitTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "election-wait-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// ElectionWaitTime (leaf): Designated Forwarder Election wait-time. When the DF timer expires,
// the PE device selects the DF based on the highest preference value
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/election-wait-time"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/election-wait-time"
func (n *EthernetSegment_DfElectionPathAny) ElectionWaitTime() *EthernetSegment_DfElection_ElectionWaitTimePathAny {
	return &EthernetSegment_DfElection_ElectionWaitTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "election-wait-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Defines a 2-octet value that indicates the PE
// preference to become the DF in the Ethernet-Segment.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/preference"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/preference"
func (n *EthernetSegment_DfElectionPath) Preference() *EthernetSegment_DfElection_PreferencePath {
	return &EthernetSegment_DfElection_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Defines a 2-octet value that indicates the PE
// preference to become the DF in the Ethernet-Segment.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/preference"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/preference"
func (n *EthernetSegment_DfElectionPathAny) Preference() *EthernetSegment_DfElection_PreferencePathAny {
	return &EthernetSegment_DfElection_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Revertive (leaf): The 'preempt' or 'revertive' behavior. This option will allow a
// non-revertive behavior in the DF election.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/revertive"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/revertive"
func (n *EthernetSegment_DfElectionPath) Revertive() *EthernetSegment_DfElection_RevertivePath {
	return &EthernetSegment_DfElection_RevertivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "revertive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Revertive (leaf): The 'preempt' or 'revertive' behavior. This option will allow a
// non-revertive behavior in the DF election.
// ----------------------------------------
// Defining module: "openconfig-ethernet-segments"
// Instantiating module: "openconfig-ethernet-segments"
// Path from parent: "config/revertive"
// Path from root: "/ethernet-segments/ethernet-segment/df-election/config/revertive"
func (n *EthernetSegment_DfElectionPathAny) Revertive() *EthernetSegment_DfElection_RevertivePathAny {
	return &EthernetSegment_DfElection_RevertivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "revertive"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfacePath represents the /openconfig-interfaces/interfaces/interface YANG schema element.
type InterfacePath struct {
	*ygot.NodePath
}

// InterfacePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface YANG schema element.
type InterfacePathAny struct {
	*ygot.NodePath
}

// Interface_AdminStatusPath represents the /openconfig-interfaces/interfaces/interface/state/admin-status YANG schema element.
type Interface_AdminStatusPath struct {
	*ygot.NodePath
}

// Interface_AdminStatusPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/admin-status YANG schema element.
type Interface_AdminStatusPathAny struct {
	*ygot.NodePath
}

// Interface_CpuPath represents the /openconfig-interfaces/interfaces/interface/state/cpu YANG schema element.
type Interface_CpuPath struct {
	*ygot.NodePath
}

// Interface_CpuPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/cpu YANG schema element.
type Interface_CpuPathAny struct {
	*ygot.NodePath
}

// Interface_DescriptionPath represents the /openconfig-interfaces/interfaces/interface/config/description YANG schema element.
type Interface_DescriptionPath struct {
	*ygot.NodePath
}

// Interface_DescriptionPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/description YANG schema element.
type Interface_DescriptionPathAny struct {
	*ygot.NodePath
}

// Interface_EnabledPath represents the /openconfig-interfaces/interfaces/interface/config/enabled YANG schema element.
type Interface_EnabledPath struct {
	*ygot.NodePath
}

// Interface_EnabledPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/enabled YANG schema element.
type Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// Interface_HardwarePortPath represents the /openconfig-interfaces/interfaces/interface/state/hardware-port YANG schema element.
type Interface_HardwarePortPath struct {
	*ygot.NodePath
}

// Interface_HardwarePortPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/hardware-port YANG schema element.
type Interface_HardwarePortPathAny struct {
	*ygot.NodePath
}

// Interface_IfindexPath represents the /openconfig-interfaces/interfaces/interface/state/ifindex YANG schema element.
type Interface_IfindexPath struct {
	*ygot.NodePath
}

// Interface_IfindexPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/ifindex YANG schema element.
type Interface_IfindexPathAny struct {
	*ygot.NodePath
}

// Interface_LastChangePath represents the /openconfig-interfaces/interfaces/interface/state/last-change YANG schema element.
type Interface_LastChangePath struct {
	*ygot.NodePath
}

// Interface_LastChangePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/last-change YANG schema element.
type Interface_LastChangePathAny struct {
	*ygot.NodePath
}

// Interface_LogicalPath represents the /openconfig-interfaces/interfaces/interface/state/logical YANG schema element.
type Interface_LogicalPath struct {
	*ygot.NodePath
}

// Interface_LogicalPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/logical YANG schema element.
type Interface_LogicalPathAny struct {
	*ygot.NodePath
}

// Interface_LoopbackModePath represents the /openconfig-interfaces/interfaces/interface/config/loopback-mode YANG schema element.
type Interface_LoopbackModePath struct {
	*ygot.NodePath
}

// Interface_LoopbackModePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/loopback-mode YANG schema element.
type Interface_LoopbackModePathAny struct {
	*ygot.NodePath
}

// Interface_ManagementPath represents the /openconfig-interfaces/interfaces/interface/state/management YANG schema element.
type Interface_ManagementPath struct {
	*ygot.NodePath
}

// Interface_ManagementPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/management YANG schema element.
type Interface_ManagementPathAny struct {
	*ygot.NodePath
}

// Interface_MtuPath represents the /openconfig-interfaces/interfaces/interface/config/mtu YANG schema element.
type Interface_MtuPath struct {
	*ygot.NodePath
}

// Interface_MtuPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/mtu YANG schema element.
type Interface_MtuPathAny struct {
	*ygot.NodePath
}

// Interface_NamePath represents the /openconfig-interfaces/interfaces/interface/config/name YANG schema element.
type Interface_NamePath struct {
	*ygot.NodePath
}

// Interface_NamePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/name YANG schema element.
type Interface_NamePathAny struct {
	*ygot.NodePath
}

// Interface_OperStatusPath represents the /openconfig-interfaces/interfaces/interface/state/oper-status YANG schema element.
type Interface_OperStatusPath struct {
	*ygot.NodePath
}

// Interface_OperStatusPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/oper-status YANG schema element.
type Interface_OperStatusPathAny struct {
	*ygot.NodePath
}

// Interface_PhysicalChannelPath represents the /openconfig-interfaces/interfaces/interface/state/physical-channel YANG schema element.
type Interface_PhysicalChannelPath struct {
	*ygot.NodePath
}

// Interface_PhysicalChannelPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/physical-channel YANG schema element.
type Interface_PhysicalChannelPathAny struct {
	*ygot.NodePath
}

// Interface_TpidPath represents the /openconfig-interfaces/interfaces/interface/config/tpid YANG schema element.
type Interface_TpidPath struct {
	*ygot.NodePath
}

// Interface_TpidPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/tpid YANG schema element.
type Interface_TpidPathAny struct {
	*ygot.NodePath
}

// Interface_TransceiverPath represents the /openconfig-interfaces/interfaces/interface/state/transceiver YANG schema element.
type Interface_TransceiverPath struct {
	*ygot.NodePath
}

// Interface_TransceiverPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/transceiver YANG schema element.
type Interface_TransceiverPathAny struct {
	*ygot.NodePath
}

// Interface_TypePath represents the /openconfig-interfaces/interfaces/interface/config/type YANG schema element.
type Interface_TypePath struct {
	*ygot.NodePath
}

// Interface_TypePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/config/type YANG schema element.
type Interface_TypePathAny struct {
	*ygot.NodePath
}

// AdminStatus (leaf): The desired state of the interface.  In RFC 7223 this leaf
// has the same read semantics as ifAdminStatus.  Here, it
// reflects the administrative state as set by enabling or
// disabling the interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/admin-status"
// Path from root: "/interfaces/interface/state/admin-status"
func (n *InterfacePath) AdminStatus() *Interface_AdminStatusPath {
	return &Interface_AdminStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminStatus (leaf): The desired state of the interface.  In RFC 7223 this leaf
// has the same read semantics as ifAdminStatus.  Here, it
// reflects the administrative state as set by enabling or
// disabling the interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/admin-status"
// Path from root: "/interfaces/interface/state/admin-status"
func (n *InterfacePathAny) AdminStatus() *Interface_AdminStatusPathAny {
	return &Interface_AdminStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aggregation (container): Options for logical interfaces representing
// aggregates
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "aggregation"
// Path from root: "/interfaces/interface/aggregation"
func (n *InterfacePath) Aggregation() *Interface_AggregationPath {
	return &Interface_AggregationPath{
		NodePath: ygot.NewNodePath(
			[]string{"aggregation"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aggregation (container): Options for logical interfaces representing
// aggregates
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "aggregation"
// Path from root: "/interfaces/interface/aggregation"
func (n *InterfacePathAny) Aggregation() *Interface_AggregationPathAny {
	return &Interface_AggregationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aggregation"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of interface specific statistics entitites which are
// not common to subinterfaces.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/counters"
// Path from root: "/interfaces/interface/state/counters"
func (n *InterfacePath) Counters() *Interface_CountersPath {
	return &Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of interface specific statistics entitites which are
// not common to subinterfaces.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/counters"
// Path from root: "/interfaces/interface/state/counters"
func (n *InterfacePathAny) Counters() *Interface_CountersPathAny {
	return &Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cpu (leaf): When set to true, the interface is for traffic
// that is handled by the system CPU, sometimes also called the
// control plane interface.  On systems that represent the CPU
// interface as an Ethernet interface, for example, this leaf
// should be used to distinguish the CPU interface from dataplane
// interfaces.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/cpu"
// Path from root: "/interfaces/interface/state/cpu"
func (n *InterfacePath) Cpu() *Interface_CpuPath {
	return &Interface_CpuPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cpu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cpu (leaf): When set to true, the interface is for traffic
// that is handled by the system CPU, sometimes also called the
// control plane interface.  On systems that represent the CPU
// interface as an Ethernet interface, for example, this leaf
// should be used to distinguish the CPU interface from dataplane
// interfaces.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/cpu"
// Path from root: "/interfaces/interface/state/cpu"
func (n *InterfacePathAny) Cpu() *Interface_CpuPathAny {
	return &Interface_CpuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cpu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): A textual description of the interface.
//
// A server implementation MAY map this leaf to the ifAlias
// MIB object.  Such an implementation needs to use some
// mechanism to handle the differences in size and characters
// allowed between this leaf and ifAlias.  The definition of
// such a mechanism is outside the scope of this document.
//
// Since ifAlias is defined to be stored in non-volatile
// storage, the MIB implementation MUST map ifAlias to the
// value of 'description' in the persistently stored
// datastore.
//
// Specifically, if the device supports ':startup', when
// ifAlias is read the device MUST return the value of
// 'description' in the 'startup' datastore, and when it is
// written, it MUST be written to the 'running' and 'startup'
// datastores.  Note that it is up to the implementation to
//
// decide whether to modify this single leaf in 'startup' or
// perform an implicit copy-config from 'running' to
// 'startup'.
//
// If the device does not support ':startup', ifAlias MUST
// be mapped to the 'description' leaf in the 'running'
// datastore.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/description"
// Path from root: "/interfaces/interface/config/description"
func (n *InterfacePath) Description() *Interface_DescriptionPath {
	return &Interface_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): A textual description of the interface.
//
// A server implementation MAY map this leaf to the ifAlias
// MIB object.  Such an implementation needs to use some
// mechanism to handle the differences in size and characters
// allowed between this leaf and ifAlias.  The definition of
// such a mechanism is outside the scope of this document.
//
// Since ifAlias is defined to be stored in non-volatile
// storage, the MIB implementation MUST map ifAlias to the
// value of 'description' in the persistently stored
// datastore.
//
// Specifically, if the device supports ':startup', when
// ifAlias is read the device MUST return the value of
// 'description' in the 'startup' datastore, and when it is
// written, it MUST be written to the 'running' and 'startup'
// datastores.  Note that it is up to the implementation to
//
// decide whether to modify this single leaf in 'startup' or
// perform an implicit copy-config from 'running' to
// 'startup'.
//
// If the device does not support ':startup', ifAlias MUST
// be mapped to the 'description' leaf in the 'running'
// datastore.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/description"
// Path from root: "/interfaces/interface/config/description"
func (n *InterfacePathAny) Description() *Interface_DescriptionPathAny {
	return &Interface_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf contains the configured, desired state of the
// interface.
//
// Systems that implement the IF-MIB use the value of this
// leaf in the 'running' datastore to set
// IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
// has been initialized, as described in RFC 2863.
//
// Changes in this leaf in the 'running' datastore are
// reflected in ifAdminStatus, but if ifAdminStatus is
// changed over SNMP, this leaf is not affected.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/enabled"
// Path from root: "/interfaces/interface/config/enabled"
func (n *InterfacePath) Enabled() *Interface_EnabledPath {
	return &Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf contains the configured, desired state of the
// interface.
//
// Systems that implement the IF-MIB use the value of this
// leaf in the 'running' datastore to set
// IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry
// has been initialized, as described in RFC 2863.
//
// Changes in this leaf in the 'running' datastore are
// reflected in ifAdminStatus, but if ifAdminStatus is
// changed over SNMP, this leaf is not affected.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/enabled"
// Path from root: "/interfaces/interface/config/enabled"
func (n *InterfacePathAny) Enabled() *Interface_EnabledPathAny {
	return &Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethernet (container): Top-level container for ethernet configuration
// and state
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "ethernet"
// Path from root: "/interfaces/interface/ethernet"
func (n *InterfacePath) Ethernet() *Interface_EthernetPath {
	return &Interface_EthernetPath{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethernet (container): Top-level container for ethernet configuration
// and state
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "ethernet"
// Path from root: "/interfaces/interface/ethernet"
func (n *InterfacePathAny) Ethernet() *Interface_EthernetPathAny {
	return &Interface_EthernetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ethernet"},
			map[string]interface{}{},
			n,
		),
	}
}

// HardwarePort (leaf): For non-channelized interfaces, references the hardware port
// corresponding to the base interface.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/hardware-port"
// Path from root: "/interfaces/interface/state/hardware-port"
func (n *InterfacePath) HardwarePort() *Interface_HardwarePortPath {
	return &Interface_HardwarePortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// HardwarePort (leaf): For non-channelized interfaces, references the hardware port
// corresponding to the base interface.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/hardware-port"
// Path from root: "/interfaces/interface/state/hardware-port"
func (n *InterfacePathAny) HardwarePort() *Interface_HardwarePortPathAny {
	return &Interface_HardwarePortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (container): Top-level container for hold-time settings to enable
// dampening advertisements of interface transitions.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "hold-time"
// Path from root: "/interfaces/interface/hold-time"
func (n *InterfacePath) HoldTime() *Interface_HoldTimePath {
	return &Interface_HoldTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (container): Top-level container for hold-time settings to enable
// dampening advertisements of interface transitions.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "hold-time"
// Path from root: "/interfaces/interface/hold-time"
func (n *InterfacePathAny) HoldTime() *Interface_HoldTimePathAny {
	return &Interface_HoldTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ifindex (leaf): System assigned number for each interface.  Corresponds to
// ifIndex object in SNMP Interface MIB
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/ifindex"
// Path from root: "/interfaces/interface/state/ifindex"
func (n *InterfacePath) Ifindex() *Interface_IfindexPath {
	return &Interface_IfindexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ifindex"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ifindex (leaf): System assigned number for each interface.  Corresponds to
// ifIndex object in SNMP Interface MIB
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/ifindex"
// Path from root: "/interfaces/interface/state/ifindex"
func (n *InterfacePathAny) Ifindex() *Interface_IfindexPathAny {
	return &Interface_IfindexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ifindex"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastChange (leaf): This timestamp indicates the absolute time of the last
// state change of the interface (e.g., up-to-down transition).
// This is different than the SNMP ifLastChange object in the
// standard interface MIB in that it is not relative to the
// system boot time (i.e,. sysUpTime).
//
// The value is the timestamp in nanoseconds relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/last-change"
// Path from root: "/interfaces/interface/state/last-change"
func (n *InterfacePath) LastChange() *Interface_LastChangePath {
	return &Interface_LastChangePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-change"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastChange (leaf): This timestamp indicates the absolute time of the last
// state change of the interface (e.g., up-to-down transition).
// This is different than the SNMP ifLastChange object in the
// standard interface MIB in that it is not relative to the
// system boot time (i.e,. sysUpTime).
//
// The value is the timestamp in nanoseconds relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/last-change"
// Path from root: "/interfaces/interface/state/last-change"
func (n *InterfacePathAny) LastChange() *Interface_LastChangePathAny {
	return &Interface_LastChangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-change"},
			map[string]interface{}{},
			n,
		),
	}
}

// Logical (leaf): When set to true, the interface is a logical interface
// which does not have an associated physical port or
// channel on the system.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/logical"
// Path from root: "/interfaces/interface/state/logical"
func (n *InterfacePath) Logical() *Interface_LogicalPath {
	return &Interface_LogicalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "logical"},
			map[string]interface{}{},
			n,
		),
	}
}

// Logical (leaf): When set to true, the interface is a logical interface
// which does not have an associated physical port or
// channel on the system.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/logical"
// Path from root: "/interfaces/interface/state/logical"
func (n *InterfacePathAny) Logical() *Interface_LogicalPathAny {
	return &Interface_LogicalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "logical"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoopbackMode (leaf): Sets the loopback type on the interface. Setting the
// mode to something besides NONE activates the loopback in
// the specified mode.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/loopback-mode"
// Path from root: "/interfaces/interface/config/loopback-mode"
func (n *InterfacePath) LoopbackMode() *Interface_LoopbackModePath {
	return &Interface_LoopbackModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "loopback-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoopbackMode (leaf): Sets the loopback type on the interface. Setting the
// mode to something besides NONE activates the loopback in
// the specified mode.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/loopback-mode"
// Path from root: "/interfaces/interface/config/loopback-mode"
func (n *InterfacePathAny) LoopbackMode() *Interface_LoopbackModePathAny {
	return &Interface_LoopbackModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "loopback-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Management (leaf): When set to true, the interface is a dedicated
// management interface that is not connected to dataplane
// interfaces.  It may be used to connect the system to an
// out-of-band management network, for example.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/management"
// Path from root: "/interfaces/interface/state/management"
func (n *InterfacePath) Management() *Interface_ManagementPath {
	return &Interface_ManagementPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "management"},
			map[string]interface{}{},
			n,
		),
	}
}

// Management (leaf): When set to true, the interface is a dedicated
// management interface that is not connected to dataplane
// interfaces.  It may be used to connect the system to an
// out-of-band management network, for example.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/management"
// Path from root: "/interfaces/interface/state/management"
func (n *InterfacePathAny) Management() *Interface_ManagementPathAny {
	return &Interface_ManagementPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "management"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mtu (leaf): Set the max transmission unit size in octets
// for the physical interface.  If this is not set, the mtu is
// set to the operational default -- e.g., 1514 bytes on an
// Ethernet interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/mtu"
// Path from root: "/interfaces/interface/config/mtu"
func (n *InterfacePath) Mtu() *Interface_MtuPath {
	return &Interface_MtuPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mtu (leaf): Set the max transmission unit size in octets
// for the physical interface.  If this is not set, the mtu is
// set to the operational default -- e.g., 1514 bytes on an
// Ethernet interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/mtu"
// Path from root: "/interfaces/interface/config/mtu"
func (n *InterfacePathAny) Mtu() *Interface_MtuPathAny {
	return &Interface_MtuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The name of the interface.
//
// A device MAY restrict the allowed values for this leaf,
// possibly depending on the type of the interface.
// For system-controlled interfaces, this leaf is the
// device-specific name of the interface.  The 'config false'
// list interfaces/interface[name]/state contains the currently
// existing interfaces on the device.
//
// If a client tries to create configuration for a
// system-controlled interface that is not present in the
// corresponding state list, the server MAY reject
// the request if the implementation does not support
// pre-provisioning of interfaces or if the name refers to
// an interface that can never exist in the system.  A
// NETCONF server MUST reply with an rpc-error with the
// error-tag 'invalid-value' in this case.
//
// The IETF model in RFC 7223 provides YANG features for the
// following (i.e., pre-provisioning and arbitrary-names),
// however they are omitted here:
//
//	If the device supports pre-provisioning of interface
//	configuration, the 'pre-provisioning' feature is
//	advertised.
//
//	If the device allows arbitrarily named user-controlled
//	interfaces, the 'arbitrary-names' feature is advertised.
//
// When a configured user-controlled interface is created by
// the system, it is instantiated with the same name in the
// /interfaces/interface[name]/state list.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/name"
// Path from root: "/interfaces/interface/config/name"
func (n *InterfacePath) Name() *Interface_NamePath {
	return &Interface_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The name of the interface.
//
// A device MAY restrict the allowed values for this leaf,
// possibly depending on the type of the interface.
// For system-controlled interfaces, this leaf is the
// device-specific name of the interface.  The 'config false'
// list interfaces/interface[name]/state contains the currently
// existing interfaces on the device.
//
// If a client tries to create configuration for a
// system-controlled interface that is not present in the
// corresponding state list, the server MAY reject
// the request if the implementation does not support
// pre-provisioning of interfaces or if the name refers to
// an interface that can never exist in the system.  A
// NETCONF server MUST reply with an rpc-error with the
// error-tag 'invalid-value' in this case.
//
// The IETF model in RFC 7223 provides YANG features for the
// following (i.e., pre-provisioning and arbitrary-names),
// however they are omitted here:
//
//	If the device supports pre-provisioning of interface
//	configuration, the 'pre-provisioning' feature is
//	advertised.
//
//	If the device allows arbitrarily named user-controlled
//	interfaces, the 'arbitrary-names' feature is advertised.
//
// When a configured user-controlled interface is created by
// the system, it is instantiated with the same name in the
// /interfaces/interface[name]/state list.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/name"
// Path from root: "/interfaces/interface/config/name"
func (n *InterfacePathAny) Name() *Interface_NamePathAny {
	return &Interface_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// OperStatus (leaf): The current operational state of the interface.
//
// This leaf has the same semantics as ifOperStatus.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/oper-status"
// Path from root: "/interfaces/interface/state/oper-status"
func (n *InterfacePath) OperStatus() *Interface_OperStatusPath {
	return &Interface_OperStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "oper-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// OperStatus (leaf): The current operational state of the interface.
//
// This leaf has the same semantics as ifOperStatus.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/oper-status"
// Path from root: "/interfaces/interface/state/oper-status"
func (n *InterfacePathAny) OperStatus() *Interface_OperStatusPathAny {
	return &Interface_OperStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "oper-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// PenaltyBasedAied (container): Top level container to suppress UP->DOWN link events using a penalty based additive-increase, exponential-decrease algorithm.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "penalty-based-aied"
// Path from root: "/interfaces/interface/penalty-based-aied"
func (n *InterfacePath) PenaltyBasedAied() *Interface_PenaltyBasedAiedPath {
	return &Interface_PenaltyBasedAiedPath{
		NodePath: ygot.NewNodePath(
			[]string{"penalty-based-aied"},
			map[string]interface{}{},
			n,
		),
	}
}

// PenaltyBasedAied (container): Top level container to suppress UP->DOWN link events using a penalty based additive-increase, exponential-decrease algorithm.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "penalty-based-aied"
// Path from root: "/interfaces/interface/penalty-based-aied"
func (n *InterfacePathAny) PenaltyBasedAied() *Interface_PenaltyBasedAiedPathAny {
	return &Interface_PenaltyBasedAiedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"penalty-based-aied"},
			map[string]interface{}{},
			n,
		),
	}
}

// PhysicalChannel (leaf-list): For a channelized interface, list of references to the
// physical channels (lanes) corresponding to the interface.
// The physical channels are elements of a transceiver component
// in the platform model.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/physical-channel"
// Path from root: "/interfaces/interface/state/physical-channel"
func (n *InterfacePath) PhysicalChannel() *Interface_PhysicalChannelPath {
	return &Interface_PhysicalChannelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "physical-channel"},
			map[string]interface{}{},
			n,
		),
	}
}

// PhysicalChannel (leaf-list): For a channelized interface, list of references to the
// physical channels (lanes) corresponding to the interface.
// The physical channels are elements of a transceiver component
// in the platform model.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/physical-channel"
// Path from root: "/interfaces/interface/state/physical-channel"
func (n *InterfacePathAny) PhysicalChannel() *Interface_PhysicalChannelPathAny {
	return &Interface_PhysicalChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "physical-channel"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutedVlan (container): Top-level container for routed vlan interfaces.  These
// logical interfaces are also known as SVI (switched virtual
// interface), IRB (integrated routing and bridging), RVI
// (routed VLAN interface)
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "routed-vlan"
// Path from root: "/interfaces/interface/routed-vlan"
func (n *InterfacePath) RoutedVlan() *Interface_RoutedVlanPath {
	return &Interface_RoutedVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"routed-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutedVlan (container): Top-level container for routed vlan interfaces.  These
// logical interfaces are also known as SVI (switched virtual
// interface), IRB (integrated routing and bridging), RVI
// (routed VLAN interface)
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "routed-vlan"
// Path from root: "/interfaces/interface/routed-vlan"
func (n *InterfacePathAny) RoutedVlan() *Interface_RoutedVlanPathAny {
	return &Interface_RoutedVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routed-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sonet (container): Data related to SONET/SDH interfaces
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "sonet"
// Path from root: "/interfaces/interface/sonet"
func (n *InterfacePath) Sonet() *Interface_SonetPath {
	return &Interface_SonetPath{
		NodePath: ygot.NewNodePath(
			[]string{"sonet"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sonet (container): Data related to SONET/SDH interfaces
// ----------------------------------------
// Defining module: "openconfig-transport-line-common"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "sonet"
// Path from root: "/interfaces/interface/sonet"
func (n *InterfacePathAny) Sonet() *Interface_SonetPathAny {
	return &Interface_SonetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sonet"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubinterfaceAny (list): The list of subinterfaces (logical interfaces) associated
// with a physical interface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "subinterfaces/subinterface"
// Path from root: "/interfaces/interface/subinterfaces/subinterface"
// Index (wildcarded): uint32
func (n *InterfacePath) SubinterfaceAny() *Interface_SubinterfacePathAny {
	return &Interface_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subinterfaces", "subinterface"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// SubinterfaceAny (list): The list of subinterfaces (logical interfaces) associated
// with a physical interface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "subinterfaces/subinterface"
// Path from root: "/interfaces/interface/subinterfaces/subinterface"
// Index (wildcarded): uint32
func (n *InterfacePathAny) SubinterfaceAny() *Interface_SubinterfacePathAny {
	return &Interface_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subinterfaces", "subinterface"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Subinterface (list): The list of subinterfaces (logical interfaces) associated
// with a physical interface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "subinterfaces/subinterface"
// Path from root: "/interfaces/interface/subinterfaces/subinterface"
// Index: uint32
func (n *InterfacePath) Subinterface(Index uint32) *Interface_SubinterfacePath {
	return &Interface_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"subinterfaces", "subinterface"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Subinterface (list): The list of subinterfaces (logical interfaces) associated
// with a physical interface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "subinterfaces/subinterface"
// Path from root: "/interfaces/interface/subinterfaces/subinterface"
// Index: uint32
func (n *InterfacePathAny) Subinterface(Index uint32) *Interface_SubinterfacePathAny {
	return &Interface_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subinterfaces", "subinterface"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Tpid (leaf): Optionally set the tag protocol identifier field (TPID) that
// is accepted on the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/tpid"
// Path from root: "/interfaces/interface/config/tpid"
func (n *InterfacePath) Tpid() *Interface_TpidPath {
	return &Interface_TpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tpid (leaf): Optionally set the tag protocol identifier field (TPID) that
// is accepted on the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/tpid"
// Path from root: "/interfaces/interface/config/tpid"
func (n *InterfacePathAny) Tpid() *Interface_TpidPathAny {
	return &Interface_TpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transceiver (leaf): Provides a reference to the transceiver subcomponent that
// corresponds to the physical port component for this interface.
// The device must only populate this leaf with a reference to
// a component of type TRANSCEIVER.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/transceiver"
// Path from root: "/interfaces/interface/state/transceiver"
func (n *InterfacePath) Transceiver() *Interface_TransceiverPath {
	return &Interface_TransceiverPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transceiver"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transceiver (leaf): Provides a reference to the transceiver subcomponent that
// corresponds to the physical port component for this interface.
// The device must only populate this leaf with a reference to
// a component of type TRANSCEIVER.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/transceiver"
// Path from root: "/interfaces/interface/state/transceiver"
func (n *InterfacePathAny) Transceiver() *Interface_TransceiverPathAny {
	return &Interface_TransceiverPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transceiver"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the interface.
//
// When an interface entry is created, a server MAY
// initialize the type leaf with a valid value, e.g., if it
// is possible to derive the type from the name of the
// interface.
//
// If a client tries to set the type of an interface to a
// value that can never be used by the system, e.g., if the
// type is not supported or if the type does not match the
// name of the interface, the server MUST reject the request.
// A NETCONF server MUST reply with an rpc-error with the
// error-tag 'invalid-value' in this case.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/type"
// Path from root: "/interfaces/interface/config/type"
func (n *InterfacePath) Type() *Interface_TypePath {
	return &Interface_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the interface.
//
// When an interface entry is created, a server MAY
// initialize the type leaf with a valid value, e.g., if it
// is possible to derive the type from the name of the
// interface.
//
// If a client tries to set the type of an interface to a
// value that can never be used by the system, e.g., if the
// type is not supported or if the type does not match the
// name of the interface, the server MUST reject the request.
// A NETCONF server MUST reply with an rpc-error with the
// error-tag 'invalid-value' in this case.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/type"
// Path from root: "/interfaces/interface/config/type"
func (n *InterfacePathAny) Type() *Interface_TypePathAny {
	return &Interface_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_AggregationPath represents the /openconfig-interfaces/interfaces/interface/aggregation YANG schema element.
type Interface_AggregationPath struct {
	*ygot.NodePath
}

// Interface_AggregationPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation YANG schema element.
type Interface_AggregationPathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_LagSpeedPath represents the /openconfig-interfaces/interfaces/interface/aggregation/state/lag-speed YANG schema element.
type Interface_Aggregation_LagSpeedPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_LagSpeedPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/state/lag-speed YANG schema element.
type Interface_Aggregation_LagSpeedPathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_LagTypePath represents the /openconfig-interfaces/interfaces/interface/aggregation/config/lag-type YANG schema element.
type Interface_Aggregation_LagTypePath struct {
	*ygot.NodePath
}

// Interface_Aggregation_LagTypePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/config/lag-type YANG schema element.
type Interface_Aggregation_LagTypePathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_MemberPath represents the /openconfig-interfaces/interfaces/interface/aggregation/state/member YANG schema element.
type Interface_Aggregation_MemberPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_MemberPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/state/member YANG schema element.
type Interface_Aggregation_MemberPathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_MinLinksPath represents the /openconfig-interfaces/interfaces/interface/aggregation/config/min-links YANG schema element.
type Interface_Aggregation_MinLinksPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_MinLinksPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/config/min-links YANG schema element.
type Interface_Aggregation_MinLinksPathAny struct {
	*ygot.NodePath
}

// LagSpeed (leaf): Reports effective speed of the aggregate interface,
// based on speed of active member interfaces
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/lag-speed"
// Path from root: "/interfaces/interface/aggregation/state/lag-speed"
func (n *Interface_AggregationPath) LagSpeed() *Interface_Aggregation_LagSpeedPath {
	return &Interface_Aggregation_LagSpeedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lag-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// LagSpeed (leaf): Reports effective speed of the aggregate interface,
// based on speed of active member interfaces
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/lag-speed"
// Path from root: "/interfaces/interface/aggregation/state/lag-speed"
func (n *Interface_AggregationPathAny) LagSpeed() *Interface_Aggregation_LagSpeedPathAny {
	return &Interface_Aggregation_LagSpeedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lag-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// LagType (leaf): Sets the type of LAG, i.e., how it is
// configured / maintained
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/lag-type"
// Path from root: "/interfaces/interface/aggregation/config/lag-type"
func (n *Interface_AggregationPath) LagType() *Interface_Aggregation_LagTypePath {
	return &Interface_Aggregation_LagTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lag-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LagType (leaf): Sets the type of LAG, i.e., how it is
// configured / maintained
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/lag-type"
// Path from root: "/interfaces/interface/aggregation/config/lag-type"
func (n *Interface_AggregationPathAny) LagType() *Interface_Aggregation_LagTypePathAny {
	return &Interface_Aggregation_LagTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lag-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Member (leaf-list): List of current member interfaces for the aggregate,
// expressed as references to existing interfaces
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/member"
// Path from root: "/interfaces/interface/aggregation/state/member"
func (n *Interface_AggregationPath) Member() *Interface_Aggregation_MemberPath {
	return &Interface_Aggregation_MemberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Member (leaf-list): List of current member interfaces for the aggregate,
// expressed as references to existing interfaces
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/member"
// Path from root: "/interfaces/interface/aggregation/state/member"
func (n *Interface_AggregationPathAny) Member() *Interface_Aggregation_MemberPathAny {
	return &Interface_Aggregation_MemberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinLinks (leaf): Specifies the mininum number of member
// interfaces that must be active for the aggregate interface
// to be available
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/min-links"
// Path from root: "/interfaces/interface/aggregation/config/min-links"
func (n *Interface_AggregationPath) MinLinks() *Interface_Aggregation_MinLinksPath {
	return &Interface_Aggregation_MinLinksPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "min-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinLinks (leaf): Specifies the mininum number of member
// interfaces that must be active for the aggregate interface
// to be available
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/min-links"
// Path from root: "/interfaces/interface/aggregation/config/min-links"
func (n *Interface_AggregationPathAny) MinLinks() *Interface_Aggregation_MinLinksPathAny {
	return &Interface_Aggregation_MinLinksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "min-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// SwitchedVlan (container): Enclosing container for VLAN interface-specific
// data on Ethernet interfaces.  These are for standard
// L2, switched-style VLANs.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "switched-vlan"
// Path from root: "/interfaces/interface/aggregation/switched-vlan"
func (n *Interface_AggregationPath) SwitchedVlan() *Interface_Aggregation_SwitchedVlanPath {
	return &Interface_Aggregation_SwitchedVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"switched-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// SwitchedVlan (container): Enclosing container for VLAN interface-specific
// data on Ethernet interfaces.  These are for standard
// L2, switched-style VLANs.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "switched-vlan"
// Path from root: "/interfaces/interface/aggregation/switched-vlan"
func (n *Interface_AggregationPathAny) SwitchedVlan() *Interface_Aggregation_SwitchedVlanPathAny {
	return &Interface_Aggregation_SwitchedVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"switched-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_Aggregation_SwitchedVlanPath represents the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlanPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlanPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlanPathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_AccessVlanPath represents the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/access-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlan_AccessVlanPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_AccessVlanPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/access-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlan_AccessVlanPathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_InterfaceModePath represents the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/interface-mode YANG schema element.
type Interface_Aggregation_SwitchedVlan_InterfaceModePath struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_InterfaceModePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/interface-mode YANG schema element.
type Interface_Aggregation_SwitchedVlan_InterfaceModePathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_NativeVlanPath represents the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/native-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlan_NativeVlanPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_NativeVlanPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/native-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlan_NativeVlanPathAny struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_TrunkVlansPath represents the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans YANG schema element.
type Interface_Aggregation_SwitchedVlan_TrunkVlansPath struct {
	*ygot.NodePath
}

// Interface_Aggregation_SwitchedVlan_TrunkVlansPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans YANG schema element.
type Interface_Aggregation_SwitchedVlan_TrunkVlansPathAny struct {
	*ygot.NodePath
}

// AccessVlan (leaf): Assign the access vlan to the access port.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/access-vlan"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/access-vlan"
func (n *Interface_Aggregation_SwitchedVlanPath) AccessVlan() *Interface_Aggregation_SwitchedVlan_AccessVlanPath {
	return &Interface_Aggregation_SwitchedVlan_AccessVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "access-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessVlan (leaf): Assign the access vlan to the access port.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/access-vlan"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/access-vlan"
func (n *Interface_Aggregation_SwitchedVlanPathAny) AccessVlan() *Interface_Aggregation_SwitchedVlan_AccessVlanPathAny {
	return &Interface_Aggregation_SwitchedVlan_AccessVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "access-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceMode (leaf): Set the interface to access or trunk mode for
// VLANs
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/interface-mode"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/interface-mode"
func (n *Interface_Aggregation_SwitchedVlanPath) InterfaceMode() *Interface_Aggregation_SwitchedVlan_InterfaceModePath {
	return &Interface_Aggregation_SwitchedVlan_InterfaceModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceMode (leaf): Set the interface to access or trunk mode for
// VLANs
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/interface-mode"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/interface-mode"
func (n *Interface_Aggregation_SwitchedVlanPathAny) InterfaceMode() *Interface_Aggregation_SwitchedVlan_InterfaceModePathAny {
	return &Interface_Aggregation_SwitchedVlan_InterfaceModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NativeVlan (leaf): Set the native VLAN id for untagged frames arriving on
// a trunk interface.  Tagged frames sent on an interface
// configured with a native VLAN should have their tags
// stripped prior to transmission. This configuration is only
// valid on a trunk interface.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/native-vlan"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/native-vlan"
func (n *Interface_Aggregation_SwitchedVlanPath) NativeVlan() *Interface_Aggregation_SwitchedVlan_NativeVlanPath {
	return &Interface_Aggregation_SwitchedVlan_NativeVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "native-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// NativeVlan (leaf): Set the native VLAN id for untagged frames arriving on
// a trunk interface.  Tagged frames sent on an interface
// configured with a native VLAN should have their tags
// stripped prior to transmission. This configuration is only
// valid on a trunk interface.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/native-vlan"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/native-vlan"
func (n *Interface_Aggregation_SwitchedVlanPathAny) NativeVlan() *Interface_Aggregation_SwitchedVlan_NativeVlanPathAny {
	return &Interface_Aggregation_SwitchedVlan_NativeVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "native-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrunkVlans (leaf-list): Specify VLANs, or ranges thereof, that the interface may
// carry when in trunk mode.  If not specified, all VLANs are
// allowed on the interface. Ranges are specified in the form
// x..y, where x<y - ranges are assumed to be inclusive (such
// that the VLAN range is x <= range <= y.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/trunk-vlans"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans"
func (n *Interface_Aggregation_SwitchedVlanPath) TrunkVlans() *Interface_Aggregation_SwitchedVlan_TrunkVlansPath {
	return &Interface_Aggregation_SwitchedVlan_TrunkVlansPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trunk-vlans"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrunkVlans (leaf-list): Specify VLANs, or ranges thereof, that the interface may
// carry when in trunk mode.  If not specified, all VLANs are
// allowed on the interface. Ranges are specified in the form
// x..y, where x<y - ranges are assumed to be inclusive (such
// that the VLAN range is x <= range <= y.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/trunk-vlans"
// Path from root: "/interfaces/interface/aggregation/switched-vlan/config/trunk-vlans"
func (n *Interface_Aggregation_SwitchedVlanPathAny) TrunkVlans() *Interface_Aggregation_SwitchedVlan_TrunkVlansPathAny {
	return &Interface_Aggregation_SwitchedVlan_TrunkVlansPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trunk-vlans"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_CountersPath represents the /openconfig-interfaces/interfaces/interface/state/counters YANG schema element.
type Interface_CountersPath struct {
	*ygot.NodePath
}

// Interface_CountersPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters YANG schema element.
type Interface_CountersPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_CarrierTransitionsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/carrier-transitions YANG schema element.
type Interface_Counters_CarrierTransitionsPath struct {
	*ygot.NodePath
}

// Interface_Counters_CarrierTransitionsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/carrier-transitions YANG schema element.
type Interface_Counters_CarrierTransitionsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InBroadcastPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-broadcast-pkts YANG schema element.
type Interface_Counters_InBroadcastPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InBroadcastPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-broadcast-pkts YANG schema element.
type Interface_Counters_InBroadcastPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InDiscardsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-discards YANG schema element.
type Interface_Counters_InDiscardsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InDiscardsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-discards YANG schema element.
type Interface_Counters_InDiscardsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InErrorsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-errors YANG schema element.
type Interface_Counters_InErrorsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InErrorsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-errors YANG schema element.
type Interface_Counters_InErrorsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InFcsErrorsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-fcs-errors YANG schema element.
type Interface_Counters_InFcsErrorsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InFcsErrorsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-fcs-errors YANG schema element.
type Interface_Counters_InFcsErrorsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InMulticastPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-multicast-pkts YANG schema element.
type Interface_Counters_InMulticastPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InMulticastPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-multicast-pkts YANG schema element.
type Interface_Counters_InMulticastPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InOctetsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-octets YANG schema element.
type Interface_Counters_InOctetsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InOctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-octets YANG schema element.
type Interface_Counters_InOctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-pkts YANG schema element.
type Interface_Counters_InPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-pkts YANG schema element.
type Interface_Counters_InPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InUnicastPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-unicast-pkts YANG schema element.
type Interface_Counters_InUnicastPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_InUnicastPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-unicast-pkts YANG schema element.
type Interface_Counters_InUnicastPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_InUnknownProtosPath represents the /openconfig-interfaces/interfaces/interface/state/counters/in-unknown-protos YANG schema element.
type Interface_Counters_InUnknownProtosPath struct {
	*ygot.NodePath
}

// Interface_Counters_InUnknownProtosPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/in-unknown-protos YANG schema element.
type Interface_Counters_InUnknownProtosPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_LastClearPath represents the /openconfig-interfaces/interfaces/interface/state/counters/last-clear YANG schema element.
type Interface_Counters_LastClearPath struct {
	*ygot.NodePath
}

// Interface_Counters_LastClearPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/last-clear YANG schema element.
type Interface_Counters_LastClearPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutBroadcastPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-broadcast-pkts YANG schema element.
type Interface_Counters_OutBroadcastPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutBroadcastPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-broadcast-pkts YANG schema element.
type Interface_Counters_OutBroadcastPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutDiscardsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-discards YANG schema element.
type Interface_Counters_OutDiscardsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutDiscardsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-discards YANG schema element.
type Interface_Counters_OutDiscardsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutErrorsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-errors YANG schema element.
type Interface_Counters_OutErrorsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutErrorsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-errors YANG schema element.
type Interface_Counters_OutErrorsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutMulticastPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-multicast-pkts YANG schema element.
type Interface_Counters_OutMulticastPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutMulticastPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-multicast-pkts YANG schema element.
type Interface_Counters_OutMulticastPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutOctetsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-octets YANG schema element.
type Interface_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-octets YANG schema element.
type Interface_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-pkts YANG schema element.
type Interface_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-pkts YANG schema element.
type Interface_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_OutUnicastPktsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/out-unicast-pkts YANG schema element.
type Interface_Counters_OutUnicastPktsPath struct {
	*ygot.NodePath
}

// Interface_Counters_OutUnicastPktsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/out-unicast-pkts YANG schema element.
type Interface_Counters_OutUnicastPktsPathAny struct {
	*ygot.NodePath
}

// Interface_Counters_ResetsPath represents the /openconfig-interfaces/interfaces/interface/state/counters/resets YANG schema element.
type Interface_Counters_ResetsPath struct {
	*ygot.NodePath
}

// Interface_Counters_ResetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/state/counters/resets YANG schema element.
type Interface_Counters_ResetsPathAny struct {
	*ygot.NodePath
}

// CarrierTransitions (leaf): Number of times the interface state has transitioned
// between up and down since the time the device restarted
// or the last-clear time, whichever is most recent.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "carrier-transitions"
// Path from root: "/interfaces/interface/state/counters/carrier-transitions"
func (n *Interface_CountersPath) CarrierTransitions() *Interface_Counters_CarrierTransitionsPath {
	return &Interface_Counters_CarrierTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"carrier-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// CarrierTransitions (leaf): Number of times the interface state has transitioned
// between up and down since the time the device restarted
// or the last-clear time, whichever is most recent.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "carrier-transitions"
// Path from root: "/interfaces/interface/state/counters/carrier-transitions"
func (n *Interface_CountersPathAny) CarrierTransitions() *Interface_Counters_CarrierTransitionsPathAny {
	return &Interface_Counters_CarrierTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"carrier-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// InBroadcastPkts (leaf): The number of packets, delivered by this sub-layer to a
// higher (sub-)layer, that were addressed to a broadcast
// address at this sub-layer.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-broadcast-pkts"
// Path from root: "/interfaces/interface/state/counters/in-broadcast-pkts"
func (n *Interface_CountersPath) InBroadcastPkts() *Interface_Counters_InBroadcastPktsPath {
	return &Interface_Counters_InBroadcastPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-broadcast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InBroadcastPkts (leaf): The number of packets, delivered by this sub-layer to a
// higher (sub-)layer, that were addressed to a broadcast
// address at this sub-layer.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-broadcast-pkts"
// Path from root: "/interfaces/interface/state/counters/in-broadcast-pkts"
func (n *Interface_CountersPathAny) InBroadcastPkts() *Interface_Counters_InBroadcastPktsPathAny {
	return &Interface_Counters_InBroadcastPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-broadcast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InDiscards (leaf): The number of inbound packets that were chosen to be
// discarded even though no errors had been detected to
// prevent their being deliverable to a higher-layer
// protocol.  One possible reason for discarding such a
// packet could be to free up buffer space.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-discards"
// Path from root: "/interfaces/interface/state/counters/in-discards"
func (n *Interface_CountersPath) InDiscards() *Interface_Counters_InDiscardsPath {
	return &Interface_Counters_InDiscardsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-discards"},
			map[string]interface{}{},
			n,
		),
	}
}

// InDiscards (leaf): The number of inbound packets that were chosen to be
// discarded even though no errors had been detected to
// prevent their being deliverable to a higher-layer
// protocol.  One possible reason for discarding such a
// packet could be to free up buffer space.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-discards"
// Path from root: "/interfaces/interface/state/counters/in-discards"
func (n *Interface_CountersPathAny) InDiscards() *Interface_Counters_InDiscardsPathAny {
	return &Interface_Counters_InDiscardsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-discards"},
			map[string]interface{}{},
			n,
		),
	}
}

// InErrors (leaf): For packet-oriented interfaces, the number of inbound
// packets that contained errors preventing them from being
// deliverable to a higher-layer protocol.  For character-
// oriented or fixed-length interfaces, the number of
// inbound transmission units that contained errors
// preventing them from being deliverable to a higher-layer
// protocol.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-errors"
// Path from root: "/interfaces/interface/state/counters/in-errors"
func (n *Interface_CountersPath) InErrors() *Interface_Counters_InErrorsPath {
	return &Interface_Counters_InErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InErrors (leaf): For packet-oriented interfaces, the number of inbound
// packets that contained errors preventing them from being
// deliverable to a higher-layer protocol.  For character-
// oriented or fixed-length interfaces, the number of
// inbound transmission units that contained errors
// preventing them from being deliverable to a higher-layer
// protocol.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-errors"
// Path from root: "/interfaces/interface/state/counters/in-errors"
func (n *Interface_CountersPathAny) InErrors() *Interface_Counters_InErrorsPathAny {
	return &Interface_Counters_InErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFcsErrors (leaf): Number of received packets which had errors in the
// frame check sequence (FCS), i.e., framing errors.
//
// Discontinuities in the value of this counter can occur
// when the device is re-initialization as indicated by the
// value of 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-fcs-errors"
// Path from root: "/interfaces/interface/state/counters/in-fcs-errors"
func (n *Interface_CountersPath) InFcsErrors() *Interface_Counters_InFcsErrorsPath {
	return &Interface_Counters_InFcsErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-fcs-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFcsErrors (leaf): Number of received packets which had errors in the
// frame check sequence (FCS), i.e., framing errors.
//
// Discontinuities in the value of this counter can occur
// when the device is re-initialization as indicated by the
// value of 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-fcs-errors"
// Path from root: "/interfaces/interface/state/counters/in-fcs-errors"
func (n *Interface_CountersPathAny) InFcsErrors() *Interface_Counters_InFcsErrorsPathAny {
	return &Interface_Counters_InFcsErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-fcs-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMulticastPkts (leaf): The number of packets, delivered by this sub-layer to a
// higher (sub-)layer, that were addressed to a multicast
// address at this sub-layer.  For a MAC-layer protocol,
// this includes both Group and Functional addresses.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-multicast-pkts"
// Path from root: "/interfaces/interface/state/counters/in-multicast-pkts"
func (n *Interface_CountersPath) InMulticastPkts() *Interface_Counters_InMulticastPktsPath {
	return &Interface_Counters_InMulticastPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-multicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMulticastPkts (leaf): The number of packets, delivered by this sub-layer to a
// higher (sub-)layer, that were addressed to a multicast
// address at this sub-layer.  For a MAC-layer protocol,
// this includes both Group and Functional addresses.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-multicast-pkts"
// Path from root: "/interfaces/interface/state/counters/in-multicast-pkts"
func (n *Interface_CountersPathAny) InMulticastPkts() *Interface_Counters_InMulticastPktsPathAny {
	return &Interface_Counters_InMulticastPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-multicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The total number of octets received on the interface,
// including framing characters.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-octets"
// Path from root: "/interfaces/interface/state/counters/in-octets"
func (n *Interface_CountersPath) InOctets() *Interface_Counters_InOctetsPath {
	return &Interface_Counters_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The total number of octets received on the interface,
// including framing characters.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-octets"
// Path from root: "/interfaces/interface/state/counters/in-octets"
func (n *Interface_CountersPathAny) InOctets() *Interface_Counters_InOctetsPathAny {
	return &Interface_Counters_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): The total number of packets received on the interface,
// including all unicast, multicast, broadcast and bad packets
// etc.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-pkts"
// Path from root: "/interfaces/interface/state/counters/in-pkts"
func (n *Interface_CountersPath) InPkts() *Interface_Counters_InPktsPath {
	return &Interface_Counters_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): The total number of packets received on the interface,
// including all unicast, multicast, broadcast and bad packets
// etc.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-pkts"
// Path from root: "/interfaces/interface/state/counters/in-pkts"
func (n *Interface_CountersPathAny) InPkts() *Interface_Counters_InPktsPathAny {
	return &Interface_Counters_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUnicastPkts (leaf): The number of packets, delivered by this sub-layer to a
// higher (sub-)layer, that were not addressed to a
// multicast or broadcast address at this sub-layer.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-unicast-pkts"
// Path from root: "/interfaces/interface/state/counters/in-unicast-pkts"
func (n *Interface_CountersPath) InUnicastPkts() *Interface_Counters_InUnicastPktsPath {
	return &Interface_Counters_InUnicastPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-unicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUnicastPkts (leaf): The number of packets, delivered by this sub-layer to a
// higher (sub-)layer, that were not addressed to a
// multicast or broadcast address at this sub-layer.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-unicast-pkts"
// Path from root: "/interfaces/interface/state/counters/in-unicast-pkts"
func (n *Interface_CountersPathAny) InUnicastPkts() *Interface_Counters_InUnicastPktsPathAny {
	return &Interface_Counters_InUnicastPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-unicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUnknownProtos (leaf): For packet-oriented interfaces, the number of packets
// received via the interface that were discarded because
// of an unknown or unsupported protocol.  For
// character-oriented or fixed-length interfaces that
// support protocol multiplexing, the number of
// transmission units received via the interface that were
// discarded because of an unknown or unsupported protocol.
// For any interface that does not support protocol
// multiplexing, this counter is not present.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-unknown-protos"
// Path from root: "/interfaces/interface/state/counters/in-unknown-protos"
func (n *Interface_CountersPath) InUnknownProtos() *Interface_Counters_InUnknownProtosPath {
	return &Interface_Counters_InUnknownProtosPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-unknown-protos"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUnknownProtos (leaf): For packet-oriented interfaces, the number of packets
// received via the interface that were discarded because
// of an unknown or unsupported protocol.  For
// character-oriented or fixed-length interfaces that
// support protocol multiplexing, the number of
// transmission units received via the interface that were
// discarded because of an unknown or unsupported protocol.
// For any interface that does not support protocol
// multiplexing, this counter is not present.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-unknown-protos"
// Path from root: "/interfaces/interface/state/counters/in-unknown-protos"
func (n *Interface_CountersPathAny) InUnknownProtos() *Interface_Counters_InUnknownProtosPathAny {
	return &Interface_Counters_InUnknownProtosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-unknown-protos"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastClear (leaf): Timestamp of the last time the interface counters were
// cleared.
//
// The value is the timestamp in nanoseconds relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "last-clear"
// Path from root: "/interfaces/interface/state/counters/last-clear"
func (n *Interface_CountersPath) LastClear() *Interface_Counters_LastClearPath {
	return &Interface_Counters_LastClearPath{
		NodePath: ygot.NewNodePath(
			[]string{"last-clear"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastClear (leaf): Timestamp of the last time the interface counters were
// cleared.
//
// The value is the timestamp in nanoseconds relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "last-clear"
// Path from root: "/interfaces/interface/state/counters/last-clear"
func (n *Interface_CountersPathAny) LastClear() *Interface_Counters_LastClearPathAny {
	return &Interface_Counters_LastClearPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"last-clear"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutBroadcastPkts (leaf): The total number of packets that higher-level protocols
// requested be transmitted, and that were addressed to a
// broadcast address at this sub-layer, including those
// that were discarded or not sent.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-broadcast-pkts"
// Path from root: "/interfaces/interface/state/counters/out-broadcast-pkts"
func (n *Interface_CountersPath) OutBroadcastPkts() *Interface_Counters_OutBroadcastPktsPath {
	return &Interface_Counters_OutBroadcastPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-broadcast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutBroadcastPkts (leaf): The total number of packets that higher-level protocols
// requested be transmitted, and that were addressed to a
// broadcast address at this sub-layer, including those
// that were discarded or not sent.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-broadcast-pkts"
// Path from root: "/interfaces/interface/state/counters/out-broadcast-pkts"
func (n *Interface_CountersPathAny) OutBroadcastPkts() *Interface_Counters_OutBroadcastPktsPathAny {
	return &Interface_Counters_OutBroadcastPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-broadcast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutDiscards (leaf): The number of outbound packets that were chosen to be
// discarded even though no errors had been detected to
// prevent their being transmitted.  One possible reason
// for discarding such a packet could be to free up buffer
// space.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-discards"
// Path from root: "/interfaces/interface/state/counters/out-discards"
func (n *Interface_CountersPath) OutDiscards() *Interface_Counters_OutDiscardsPath {
	return &Interface_Counters_OutDiscardsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-discards"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutDiscards (leaf): The number of outbound packets that were chosen to be
// discarded even though no errors had been detected to
// prevent their being transmitted.  One possible reason
// for discarding such a packet could be to free up buffer
// space.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-discards"
// Path from root: "/interfaces/interface/state/counters/out-discards"
func (n *Interface_CountersPathAny) OutDiscards() *Interface_Counters_OutDiscardsPathAny {
	return &Interface_Counters_OutDiscardsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-discards"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutErrors (leaf): For packet-oriented interfaces, the number of outbound
// packets that could not be transmitted because of errors.
// For character-oriented or fixed-length interfaces, the
// number of outbound transmission units that could not be
// transmitted because of errors.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-errors"
// Path from root: "/interfaces/interface/state/counters/out-errors"
func (n *Interface_CountersPath) OutErrors() *Interface_Counters_OutErrorsPath {
	return &Interface_Counters_OutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutErrors (leaf): For packet-oriented interfaces, the number of outbound
// packets that could not be transmitted because of errors.
// For character-oriented or fixed-length interfaces, the
// number of outbound transmission units that could not be
// transmitted because of errors.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-errors"
// Path from root: "/interfaces/interface/state/counters/out-errors"
func (n *Interface_CountersPathAny) OutErrors() *Interface_Counters_OutErrorsPathAny {
	return &Interface_Counters_OutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMulticastPkts (leaf): The total number of packets that higher-level protocols
// requested be transmitted, and that were addressed to a
// multicast address at this sub-layer, including those
// that were discarded or not sent.  For a MAC-layer
// protocol, this includes both Group and Functional
// addresses.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-multicast-pkts"
// Path from root: "/interfaces/interface/state/counters/out-multicast-pkts"
func (n *Interface_CountersPath) OutMulticastPkts() *Interface_Counters_OutMulticastPktsPath {
	return &Interface_Counters_OutMulticastPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-multicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMulticastPkts (leaf): The total number of packets that higher-level protocols
// requested be transmitted, and that were addressed to a
// multicast address at this sub-layer, including those
// that were discarded or not sent.  For a MAC-layer
// protocol, this includes both Group and Functional
// addresses.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-multicast-pkts"
// Path from root: "/interfaces/interface/state/counters/out-multicast-pkts"
func (n *Interface_CountersPathAny) OutMulticastPkts() *Interface_Counters_OutMulticastPktsPathAny {
	return &Interface_Counters_OutMulticastPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-multicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The total number of octets transmitted out of the
// interface, including framing characters.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-octets"
// Path from root: "/interfaces/interface/state/counters/out-octets"
func (n *Interface_CountersPath) OutOctets() *Interface_Counters_OutOctetsPath {
	return &Interface_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The total number of octets transmitted out of the
// interface, including framing characters.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-octets"
// Path from root: "/interfaces/interface/state/counters/out-octets"
func (n *Interface_CountersPathAny) OutOctets() *Interface_Counters_OutOctetsPathAny {
	return &Interface_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): The total number of packets transmitted out of the
// interface, including all unicast, multicast, broadcast,
// and bad packets etc.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-pkts"
// Path from root: "/interfaces/interface/state/counters/out-pkts"
func (n *Interface_CountersPath) OutPkts() *Interface_Counters_OutPktsPath {
	return &Interface_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): The total number of packets transmitted out of the
// interface, including all unicast, multicast, broadcast,
// and bad packets etc.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-pkts"
// Path from root: "/interfaces/interface/state/counters/out-pkts"
func (n *Interface_CountersPathAny) OutPkts() *Interface_Counters_OutPktsPathAny {
	return &Interface_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutUnicastPkts (leaf): The total number of packets that higher-level protocols
// requested be transmitted, and that were not addressed
// to a multicast or broadcast address at this sub-layer,
// including those that were discarded or not sent.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-unicast-pkts"
// Path from root: "/interfaces/interface/state/counters/out-unicast-pkts"
func (n *Interface_CountersPath) OutUnicastPkts() *Interface_Counters_OutUnicastPktsPath {
	return &Interface_Counters_OutUnicastPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-unicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutUnicastPkts (leaf): The total number of packets that higher-level protocols
// requested be transmitted, and that were not addressed
// to a multicast or broadcast address at this sub-layer,
// including those that were discarded or not sent.
//
// Discontinuities in the value of this counter can occur
// at re-initialization of the management system, and at
// other times as indicated by the value of
// 'last-clear'.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-unicast-pkts"
// Path from root: "/interfaces/interface/state/counters/out-unicast-pkts"
func (n *Interface_CountersPathAny) OutUnicastPkts() *Interface_Counters_OutUnicastPktsPathAny {
	return &Interface_Counters_OutUnicastPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-unicast-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Resets (leaf): Number of times the interface hardware has been reset.  The
// triggers and effects of this event are hardware-specifc.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "resets"
// Path from root: "/interfaces/interface/state/counters/resets"
func (n *Interface_CountersPath) Resets() *Interface_Counters_ResetsPath {
	return &Interface_Counters_ResetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"resets"},
			map[string]interface{}{},
			n,
		),
	}
}

// Resets (leaf): Number of times the interface hardware has been reset.  The
// triggers and effects of this event are hardware-specifc.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "resets"
// Path from root: "/interfaces/interface/state/counters/resets"
func (n *Interface_CountersPathAny) Resets() *Interface_Counters_ResetsPathAny {
	return &Interface_Counters_ResetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"resets"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_EthernetPath represents the /openconfig-interfaces/interfaces/interface/ethernet YANG schema element.
type Interface_EthernetPath struct {
	*ygot.NodePath
}

// Interface_EthernetPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet YANG schema element.
type Interface_EthernetPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_AggregateIdPath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/aggregate-id YANG schema element.
type Interface_Ethernet_AggregateIdPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_AggregateIdPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/aggregate-id YANG schema element.
type Interface_Ethernet_AggregateIdPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_AutoNegotiatePath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/auto-negotiate YANG schema element.
type Interface_Ethernet_AutoNegotiatePath struct {
	*ygot.NodePath
}

// Interface_Ethernet_AutoNegotiatePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/auto-negotiate YANG schema element.
type Interface_Ethernet_AutoNegotiatePathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_DuplexModePath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/duplex-mode YANG schema element.
type Interface_Ethernet_DuplexModePath struct {
	*ygot.NodePath
}

// Interface_Ethernet_DuplexModePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/duplex-mode YANG schema element.
type Interface_Ethernet_DuplexModePathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_EnableFlowControlPath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/enable-flow-control YANG schema element.
type Interface_Ethernet_EnableFlowControlPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_EnableFlowControlPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/enable-flow-control YANG schema element.
type Interface_Ethernet_EnableFlowControlPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_FecModePath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/fec-mode YANG schema element.
type Interface_Ethernet_FecModePath struct {
	*ygot.NodePath
}

// Interface_Ethernet_FecModePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/fec-mode YANG schema element.
type Interface_Ethernet_FecModePathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_HwMacAddressPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/hw-mac-address YANG schema element.
type Interface_Ethernet_HwMacAddressPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_HwMacAddressPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/hw-mac-address YANG schema element.
type Interface_Ethernet_HwMacAddressPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_MacAddressPath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/mac-address YANG schema element.
type Interface_Ethernet_MacAddressPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_MacAddressPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/mac-address YANG schema element.
type Interface_Ethernet_MacAddressPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_NegotiatedDuplexModePath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/negotiated-duplex-mode YANG schema element.
type Interface_Ethernet_NegotiatedDuplexModePath struct {
	*ygot.NodePath
}

// Interface_Ethernet_NegotiatedDuplexModePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/negotiated-duplex-mode YANG schema element.
type Interface_Ethernet_NegotiatedDuplexModePathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_NegotiatedPortSpeedPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/negotiated-port-speed YANG schema element.
type Interface_Ethernet_NegotiatedPortSpeedPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_NegotiatedPortSpeedPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/negotiated-port-speed YANG schema element.
type Interface_Ethernet_NegotiatedPortSpeedPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_PortSpeedPath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/port-speed YANG schema element.
type Interface_Ethernet_PortSpeedPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_PortSpeedPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/port-speed YANG schema element.
type Interface_Ethernet_PortSpeedPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_StandaloneLinkTrainingPath represents the /openconfig-interfaces/interfaces/interface/ethernet/config/standalone-link-training YANG schema element.
type Interface_Ethernet_StandaloneLinkTrainingPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_StandaloneLinkTrainingPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/config/standalone-link-training YANG schema element.
type Interface_Ethernet_StandaloneLinkTrainingPathAny struct {
	*ygot.NodePath
}

// AggregateId (leaf): Specify the logical aggregate interface to which
// this interface belongs
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/aggregate-id"
// Path from root: "/interfaces/interface/ethernet/config/aggregate-id"
func (n *Interface_EthernetPath) AggregateId() *Interface_Ethernet_AggregateIdPath {
	return &Interface_Ethernet_AggregateIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "aggregate-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// AggregateId (leaf): Specify the logical aggregate interface to which
// this interface belongs
// ----------------------------------------
// Defining module: "openconfig-if-aggregate"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/aggregate-id"
// Path from root: "/interfaces/interface/ethernet/config/aggregate-id"
func (n *Interface_EthernetPathAny) AggregateId() *Interface_Ethernet_AggregateIdPathAny {
	return &Interface_Ethernet_AggregateIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "aggregate-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// AutoNegotiate (leaf): Set to TRUE to request the interface to auto-negotiate
// transmission parameters with its peer interface.  When
// set to FALSE, the transmission parameters are specified
// manually.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/auto-negotiate"
// Path from root: "/interfaces/interface/ethernet/config/auto-negotiate"
func (n *Interface_EthernetPath) AutoNegotiate() *Interface_Ethernet_AutoNegotiatePath {
	return &Interface_Ethernet_AutoNegotiatePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auto-negotiate"},
			map[string]interface{}{},
			n,
		),
	}
}

// AutoNegotiate (leaf): Set to TRUE to request the interface to auto-negotiate
// transmission parameters with its peer interface.  When
// set to FALSE, the transmission parameters are specified
// manually.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/auto-negotiate"
// Path from root: "/interfaces/interface/ethernet/config/auto-negotiate"
func (n *Interface_EthernetPathAny) AutoNegotiate() *Interface_Ethernet_AutoNegotiatePathAny {
	return &Interface_Ethernet_AutoNegotiatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auto-negotiate"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Ethernet interface counters
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/counters"
// Path from root: "/interfaces/interface/ethernet/state/counters"
func (n *Interface_EthernetPath) Counters() *Interface_Ethernet_CountersPath {
	return &Interface_Ethernet_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Ethernet interface counters
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/counters"
// Path from root: "/interfaces/interface/ethernet/state/counters"
func (n *Interface_EthernetPathAny) Counters() *Interface_Ethernet_CountersPathAny {
	return &Interface_Ethernet_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// DuplexMode (leaf): When auto-negotiate is TRUE, this optionally sets the
// duplex mode that will be advertised to the peer.  If
// unspecified, the interface should negotiate the duplex mode
// directly (typically full-duplex).  When auto-negotiate is
// FALSE, this sets the duplex mode on the interface directly.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/duplex-mode"
// Path from root: "/interfaces/interface/ethernet/config/duplex-mode"
func (n *Interface_EthernetPath) DuplexMode() *Interface_Ethernet_DuplexModePath {
	return &Interface_Ethernet_DuplexModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplex-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// DuplexMode (leaf): When auto-negotiate is TRUE, this optionally sets the
// duplex mode that will be advertised to the peer.  If
// unspecified, the interface should negotiate the duplex mode
// directly (typically full-duplex).  When auto-negotiate is
// FALSE, this sets the duplex mode on the interface directly.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/duplex-mode"
// Path from root: "/interfaces/interface/ethernet/config/duplex-mode"
func (n *Interface_EthernetPathAny) DuplexMode() *Interface_Ethernet_DuplexModePathAny {
	return &Interface_Ethernet_DuplexModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "duplex-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableFlowControl (leaf): Enable or disable flow control for this interface.
// Ethernet flow control is a mechanism by which a receiver
// may send PAUSE frames to a sender to stop transmission for
// a specified time.
//
// This setting should override auto-negotiated flow control
// settings.  If left unspecified, and auto-negotiate is TRUE,
// flow control mode is negotiated with the peer interface.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/enable-flow-control"
// Path from root: "/interfaces/interface/ethernet/config/enable-flow-control"
func (n *Interface_EthernetPath) EnableFlowControl() *Interface_Ethernet_EnableFlowControlPath {
	return &Interface_Ethernet_EnableFlowControlPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable-flow-control"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableFlowControl (leaf): Enable or disable flow control for this interface.
// Ethernet flow control is a mechanism by which a receiver
// may send PAUSE frames to a sender to stop transmission for
// a specified time.
//
// This setting should override auto-negotiated flow control
// settings.  If left unspecified, and auto-negotiate is TRUE,
// flow control mode is negotiated with the peer interface.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/enable-flow-control"
// Path from root: "/interfaces/interface/ethernet/config/enable-flow-control"
func (n *Interface_EthernetPathAny) EnableFlowControl() *Interface_Ethernet_EnableFlowControlPathAny {
	return &Interface_Ethernet_EnableFlowControlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable-flow-control"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecMode (leaf): The FEC mode applied to the physical channels associated with
// the interface.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/fec-mode"
// Path from root: "/interfaces/interface/ethernet/config/fec-mode"
func (n *Interface_EthernetPath) FecMode() *Interface_Ethernet_FecModePath {
	return &Interface_Ethernet_FecModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fec-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecMode (leaf): The FEC mode applied to the physical channels associated with
// the interface.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/fec-mode"
// Path from root: "/interfaces/interface/ethernet/config/fec-mode"
func (n *Interface_EthernetPathAny) FecMode() *Interface_Ethernet_FecModePathAny {
	return &Interface_Ethernet_FecModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fec-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// HwMacAddress (leaf): Represents the 'burned-in', or system-assigned, MAC
// address for the Ethernet interface.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/hw-mac-address"
// Path from root: "/interfaces/interface/ethernet/state/hw-mac-address"
func (n *Interface_EthernetPath) HwMacAddress() *Interface_Ethernet_HwMacAddressPath {
	return &Interface_Ethernet_HwMacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hw-mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// HwMacAddress (leaf): Represents the 'burned-in', or system-assigned, MAC
// address for the Ethernet interface.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/hw-mac-address"
// Path from root: "/interfaces/interface/ethernet/state/hw-mac-address"
func (n *Interface_EthernetPathAny) HwMacAddress() *Interface_Ethernet_HwMacAddressPathAny {
	return &Interface_Ethernet_HwMacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hw-mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): Assigns a MAC address to the Ethernet interface.  If not
// specified, the corresponding operational state leaf is
// expected to show the system-assigned MAC address.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/mac-address"
// Path from root: "/interfaces/interface/ethernet/config/mac-address"
func (n *Interface_EthernetPath) MacAddress() *Interface_Ethernet_MacAddressPath {
	return &Interface_Ethernet_MacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): Assigns a MAC address to the Ethernet interface.  If not
// specified, the corresponding operational state leaf is
// expected to show the system-assigned MAC address.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/mac-address"
// Path from root: "/interfaces/interface/ethernet/config/mac-address"
func (n *Interface_EthernetPathAny) MacAddress() *Interface_Ethernet_MacAddressPathAny {
	return &Interface_Ethernet_MacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NegotiatedDuplexMode (leaf): When auto-negotiate is set to TRUE, and the interface has
// completed auto-negotiation with the remote peer, this value
// shows the duplex mode that has been negotiated.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/negotiated-duplex-mode"
// Path from root: "/interfaces/interface/ethernet/state/negotiated-duplex-mode"
func (n *Interface_EthernetPath) NegotiatedDuplexMode() *Interface_Ethernet_NegotiatedDuplexModePath {
	return &Interface_Ethernet_NegotiatedDuplexModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "negotiated-duplex-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NegotiatedDuplexMode (leaf): When auto-negotiate is set to TRUE, and the interface has
// completed auto-negotiation with the remote peer, this value
// shows the duplex mode that has been negotiated.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/negotiated-duplex-mode"
// Path from root: "/interfaces/interface/ethernet/state/negotiated-duplex-mode"
func (n *Interface_EthernetPathAny) NegotiatedDuplexMode() *Interface_Ethernet_NegotiatedDuplexModePathAny {
	return &Interface_Ethernet_NegotiatedDuplexModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "negotiated-duplex-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NegotiatedPortSpeed (leaf): When auto-negotiate is set to TRUE, and the interface has
// completed auto-negotiation with the remote peer, this value
// shows the interface speed that has been negotiated.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/negotiated-port-speed"
// Path from root: "/interfaces/interface/ethernet/state/negotiated-port-speed"
func (n *Interface_EthernetPath) NegotiatedPortSpeed() *Interface_Ethernet_NegotiatedPortSpeedPath {
	return &Interface_Ethernet_NegotiatedPortSpeedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "negotiated-port-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// NegotiatedPortSpeed (leaf): When auto-negotiate is set to TRUE, and the interface has
// completed auto-negotiation with the remote peer, this value
// shows the interface speed that has been negotiated.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "state/negotiated-port-speed"
// Path from root: "/interfaces/interface/ethernet/state/negotiated-port-speed"
func (n *Interface_EthernetPathAny) NegotiatedPortSpeed() *Interface_Ethernet_NegotiatedPortSpeedPathAny {
	return &Interface_Ethernet_NegotiatedPortSpeedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "negotiated-port-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// PortSpeed (leaf): When auto-negotiate is TRUE, this optionally sets the
// port-speed mode that will be advertised to the peer for
// negotiation.  If unspecified, it is expected that the
// interface will select the highest speed available based on
// negotiation.  When auto-negotiate is set to FALSE, sets the
// link speed to a fixed value -- supported values are defined
// by ETHERNET_SPEED identities
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/port-speed"
// Path from root: "/interfaces/interface/ethernet/config/port-speed"
func (n *Interface_EthernetPath) PortSpeed() *Interface_Ethernet_PortSpeedPath {
	return &Interface_Ethernet_PortSpeedPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "port-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// PortSpeed (leaf): When auto-negotiate is TRUE, this optionally sets the
// port-speed mode that will be advertised to the peer for
// negotiation.  If unspecified, it is expected that the
// interface will select the highest speed available based on
// negotiation.  When auto-negotiate is set to FALSE, sets the
// link speed to a fixed value -- supported values are defined
// by ETHERNET_SPEED identities
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/port-speed"
// Path from root: "/interfaces/interface/ethernet/config/port-speed"
func (n *Interface_EthernetPathAny) PortSpeed() *Interface_Ethernet_PortSpeedPathAny {
	return &Interface_Ethernet_PortSpeedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "port-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// StandaloneLinkTraining (leaf): Link training is automatic tuning of the SerDes transmit and
// receive parameters to ensure an optimal connection over copper
// links. It is normally run as part of the auto negotiation
// sequence as specified in IEEE 802.3 Clause 73.
//
// Standalone link training is used when full auto negotiation is
// not desired on an Ethernet link but link training is needed.
// It is configured by setting the standalone-link-training leaf
// to TRUE and augo-negotiate leaf to FALSE.
//
// Note: If auto-negotiate is true, then the value of standalone
// link training leaf will be ignored.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/standalone-link-training"
// Path from root: "/interfaces/interface/ethernet/config/standalone-link-training"
func (n *Interface_EthernetPath) StandaloneLinkTraining() *Interface_Ethernet_StandaloneLinkTrainingPath {
	return &Interface_Ethernet_StandaloneLinkTrainingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "standalone-link-training"},
			map[string]interface{}{},
			n,
		),
	}
}

// StandaloneLinkTraining (leaf): Link training is automatic tuning of the SerDes transmit and
// receive parameters to ensure an optimal connection over copper
// links. It is normally run as part of the auto negotiation
// sequence as specified in IEEE 802.3 Clause 73.
//
// Standalone link training is used when full auto negotiation is
// not desired on an Ethernet link but link training is needed.
// It is configured by setting the standalone-link-training leaf
// to TRUE and augo-negotiate leaf to FALSE.
//
// Note: If auto-negotiate is true, then the value of standalone
// link training leaf will be ignored.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/standalone-link-training"
// Path from root: "/interfaces/interface/ethernet/config/standalone-link-training"
func (n *Interface_EthernetPathAny) StandaloneLinkTraining() *Interface_Ethernet_StandaloneLinkTrainingPathAny {
	return &Interface_Ethernet_StandaloneLinkTrainingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "standalone-link-training"},
			map[string]interface{}{},
			n,
		),
	}
}

// SwitchedVlan (container): Enclosing container for VLAN interface-specific
// data on Ethernet interfaces.  These are for standard
// L2, switched-style VLANs.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "switched-vlan"
// Path from root: "/interfaces/interface/ethernet/switched-vlan"
func (n *Interface_EthernetPath) SwitchedVlan() *Interface_Ethernet_SwitchedVlanPath {
	return &Interface_Ethernet_SwitchedVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"switched-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// SwitchedVlan (container): Enclosing container for VLAN interface-specific
// data on Ethernet interfaces.  These are for standard
// L2, switched-style VLANs.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "switched-vlan"
// Path from root: "/interfaces/interface/ethernet/switched-vlan"
func (n *Interface_EthernetPathAny) SwitchedVlan() *Interface_Ethernet_SwitchedVlanPathAny {
	return &Interface_Ethernet_SwitchedVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"switched-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_Ethernet_CountersPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters YANG schema element.
type Interface_Ethernet_CountersPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_CountersPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters YANG schema element.
type Interface_Ethernet_CountersPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_In_8021QFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-8021q-frames YANG schema element.
type Interface_Ethernet_Counters_In_8021QFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_In_8021QFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-8021q-frames YANG schema element.
type Interface_Ethernet_Counters_In_8021QFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InBlockErrorsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-block-errors YANG schema element.
type Interface_Ethernet_Counters_InBlockErrorsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InBlockErrorsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-block-errors YANG schema element.
type Interface_Ethernet_Counters_InBlockErrorsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InCarrierErrorsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-carrier-errors YANG schema element.
type Interface_Ethernet_Counters_InCarrierErrorsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InCarrierErrorsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-carrier-errors YANG schema element.
type Interface_Ethernet_Counters_InCarrierErrorsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InCrcErrorsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-crc-errors YANG schema element.
type Interface_Ethernet_Counters_InCrcErrorsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InCrcErrorsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-crc-errors YANG schema element.
type Interface_Ethernet_Counters_InCrcErrorsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InFragmentFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-fragment-frames YANG schema element.
type Interface_Ethernet_Counters_InFragmentFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InFragmentFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-fragment-frames YANG schema element.
type Interface_Ethernet_Counters_InFragmentFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InInterruptedTxPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-interrupted-tx YANG schema element.
type Interface_Ethernet_Counters_InInterruptedTxPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InInterruptedTxPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-interrupted-tx YANG schema element.
type Interface_Ethernet_Counters_InInterruptedTxPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InJabberFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-jabber-frames YANG schema element.
type Interface_Ethernet_Counters_InJabberFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InJabberFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-jabber-frames YANG schema element.
type Interface_Ethernet_Counters_InJabberFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InLateCollisionPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-late-collision YANG schema element.
type Interface_Ethernet_Counters_InLateCollisionPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InLateCollisionPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-late-collision YANG schema element.
type Interface_Ethernet_Counters_InLateCollisionPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMacControlFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-mac-control-frames YANG schema element.
type Interface_Ethernet_Counters_InMacControlFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMacControlFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-mac-control-frames YANG schema element.
type Interface_Ethernet_Counters_InMacControlFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMacErrorsRxPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-mac-errors-rx YANG schema element.
type Interface_Ethernet_Counters_InMacErrorsRxPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMacErrorsRxPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-mac-errors-rx YANG schema element.
type Interface_Ethernet_Counters_InMacErrorsRxPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMacPauseFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-mac-pause-frames YANG schema element.
type Interface_Ethernet_Counters_InMacPauseFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMacPauseFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-mac-pause-frames YANG schema element.
type Interface_Ethernet_Counters_InMacPauseFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMaxsizeExceededPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-maxsize-exceeded YANG schema element.
type Interface_Ethernet_Counters_InMaxsizeExceededPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InMaxsizeExceededPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-maxsize-exceeded YANG schema element.
type Interface_Ethernet_Counters_InMaxsizeExceededPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InOversizeFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-oversize-frames YANG schema element.
type Interface_Ethernet_Counters_InOversizeFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InOversizeFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-oversize-frames YANG schema element.
type Interface_Ethernet_Counters_InOversizeFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InSingleCollisionPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-single-collision YANG schema element.
type Interface_Ethernet_Counters_InSingleCollisionPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InSingleCollisionPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-single-collision YANG schema element.
type Interface_Ethernet_Counters_InSingleCollisionPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InSymbolErrorPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-symbol-error YANG schema element.
type Interface_Ethernet_Counters_InSymbolErrorPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InSymbolErrorPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-symbol-error YANG schema element.
type Interface_Ethernet_Counters_InSymbolErrorPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InUndersizeFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-undersize-frames YANG schema element.
type Interface_Ethernet_Counters_InUndersizeFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InUndersizeFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-undersize-frames YANG schema element.
type Interface_Ethernet_Counters_InUndersizeFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_Out_8021QFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-8021q-frames YANG schema element.
type Interface_Ethernet_Counters_Out_8021QFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_Out_8021QFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-8021q-frames YANG schema element.
type Interface_Ethernet_Counters_Out_8021QFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_OutMacControlFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-mac-control-frames YANG schema element.
type Interface_Ethernet_Counters_OutMacControlFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_OutMacControlFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-mac-control-frames YANG schema element.
type Interface_Ethernet_Counters_OutMacControlFramesPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_OutMacErrorsTxPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-mac-errors-tx YANG schema element.
type Interface_Ethernet_Counters_OutMacErrorsTxPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_OutMacErrorsTxPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-mac-errors-tx YANG schema element.
type Interface_Ethernet_Counters_OutMacErrorsTxPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_OutMacPauseFramesPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-mac-pause-frames YANG schema element.
type Interface_Ethernet_Counters_OutMacPauseFramesPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_OutMacPauseFramesPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/out-mac-pause-frames YANG schema element.
type Interface_Ethernet_Counters_OutMacPauseFramesPathAny struct {
	*ygot.NodePath
}

// In_8021QFrames (leaf): Number of 802.1q tagged frames received on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-8021q-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-8021q-frames"
func (n *Interface_Ethernet_CountersPath) In_8021QFrames() *Interface_Ethernet_Counters_In_8021QFramesPath {
	return &Interface_Ethernet_Counters_In_8021QFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-8021q-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// In_8021QFrames (leaf): Number of 802.1q tagged frames received on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-8021q-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-8021q-frames"
func (n *Interface_Ethernet_CountersPathAny) In_8021QFrames() *Interface_Ethernet_Counters_In_8021QFramesPathAny {
	return &Interface_Ethernet_Counters_In_8021QFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-8021q-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InBlockErrors (leaf): The number of received errored blocks. Error detection codes
// are capable of detecting whether one or more errors have
// occurred in a given sequence of bits – the block. It is
// normally not possible to determine the exact number of errored
// bits within the block
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-block-errors"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-block-errors"
func (n *Interface_Ethernet_CountersPath) InBlockErrors() *Interface_Ethernet_Counters_InBlockErrorsPath {
	return &Interface_Ethernet_Counters_InBlockErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-block-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InBlockErrors (leaf): The number of received errored blocks. Error detection codes
// are capable of detecting whether one or more errors have
// occurred in a given sequence of bits – the block. It is
// normally not possible to determine the exact number of errored
// bits within the block
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-block-errors"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-block-errors"
func (n *Interface_Ethernet_CountersPathAny) InBlockErrors() *Interface_Ethernet_Counters_InBlockErrorsPathAny {
	return &Interface_Ethernet_Counters_InBlockErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-block-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InCarrierErrors (leaf): The number of received errored frames due to a carrier issue.
// The value refers to MIB counter for
// dot3StatsCarrierSenseErrors
// oid=1.3.6.1.2.1.10.7.2.1.11
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-carrier-errors"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-carrier-errors"
func (n *Interface_Ethernet_CountersPath) InCarrierErrors() *Interface_Ethernet_Counters_InCarrierErrorsPath {
	return &Interface_Ethernet_Counters_InCarrierErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-carrier-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InCarrierErrors (leaf): The number of received errored frames due to a carrier issue.
// The value refers to MIB counter for
// dot3StatsCarrierSenseErrors
// oid=1.3.6.1.2.1.10.7.2.1.11
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-carrier-errors"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-carrier-errors"
func (n *Interface_Ethernet_CountersPathAny) InCarrierErrors() *Interface_Ethernet_Counters_InCarrierErrorsPathAny {
	return &Interface_Ethernet_Counters_InCarrierErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-carrier-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InCrcErrors (leaf): The total number of frames received that
// had a length (excluding framing bits, but
// including FCS octets) of between 64 and 1518
// octets, inclusive, but had either a bad
// Frame Check Sequence (FCS) with an integral
// number of octets (FCS Error) or a bad FCS with
// a non-integral number of octets (Alignment Error)
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-crc-errors"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-crc-errors"
func (n *Interface_Ethernet_CountersPath) InCrcErrors() *Interface_Ethernet_Counters_InCrcErrorsPath {
	return &Interface_Ethernet_Counters_InCrcErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-crc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InCrcErrors (leaf): The total number of frames received that
// had a length (excluding framing bits, but
// including FCS octets) of between 64 and 1518
// octets, inclusive, but had either a bad
// Frame Check Sequence (FCS) with an integral
// number of octets (FCS Error) or a bad FCS with
// a non-integral number of octets (Alignment Error)
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-crc-errors"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-crc-errors"
func (n *Interface_Ethernet_CountersPathAny) InCrcErrors() *Interface_Ethernet_Counters_InCrcErrorsPathAny {
	return &Interface_Ethernet_Counters_InCrcErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-crc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InDistribution (container): The size distribution of the received frames.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-distribution"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution"
func (n *Interface_Ethernet_CountersPath) InDistribution() *Interface_Ethernet_Counters_InDistributionPath {
	return &Interface_Ethernet_Counters_InDistributionPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-distribution"},
			map[string]interface{}{},
			n,
		),
	}
}

// InDistribution (container): The size distribution of the received frames.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-distribution"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution"
func (n *Interface_Ethernet_CountersPathAny) InDistribution() *Interface_Ethernet_Counters_InDistributionPathAny {
	return &Interface_Ethernet_Counters_InDistributionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-distribution"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFragmentFrames (leaf): The total number of frames received that were less than
// 64 octets in length (excluding framing bits but including
// FCS octets) and had either a bad Frame Check Sequence
// (FCS) with an integral number of octets (FCS Error) or a
// bad FCS with a non-integral number of octets (Alignment
// Error).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-fragment-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-fragment-frames"
func (n *Interface_Ethernet_CountersPath) InFragmentFrames() *Interface_Ethernet_Counters_InFragmentFramesPath {
	return &Interface_Ethernet_Counters_InFragmentFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-fragment-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFragmentFrames (leaf): The total number of frames received that were less than
// 64 octets in length (excluding framing bits but including
// FCS octets) and had either a bad Frame Check Sequence
// (FCS) with an integral number of octets (FCS Error) or a
// bad FCS with a non-integral number of octets (Alignment
// Error).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-fragment-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-fragment-frames"
func (n *Interface_Ethernet_CountersPathAny) InFragmentFrames() *Interface_Ethernet_Counters_InFragmentFramesPathAny {
	return &Interface_Ethernet_Counters_InFragmentFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-fragment-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InInterruptedTx (leaf): The number of received errored frames due to interrupted
// transmission issue. The value refers to MIB counter for
// dot3StatsDeferredTransmissions
// oid=1.3.6.1.2.1.10.7.2.1.7
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-interrupted-tx"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-interrupted-tx"
func (n *Interface_Ethernet_CountersPath) InInterruptedTx() *Interface_Ethernet_Counters_InInterruptedTxPath {
	return &Interface_Ethernet_Counters_InInterruptedTxPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-interrupted-tx"},
			map[string]interface{}{},
			n,
		),
	}
}

// InInterruptedTx (leaf): The number of received errored frames due to interrupted
// transmission issue. The value refers to MIB counter for
// dot3StatsDeferredTransmissions
// oid=1.3.6.1.2.1.10.7.2.1.7
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-interrupted-tx"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-interrupted-tx"
func (n *Interface_Ethernet_CountersPathAny) InInterruptedTx() *Interface_Ethernet_Counters_InInterruptedTxPathAny {
	return &Interface_Ethernet_Counters_InInterruptedTxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-interrupted-tx"},
			map[string]interface{}{},
			n,
		),
	}
}

// InJabberFrames (leaf): Number of jabber frames received on the
// interface.  Jabber frames are typically defined as oversize
// frames which also have a bad CRC.  Implementations may use
// slightly different definitions of what constitutes a jabber
// frame.  Often indicative of a NIC hardware problem.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-jabber-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-jabber-frames"
func (n *Interface_Ethernet_CountersPath) InJabberFrames() *Interface_Ethernet_Counters_InJabberFramesPath {
	return &Interface_Ethernet_Counters_InJabberFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-jabber-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InJabberFrames (leaf): Number of jabber frames received on the
// interface.  Jabber frames are typically defined as oversize
// frames which also have a bad CRC.  Implementations may use
// slightly different definitions of what constitutes a jabber
// frame.  Often indicative of a NIC hardware problem.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-jabber-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-jabber-frames"
func (n *Interface_Ethernet_CountersPathAny) InJabberFrames() *Interface_Ethernet_Counters_InJabberFramesPathAny {
	return &Interface_Ethernet_Counters_InJabberFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-jabber-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLateCollision (leaf): The number of received errored frames due to late collision
// issue. The value refers to MIB counter for
// dot3StatsLateCollisions
// oid=1.3.6.1.2.1.10.7.2.1.8
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-late-collision"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-late-collision"
func (n *Interface_Ethernet_CountersPath) InLateCollision() *Interface_Ethernet_Counters_InLateCollisionPath {
	return &Interface_Ethernet_Counters_InLateCollisionPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-late-collision"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLateCollision (leaf): The number of received errored frames due to late collision
// issue. The value refers to MIB counter for
// dot3StatsLateCollisions
// oid=1.3.6.1.2.1.10.7.2.1.8
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-late-collision"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-late-collision"
func (n *Interface_Ethernet_CountersPathAny) InLateCollision() *Interface_Ethernet_Counters_InLateCollisionPathAny {
	return &Interface_Ethernet_Counters_InLateCollisionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-late-collision"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMacControlFrames (leaf): MAC layer control frames received on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-mac-control-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-mac-control-frames"
func (n *Interface_Ethernet_CountersPath) InMacControlFrames() *Interface_Ethernet_Counters_InMacControlFramesPath {
	return &Interface_Ethernet_Counters_InMacControlFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-mac-control-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMacControlFrames (leaf): MAC layer control frames received on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-mac-control-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-mac-control-frames"
func (n *Interface_Ethernet_CountersPathAny) InMacControlFrames() *Interface_Ethernet_Counters_InMacControlFramesPathAny {
	return &Interface_Ethernet_Counters_InMacControlFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-mac-control-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMacErrorsRx (leaf): The number of received errored frames due to MAC errors
// received. The value refers to MIB counter for
// dot3StatsInternalMacReceiveErrors
// oid=1.3.6.1.2.1.10.7.2.1.16
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-mac-errors-rx"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-mac-errors-rx"
func (n *Interface_Ethernet_CountersPath) InMacErrorsRx() *Interface_Ethernet_Counters_InMacErrorsRxPath {
	return &Interface_Ethernet_Counters_InMacErrorsRxPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-mac-errors-rx"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMacErrorsRx (leaf): The number of received errored frames due to MAC errors
// received. The value refers to MIB counter for
// dot3StatsInternalMacReceiveErrors
// oid=1.3.6.1.2.1.10.7.2.1.16
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-mac-errors-rx"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-mac-errors-rx"
func (n *Interface_Ethernet_CountersPathAny) InMacErrorsRx() *Interface_Ethernet_Counters_InMacErrorsRxPathAny {
	return &Interface_Ethernet_Counters_InMacErrorsRxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-mac-errors-rx"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMacPauseFrames (leaf): MAC layer PAUSE frames received on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-mac-pause-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-mac-pause-frames"
func (n *Interface_Ethernet_CountersPath) InMacPauseFrames() *Interface_Ethernet_Counters_InMacPauseFramesPath {
	return &Interface_Ethernet_Counters_InMacPauseFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-mac-pause-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMacPauseFrames (leaf): MAC layer PAUSE frames received on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-mac-pause-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-mac-pause-frames"
func (n *Interface_Ethernet_CountersPathAny) InMacPauseFrames() *Interface_Ethernet_Counters_InMacPauseFramesPathAny {
	return &Interface_Ethernet_Counters_InMacPauseFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-mac-pause-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMaxsizeExceeded (leaf): The total number frames received that are well-formed but
// dropped due to exceeding the maximum frame size on the interface
// (e.g., MTU or MRU)
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-maxsize-exceeded"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-maxsize-exceeded"
func (n *Interface_Ethernet_CountersPath) InMaxsizeExceeded() *Interface_Ethernet_Counters_InMaxsizeExceededPath {
	return &Interface_Ethernet_Counters_InMaxsizeExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-maxsize-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// InMaxsizeExceeded (leaf): The total number frames received that are well-formed but
// dropped due to exceeding the maximum frame size on the interface
// (e.g., MTU or MRU)
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-maxsize-exceeded"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-maxsize-exceeded"
func (n *Interface_Ethernet_CountersPathAny) InMaxsizeExceeded() *Interface_Ethernet_Counters_InMaxsizeExceededPathAny {
	return &Interface_Ethernet_Counters_InMaxsizeExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-maxsize-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOversizeFrames (leaf): The total number of frames received that were
// longer than 1518 octets (excluding framing bits,
// but including FCS octets) and were otherwise
// well formed.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-oversize-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-oversize-frames"
func (n *Interface_Ethernet_CountersPath) InOversizeFrames() *Interface_Ethernet_Counters_InOversizeFramesPath {
	return &Interface_Ethernet_Counters_InOversizeFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-oversize-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOversizeFrames (leaf): The total number of frames received that were
// longer than 1518 octets (excluding framing bits,
// but including FCS octets) and were otherwise
// well formed.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-oversize-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-oversize-frames"
func (n *Interface_Ethernet_CountersPathAny) InOversizeFrames() *Interface_Ethernet_Counters_InOversizeFramesPathAny {
	return &Interface_Ethernet_Counters_InOversizeFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-oversize-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSingleCollision (leaf): The number of received errored frames due to single collision
// issue. The value refers to MIB counter for
// dot3StatsSingleCollisionFrames
// oid=1.3.6.1.2.1.10.7.2.1.4
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-single-collision"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-single-collision"
func (n *Interface_Ethernet_CountersPath) InSingleCollision() *Interface_Ethernet_Counters_InSingleCollisionPath {
	return &Interface_Ethernet_Counters_InSingleCollisionPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-single-collision"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSingleCollision (leaf): The number of received errored frames due to single collision
// issue. The value refers to MIB counter for
// dot3StatsSingleCollisionFrames
// oid=1.3.6.1.2.1.10.7.2.1.4
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-single-collision"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-single-collision"
func (n *Interface_Ethernet_CountersPathAny) InSingleCollision() *Interface_Ethernet_Counters_InSingleCollisionPathAny {
	return &Interface_Ethernet_Counters_InSingleCollisionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-single-collision"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSymbolError (leaf): The number of received errored frames due to symbol error.
// The value refers to MIB counter for
// in-symbol-error
// oid=1.3.6.1.2.1.10.7.2.1.18
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-symbol-error"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-symbol-error"
func (n *Interface_Ethernet_CountersPath) InSymbolError() *Interface_Ethernet_Counters_InSymbolErrorPath {
	return &Interface_Ethernet_Counters_InSymbolErrorPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-symbol-error"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSymbolError (leaf): The number of received errored frames due to symbol error.
// The value refers to MIB counter for
// in-symbol-error
// oid=1.3.6.1.2.1.10.7.2.1.18
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-symbol-error"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-symbol-error"
func (n *Interface_Ethernet_CountersPathAny) InSymbolError() *Interface_Ethernet_Counters_InSymbolErrorPathAny {
	return &Interface_Ethernet_Counters_InSymbolErrorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-symbol-error"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUndersizeFrames (leaf): The total number of frames received that were
// less than 64 octets long (excluding framing bits,
// but including FCS octets) and were otherwise well
// formed.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-undersize-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-undersize-frames"
func (n *Interface_Ethernet_CountersPath) InUndersizeFrames() *Interface_Ethernet_Counters_InUndersizeFramesPath {
	return &Interface_Ethernet_Counters_InUndersizeFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-undersize-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUndersizeFrames (leaf): The total number of frames received that were
// less than 64 octets long (excluding framing bits,
// but including FCS octets) and were otherwise well
// formed.
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-undersize-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-undersize-frames"
func (n *Interface_Ethernet_CountersPathAny) InUndersizeFrames() *Interface_Ethernet_Counters_InUndersizeFramesPathAny {
	return &Interface_Ethernet_Counters_InUndersizeFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-undersize-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// Out_8021QFrames (leaf): Number of 802.1q tagged frames sent on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-8021q-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-8021q-frames"
func (n *Interface_Ethernet_CountersPath) Out_8021QFrames() *Interface_Ethernet_Counters_Out_8021QFramesPath {
	return &Interface_Ethernet_Counters_Out_8021QFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-8021q-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// Out_8021QFrames (leaf): Number of 802.1q tagged frames sent on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-8021q-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-8021q-frames"
func (n *Interface_Ethernet_CountersPathAny) Out_8021QFrames() *Interface_Ethernet_Counters_Out_8021QFramesPathAny {
	return &Interface_Ethernet_Counters_Out_8021QFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-8021q-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMacControlFrames (leaf): MAC layer control frames sent on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-mac-control-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-mac-control-frames"
func (n *Interface_Ethernet_CountersPath) OutMacControlFrames() *Interface_Ethernet_Counters_OutMacControlFramesPath {
	return &Interface_Ethernet_Counters_OutMacControlFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-mac-control-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMacControlFrames (leaf): MAC layer control frames sent on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-mac-control-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-mac-control-frames"
func (n *Interface_Ethernet_CountersPathAny) OutMacControlFrames() *Interface_Ethernet_Counters_OutMacControlFramesPathAny {
	return &Interface_Ethernet_Counters_OutMacControlFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-mac-control-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMacErrorsTx (leaf): The number of sent errored frames due to MAC errors
// transmitted. The value refers to MIB counter for
// dot3StatsInternalMacTransmitErrors
// oid=1.3.6.1.2.1.10.7.2.1.10
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-mac-errors-tx"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-mac-errors-tx"
func (n *Interface_Ethernet_CountersPath) OutMacErrorsTx() *Interface_Ethernet_Counters_OutMacErrorsTxPath {
	return &Interface_Ethernet_Counters_OutMacErrorsTxPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-mac-errors-tx"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMacErrorsTx (leaf): The number of sent errored frames due to MAC errors
// transmitted. The value refers to MIB counter for
// dot3StatsInternalMacTransmitErrors
// oid=1.3.6.1.2.1.10.7.2.1.10
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-mac-errors-tx"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-mac-errors-tx"
func (n *Interface_Ethernet_CountersPathAny) OutMacErrorsTx() *Interface_Ethernet_Counters_OutMacErrorsTxPathAny {
	return &Interface_Ethernet_Counters_OutMacErrorsTxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-mac-errors-tx"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMacPauseFrames (leaf): MAC layer PAUSE frames sent on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-mac-pause-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-mac-pause-frames"
func (n *Interface_Ethernet_CountersPath) OutMacPauseFrames() *Interface_Ethernet_Counters_OutMacPauseFramesPath {
	return &Interface_Ethernet_Counters_OutMacPauseFramesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-mac-pause-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutMacPauseFrames (leaf): MAC layer PAUSE frames sent on the interface
// ----------------------------------------
// Defining module: "openconfig-if-ethernet"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "out-mac-pause-frames"
// Path from root: "/interfaces/interface/ethernet/state/counters/out-mac-pause-frames"
func (n *Interface_Ethernet_CountersPathAny) OutMacPauseFrames() *Interface_Ethernet_Counters_OutMacPauseFramesPathAny {
	return &Interface_Ethernet_Counters_OutMacPauseFramesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-mac-pause-frames"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_Ethernet_Counters_InDistributionPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution YANG schema element.
type Interface_Ethernet_Counters_InDistributionPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistributionPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution YANG schema element.
type Interface_Ethernet_Counters_InDistributionPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-1024-1518-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-1024-1518-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-128-255-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-128-255-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-256-511-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-256-511-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-512-1023-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-512-1023-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-64-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-64-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPath represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-65-127-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-65-127-octets YANG schema element.
type Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPathAny struct {
	*ygot.NodePath
}

// InFrames_1024_1518Octets (leaf): Number of good and bad packets received that were
// between 1024 and 1518 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-1024-1518-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-1024-1518-octets"
func (n *Interface_Ethernet_Counters_InDistributionPath) InFrames_1024_1518Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPath {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-1024-1518-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_1024_1518Octets (leaf): Number of good and bad packets received that were
// between 1024 and 1518 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-1024-1518-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-1024-1518-octets"
func (n *Interface_Ethernet_Counters_InDistributionPathAny) InFrames_1024_1518Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPathAny {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_1024_1518OctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-1024-1518-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_128_255Octets (leaf): Number of good and bad packets received that were
// between 128 and 255 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-128-255-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-128-255-octets"
func (n *Interface_Ethernet_Counters_InDistributionPath) InFrames_128_255Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPath {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-128-255-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_128_255Octets (leaf): Number of good and bad packets received that were
// between 128 and 255 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-128-255-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-128-255-octets"
func (n *Interface_Ethernet_Counters_InDistributionPathAny) InFrames_128_255Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPathAny {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_128_255OctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-128-255-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_256_511Octets (leaf): Number of good and bad packets received that were
// between 256 and 511 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-256-511-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-256-511-octets"
func (n *Interface_Ethernet_Counters_InDistributionPath) InFrames_256_511Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPath {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-256-511-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_256_511Octets (leaf): Number of good and bad packets received that were
// between 256 and 511 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-256-511-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-256-511-octets"
func (n *Interface_Ethernet_Counters_InDistributionPathAny) InFrames_256_511Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPathAny {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_256_511OctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-256-511-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_512_1023Octets (leaf): Number of good and bad packets received that were
// between 512 and 1023 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-512-1023-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-512-1023-octets"
func (n *Interface_Ethernet_Counters_InDistributionPath) InFrames_512_1023Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPath {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-512-1023-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_512_1023Octets (leaf): Number of good and bad packets received that were
// between 512 and 1023 bytes in length inclusive
// (excluding framing bits but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-512-1023-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-512-1023-octets"
func (n *Interface_Ethernet_Counters_InDistributionPathAny) InFrames_512_1023Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPathAny {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_512_1023OctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-512-1023-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_64Octets (leaf): Number of packets (including bad packets) received that
// were 64 bytes in length (excluding framing bits but
// including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-64-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-64-octets"
func (n *Interface_Ethernet_Counters_InDistributionPath) InFrames_64Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPath {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-64-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_64Octets (leaf): Number of packets (including bad packets) received that
// were 64 bytes in length (excluding framing bits but
// including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-64-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-64-octets"
func (n *Interface_Ethernet_Counters_InDistributionPathAny) InFrames_64Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPathAny {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_64OctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-64-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_65_127Octets (leaf): Number of good and bad packets received that were
// between 65 and 127 bytes in length (excluding framing bits
// but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-65-127-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-65-127-octets"
func (n *Interface_Ethernet_Counters_InDistributionPath) InFrames_65_127Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPath {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-65-127-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InFrames_65_127Octets (leaf): Number of good and bad packets received that were
// between 65 and 127 bytes in length (excluding framing bits
// but including FCS bytes).
// ----------------------------------------
// Defining module: "openconfig-if-ethernet-ext"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "in-frames-65-127-octets"
// Path from root: "/interfaces/interface/ethernet/state/counters/in-distribution/in-frames-65-127-octets"
func (n *Interface_Ethernet_Counters_InDistributionPathAny) InFrames_65_127Octets() *Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPathAny {
	return &Interface_Ethernet_Counters_InDistribution_InFrames_65_127OctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-frames-65-127-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_Ethernet_SwitchedVlanPath represents the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlanPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlanPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlanPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_AccessVlanPath represents the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/access-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlan_AccessVlanPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_AccessVlanPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/access-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlan_AccessVlanPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_InterfaceModePath represents the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/interface-mode YANG schema element.
type Interface_Ethernet_SwitchedVlan_InterfaceModePath struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_InterfaceModePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/interface-mode YANG schema element.
type Interface_Ethernet_SwitchedVlan_InterfaceModePathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_NativeVlanPath represents the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/native-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlan_NativeVlanPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_NativeVlanPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/native-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlan_NativeVlanPathAny struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_TrunkVlansPath represents the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans YANG schema element.
type Interface_Ethernet_SwitchedVlan_TrunkVlansPath struct {
	*ygot.NodePath
}

// Interface_Ethernet_SwitchedVlan_TrunkVlansPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans YANG schema element.
type Interface_Ethernet_SwitchedVlan_TrunkVlansPathAny struct {
	*ygot.NodePath
}

// AccessVlan (leaf): Assign the access vlan to the access port.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/access-vlan"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/access-vlan"
func (n *Interface_Ethernet_SwitchedVlanPath) AccessVlan() *Interface_Ethernet_SwitchedVlan_AccessVlanPath {
	return &Interface_Ethernet_SwitchedVlan_AccessVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "access-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessVlan (leaf): Assign the access vlan to the access port.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/access-vlan"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/access-vlan"
func (n *Interface_Ethernet_SwitchedVlanPathAny) AccessVlan() *Interface_Ethernet_SwitchedVlan_AccessVlanPathAny {
	return &Interface_Ethernet_SwitchedVlan_AccessVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "access-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceMode (leaf): Set the interface to access or trunk mode for
// VLANs
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/interface-mode"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/interface-mode"
func (n *Interface_Ethernet_SwitchedVlanPath) InterfaceMode() *Interface_Ethernet_SwitchedVlan_InterfaceModePath {
	return &Interface_Ethernet_SwitchedVlan_InterfaceModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceMode (leaf): Set the interface to access or trunk mode for
// VLANs
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/interface-mode"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/interface-mode"
func (n *Interface_Ethernet_SwitchedVlanPathAny) InterfaceMode() *Interface_Ethernet_SwitchedVlan_InterfaceModePathAny {
	return &Interface_Ethernet_SwitchedVlan_InterfaceModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NativeVlan (leaf): Set the native VLAN id for untagged frames arriving on
// a trunk interface.  Tagged frames sent on an interface
// configured with a native VLAN should have their tags
// stripped prior to transmission. This configuration is only
// valid on a trunk interface.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/native-vlan"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/native-vlan"
func (n *Interface_Ethernet_SwitchedVlanPath) NativeVlan() *Interface_Ethernet_SwitchedVlan_NativeVlanPath {
	return &Interface_Ethernet_SwitchedVlan_NativeVlanPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "native-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// NativeVlan (leaf): Set the native VLAN id for untagged frames arriving on
// a trunk interface.  Tagged frames sent on an interface
// configured with a native VLAN should have their tags
// stripped prior to transmission. This configuration is only
// valid on a trunk interface.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/native-vlan"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/native-vlan"
func (n *Interface_Ethernet_SwitchedVlanPathAny) NativeVlan() *Interface_Ethernet_SwitchedVlan_NativeVlanPathAny {
	return &Interface_Ethernet_SwitchedVlan_NativeVlanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "native-vlan"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrunkVlans (leaf-list): Specify VLANs, or ranges thereof, that the interface may
// carry when in trunk mode.  If not specified, all VLANs are
// allowed on the interface. Ranges are specified in the form
// x..y, where x<y - ranges are assumed to be inclusive (such
// that the VLAN range is x <= range <= y.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/trunk-vlans"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans"
func (n *Interface_Ethernet_SwitchedVlanPath) TrunkVlans() *Interface_Ethernet_SwitchedVlan_TrunkVlansPath {
	return &Interface_Ethernet_SwitchedVlan_TrunkVlansPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trunk-vlans"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrunkVlans (leaf-list): Specify VLANs, or ranges thereof, that the interface may
// carry when in trunk mode.  If not specified, all VLANs are
// allowed on the interface. Ranges are specified in the form
// x..y, where x<y - ranges are assumed to be inclusive (such
// that the VLAN range is x <= range <= y.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/trunk-vlans"
// Path from root: "/interfaces/interface/ethernet/switched-vlan/config/trunk-vlans"
func (n *Interface_Ethernet_SwitchedVlanPathAny) TrunkVlans() *Interface_Ethernet_SwitchedVlan_TrunkVlansPathAny {
	return &Interface_Ethernet_SwitchedVlan_TrunkVlansPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trunk-vlans"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_HoldTimePath represents the /openconfig-interfaces/interfaces/interface/hold-time YANG schema element.
type Interface_HoldTimePath struct {
	*ygot.NodePath
}

// Interface_HoldTimePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/hold-time YANG schema element.
type Interface_HoldTimePathAny struct {
	*ygot.NodePath
}

// Interface_HoldTime_DownPath represents the /openconfig-interfaces/interfaces/interface/hold-time/config/down YANG schema element.
type Interface_HoldTime_DownPath struct {
	*ygot.NodePath
}

// Interface_HoldTime_DownPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/hold-time/config/down YANG schema element.
type Interface_HoldTime_DownPathAny struct {
	*ygot.NodePath
}

// Interface_HoldTime_UpPath represents the /openconfig-interfaces/interfaces/interface/hold-time/config/up YANG schema element.
type Interface_HoldTime_UpPath struct {
	*ygot.NodePath
}

// Interface_HoldTime_UpPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/hold-time/config/up YANG schema element.
type Interface_HoldTime_UpPathAny struct {
	*ygot.NodePath
}

// Down (leaf): Dampens advertisement when the interface transitions from
// up to down.  A zero value means dampening is turned off,
// i.e., immediate notification.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/down"
// Path from root: "/interfaces/interface/hold-time/config/down"
func (n *Interface_HoldTimePath) Down() *Interface_HoldTime_DownPath {
	return &Interface_HoldTime_DownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "down"},
			map[string]interface{}{},
			n,
		),
	}
}

// Down (leaf): Dampens advertisement when the interface transitions from
// up to down.  A zero value means dampening is turned off,
// i.e., immediate notification.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/down"
// Path from root: "/interfaces/interface/hold-time/config/down"
func (n *Interface_HoldTimePathAny) Down() *Interface_HoldTime_DownPathAny {
	return &Interface_HoldTime_DownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "down"},
			map[string]interface{}{},
			n,
		),
	}
}

// Up (leaf): Dampens advertisement when the interface
// transitions from down to up.  A zero value means dampening
// is turned off, i.e., immediate notification.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/up"
// Path from root: "/interfaces/interface/hold-time/config/up"
func (n *Interface_HoldTimePath) Up() *Interface_HoldTime_UpPath {
	return &Interface_HoldTime_UpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "up"},
			map[string]interface{}{},
			n,
		),
	}
}

// Up (leaf): Dampens advertisement when the interface
// transitions from down to up.  A zero value means dampening
// is turned off, i.e., immediate notification.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/up"
// Path from root: "/interfaces/interface/hold-time/config/up"
func (n *Interface_HoldTimePathAny) Up() *Interface_HoldTime_UpPathAny {
	return &Interface_HoldTime_UpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "up"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface_PenaltyBasedAiedPath represents the /openconfig-interfaces/interfaces/interface/penalty-based-aied YANG schema element.
type Interface_PenaltyBasedAiedPath struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAiedPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/penalty-based-aied YANG schema element.
type Interface_PenaltyBasedAiedPathAny struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_DecayHalfLifePath represents the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/decay-half-life YANG schema element.
type Interface_PenaltyBasedAied_DecayHalfLifePath struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_DecayHalfLifePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/decay-half-life YANG schema element.
type Interface_PenaltyBasedAied_DecayHalfLifePathAny struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_FlapPenaltyPath represents the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/flap-penalty YANG schema element.
type Interface_PenaltyBasedAied_FlapPenaltyPath struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_FlapPenaltyPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/flap-penalty YANG schema element.
type Interface_PenaltyBasedAied_FlapPenaltyPathAny struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_MaxSuppressTimePath represents the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/max-suppress-time YANG schema element.
type Interface_PenaltyBasedAied_MaxSuppressTimePath struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_MaxSuppressTimePathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/max-suppress-time YANG schema element.
type Interface_PenaltyBasedAied_MaxSuppressTimePathAny struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_ReuseThresholdPath represents the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/reuse-threshold YANG schema element.
type Interface_PenaltyBasedAied_ReuseThresholdPath struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_ReuseThresholdPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/reuse-threshold YANG schema element.
type Interface_PenaltyBasedAied_ReuseThresholdPathAny struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_SuppressThresholdPath represents the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/suppress-threshold YANG schema element.
type Interface_PenaltyBasedAied_SuppressThresholdPath struct {
	*ygot.NodePath
}

// Interface_PenaltyBasedAied_SuppressThresholdPathAny represents the wildcard version of the /openconfig-interfaces/interfaces/interface/penalty-based-aied/config/suppress-threshold YANG schema element.
type Interface_PenaltyBasedAied_SuppressThresholdPathAny struct {
	*ygot.NodePath
}

// DecayHalfLife (leaf): The amount of time after which an interface’s penalty is decreased by half. Decay-half-time should not be more than max-suppress-time.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/decay-half-life"
// Path from root: "/interfaces/interface/penalty-based-aied/config/decay-half-life"
func (n *Interface_PenaltyBasedAiedPath) DecayHalfLife() *Interface_PenaltyBasedAied_DecayHalfLifePath {
	return &Interface_PenaltyBasedAied_DecayHalfLifePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decay-half-life"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecayHalfLife (leaf): The amount of time after which an interface’s penalty is decreased by half. Decay-half-time should not be more than max-suppress-time.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/decay-half-life"
// Path from root: "/interfaces/interface/penalty-based-aied/config/decay-half-life"
func (n *Interface_PenaltyBasedAiedPathAny) DecayHalfLife() *Interface_PenaltyBasedAied_DecayHalfLifePathAny {
	return &Interface_PenaltyBasedAied_DecayHalfLifePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "decay-half-life"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlapPenalty (leaf): A penalty that each down event costs. A value of 0 indicates the config is disabled.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/flap-penalty"
// Path from root: "/interfaces/interface/penalty-based-aied/config/flap-penalty"
func (n *Interface_PenaltyBasedAiedPath) FlapPenalty() *Interface_PenaltyBasedAied_FlapPenaltyPath {
	return &Interface_PenaltyBasedAied_FlapPenaltyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "flap-penalty"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlapPenalty (leaf): A penalty that each down event costs. A value of 0 indicates the config is disabled.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/flap-penalty"
// Path from root: "/interfaces/interface/penalty-based-aied/config/flap-penalty"
func (n *Interface_PenaltyBasedAiedPathAny) FlapPenalty() *Interface_PenaltyBasedAied_FlapPenaltyPathAny {
	return &Interface_PenaltyBasedAied_FlapPenaltyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "flap-penalty"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxSuppressTime (leaf): Maximum time an interface can remain damped since the last link down event no matter how unstable it has been prior to this period of stability. In a damped state, the interface’s state change will not be advertised.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/max-suppress-time"
// Path from root: "/interfaces/interface/penalty-based-aied/config/max-suppress-time"
func (n *Interface_PenaltyBasedAiedPath) MaxSuppressTime() *Interface_PenaltyBasedAied_MaxSuppressTimePath {
	return &Interface_PenaltyBasedAied_MaxSuppressTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-suppress-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxSuppressTime (leaf): Maximum time an interface can remain damped since the last link down event no matter how unstable it has been prior to this period of stability. In a damped state, the interface’s state change will not be advertised.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/max-suppress-time"
// Path from root: "/interfaces/interface/penalty-based-aied/config/max-suppress-time"
func (n *Interface_PenaltyBasedAiedPathAny) MaxSuppressTime() *Interface_PenaltyBasedAied_MaxSuppressTimePathAny {
	return &Interface_PenaltyBasedAied_MaxSuppressTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-suppress-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReuseThreshold (leaf): When the accumulated penalty decreases to this reuse threshold, the interface is not damped anymore. Interface state changes are advertised to applications. A value of 0 indicates config is disabled.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/reuse-threshold"
// Path from root: "/interfaces/interface/penalty-based-aied/config/reuse-threshold"
func (n *Interface_PenaltyBasedAiedPath) ReuseThreshold() *Interface_PenaltyBasedAied_ReuseThresholdPath {
	return &Interface_PenaltyBasedAied_ReuseThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reuse-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReuseThreshold (leaf): When the accumulated penalty decreases to this reuse threshold, the interface is not damped anymore. Interface state changes are advertised to applications. A value of 0 indicates config is disabled.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/reuse-threshold"
// Path from root: "/interfaces/interface/penalty-based-aied/config/reuse-threshold"
func (n *Interface_PenaltyBasedAiedPathAny) ReuseThreshold() *Interface_PenaltyBasedAied_ReuseThresholdPathAny {
	return &Interface_PenaltyBasedAied_ReuseThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reuse-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressThreshold (leaf): The accumulated penalty that triggers the damping of an interface. A value of 0 indicates config is disabled.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/suppress-threshold"
// Path from root: "/interfaces/interface/penalty-based-aied/config/suppress-threshold"
func (n *Interface_PenaltyBasedAiedPath) SuppressThreshold() *Interface_PenaltyBasedAied_SuppressThresholdPath {
	return &Interface_PenaltyBasedAied_SuppressThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "suppress-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressThreshold (leaf): The accumulated penalty that triggers the damping of an interface. A value of 0 indicates config is disabled.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-interfaces"
// Path from parent: "config/suppress-threshold"
// Path from root: "/interfaces/interface/penalty-based-aied/config/suppress-threshold"
func (n *Interface_PenaltyBasedAiedPathAny) SuppressThreshold() *Interface_PenaltyBasedAied_SuppressThresholdPathAny {
	return &Interface_PenaltyBasedAied_SuppressThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "suppress-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}
